// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package github

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// FetchUserProjectResponse is returned by FetchUserProject on success.
type FetchUserProjectResponse struct {
	// Lookup a user by login.
	User FetchUserProjectUser `json:"user"`
}

// GetUser returns FetchUserProjectResponse.User, and is useful for accessing the field via an interface.
func (v *FetchUserProjectResponse) GetUser() FetchUserProjectUser { return v.User }

// FetchUserProjectUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type FetchUserProjectUser struct {
	// Find a project by number.
	ProjectV2 FetchUserProjectUserProjectV2 `json:"projectV2"`
}

// GetProjectV2 returns FetchUserProjectUser.ProjectV2, and is useful for accessing the field via an interface.
func (v *FetchUserProjectUser) GetProjectV2() FetchUserProjectUserProjectV2 { return v.ProjectV2 }

// FetchUserProjectUserProjectV2 includes the requested fields of the GraphQL type ProjectV2.
// The GraphQL type's documentation follows.
//
// New projects that manage issues, pull requests and drafts using tables and boards.
type FetchUserProjectUserProjectV2 struct {
	// The Node ID of the ProjectV2 object
	Id string `json:"id"`
}

// GetId returns FetchUserProjectUserProjectV2.Id, and is useful for accessing the field via an interface.
func (v *FetchUserProjectUserProjectV2) GetId() string { return v.Id }

// PaginateProjectItemsNode includes the requested fields of the GraphQL interface Node.
//
// PaginateProjectItemsNode is implemented by the following types:
// PaginateProjectItemsNodeAddedToMergeQueueEvent
// PaginateProjectItemsNodeAddedToProjectEvent
// PaginateProjectItemsNodeApp
// PaginateProjectItemsNodeAssignedEvent
// PaginateProjectItemsNodeAutoMergeDisabledEvent
// PaginateProjectItemsNodeAutoMergeEnabledEvent
// PaginateProjectItemsNodeAutoRebaseEnabledEvent
// PaginateProjectItemsNodeAutoSquashEnabledEvent
// PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent
// PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent
// PaginateProjectItemsNodeBaseRefChangedEvent
// PaginateProjectItemsNodeBaseRefDeletedEvent
// PaginateProjectItemsNodeBaseRefForcePushedEvent
// PaginateProjectItemsNodeBlob
// PaginateProjectItemsNodeBot
// PaginateProjectItemsNodeBranchProtectionRule
// PaginateProjectItemsNodeBypassForcePushAllowance
// PaginateProjectItemsNodeBypassPullRequestAllowance
// PaginateProjectItemsNodeCWE
// PaginateProjectItemsNodeCheckRun
// PaginateProjectItemsNodeCheckSuite
// PaginateProjectItemsNodeClosedEvent
// PaginateProjectItemsNodeCodeOfConduct
// PaginateProjectItemsNodeCommentDeletedEvent
// PaginateProjectItemsNodeCommit
// PaginateProjectItemsNodeCommitComment
// PaginateProjectItemsNodeCommitCommentThread
// PaginateProjectItemsNodeComparison
// PaginateProjectItemsNodeConnectedEvent
// PaginateProjectItemsNodeConvertToDraftEvent
// PaginateProjectItemsNodeConvertedNoteToIssueEvent
// PaginateProjectItemsNodeConvertedToDiscussionEvent
// PaginateProjectItemsNodeCrossReferencedEvent
// PaginateProjectItemsNodeDemilestonedEvent
// PaginateProjectItemsNodeDependencyGraphManifest
// PaginateProjectItemsNodeDeployKey
// PaginateProjectItemsNodeDeployedEvent
// PaginateProjectItemsNodeDeployment
// PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent
// PaginateProjectItemsNodeDeploymentReview
// PaginateProjectItemsNodeDeploymentStatus
// PaginateProjectItemsNodeDisconnectedEvent
// PaginateProjectItemsNodeDiscussion
// PaginateProjectItemsNodeDiscussionCategory
// PaginateProjectItemsNodeDiscussionComment
// PaginateProjectItemsNodeDiscussionPoll
// PaginateProjectItemsNodeDiscussionPollOption
// PaginateProjectItemsNodeDraftIssue
// PaginateProjectItemsNodeEnterprise
// PaginateProjectItemsNodeEnterpriseAdministratorInvitation
// PaginateProjectItemsNodeEnterpriseIdentityProvider
// PaginateProjectItemsNodeEnterpriseMemberInvitation
// PaginateProjectItemsNodeEnterpriseRepositoryInfo
// PaginateProjectItemsNodeEnterpriseServerInstallation
// PaginateProjectItemsNodeEnterpriseServerUserAccount
// PaginateProjectItemsNodeEnterpriseServerUserAccountEmail
// PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload
// PaginateProjectItemsNodeEnterpriseUserAccount
// PaginateProjectItemsNodeEnvironment
// PaginateProjectItemsNodeExternalIdentity
// PaginateProjectItemsNodeGist
// PaginateProjectItemsNodeGistComment
// PaginateProjectItemsNodeHeadRefDeletedEvent
// PaginateProjectItemsNodeHeadRefForcePushedEvent
// PaginateProjectItemsNodeHeadRefRestoredEvent
// PaginateProjectItemsNodeIpAllowListEntry
// PaginateProjectItemsNodeIssue
// PaginateProjectItemsNodeIssueComment
// PaginateProjectItemsNodeLabel
// PaginateProjectItemsNodeLabeledEvent
// PaginateProjectItemsNodeLanguage
// PaginateProjectItemsNodeLicense
// PaginateProjectItemsNodeLinkedBranch
// PaginateProjectItemsNodeLockedEvent
// PaginateProjectItemsNodeMannequin
// PaginateProjectItemsNodeMarkedAsDuplicateEvent
// PaginateProjectItemsNodeMarketplaceCategory
// PaginateProjectItemsNodeMarketplaceListing
// PaginateProjectItemsNodeMemberFeatureRequestNotification
// PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry
// PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry
// PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry
// PaginateProjectItemsNodeMentionedEvent
// PaginateProjectItemsNodeMergeQueue
// PaginateProjectItemsNodeMergeQueueEntry
// PaginateProjectItemsNodeMergedEvent
// PaginateProjectItemsNodeMigrationSource
// PaginateProjectItemsNodeMilestone
// PaginateProjectItemsNodeMilestonedEvent
// PaginateProjectItemsNodeMovedColumnsInProjectEvent
// PaginateProjectItemsNodeOIDCProvider
// PaginateProjectItemsNodeOauthApplicationCreateAuditEntry
// PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry
// PaginateProjectItemsNodeOrgAddMemberAuditEntry
// PaginateProjectItemsNodeOrgBlockUserAuditEntry
// PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry
// PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry
// PaginateProjectItemsNodeOrgCreateAuditEntry
// PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry
// PaginateProjectItemsNodeOrgDisableSamlAuditEntry
// PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry
// PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry
// PaginateProjectItemsNodeOrgEnableSamlAuditEntry
// PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry
// PaginateProjectItemsNodeOrgInviteMemberAuditEntry
// PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry
// PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry
// PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry
// PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry
// PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry
// PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry
// PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry
// PaginateProjectItemsNodeOrgRemoveMemberAuditEntry
// PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry
// PaginateProjectItemsNodeOrgRestoreMemberAuditEntry
// PaginateProjectItemsNodeOrgUnblockUserAuditEntry
// PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry
// PaginateProjectItemsNodeOrgUpdateMemberAuditEntry
// PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry
// PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry
// PaginateProjectItemsNodeOrganization
// PaginateProjectItemsNodeOrganizationIdentityProvider
// PaginateProjectItemsNodeOrganizationInvitation
// PaginateProjectItemsNodeOrganizationMigration
// PaginateProjectItemsNodePackage
// PaginateProjectItemsNodePackageFile
// PaginateProjectItemsNodePackageTag
// PaginateProjectItemsNodePackageVersion
// PaginateProjectItemsNodePinnedDiscussion
// PaginateProjectItemsNodePinnedEnvironment
// PaginateProjectItemsNodePinnedEvent
// PaginateProjectItemsNodePinnedIssue
// PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry
// PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry
// PaginateProjectItemsNodeProject
// PaginateProjectItemsNodeProjectCard
// PaginateProjectItemsNodeProjectColumn
// PaginateProjectItemsNodeProjectV2
// PaginateProjectItemsNodeProjectV2Field
// PaginateProjectItemsNodeProjectV2Item
// PaginateProjectItemsNodeProjectV2ItemFieldDateValue
// PaginateProjectItemsNodeProjectV2ItemFieldIterationValue
// PaginateProjectItemsNodeProjectV2ItemFieldNumberValue
// PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue
// PaginateProjectItemsNodeProjectV2ItemFieldTextValue
// PaginateProjectItemsNodeProjectV2IterationField
// PaginateProjectItemsNodeProjectV2SingleSelectField
// PaginateProjectItemsNodeProjectV2StatusUpdate
// PaginateProjectItemsNodeProjectV2View
// PaginateProjectItemsNodeProjectV2Workflow
// PaginateProjectItemsNodePublicKey
// PaginateProjectItemsNodePullRequest
// PaginateProjectItemsNodePullRequestCommit
// PaginateProjectItemsNodePullRequestCommitCommentThread
// PaginateProjectItemsNodePullRequestReview
// PaginateProjectItemsNodePullRequestReviewComment
// PaginateProjectItemsNodePullRequestReviewThread
// PaginateProjectItemsNodePullRequestThread
// PaginateProjectItemsNodePush
// PaginateProjectItemsNodePushAllowance
// PaginateProjectItemsNodeReaction
// PaginateProjectItemsNodeReadyForReviewEvent
// PaginateProjectItemsNodeRef
// PaginateProjectItemsNodeReferencedEvent
// PaginateProjectItemsNodeRelease
// PaginateProjectItemsNodeReleaseAsset
// PaginateProjectItemsNodeRemovedFromMergeQueueEvent
// PaginateProjectItemsNodeRemovedFromProjectEvent
// PaginateProjectItemsNodeRenamedTitleEvent
// PaginateProjectItemsNodeReopenedEvent
// PaginateProjectItemsNodeRepoAccessAuditEntry
// PaginateProjectItemsNodeRepoAddMemberAuditEntry
// PaginateProjectItemsNodeRepoAddTopicAuditEntry
// PaginateProjectItemsNodeRepoArchivedAuditEntry
// PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry
// PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry
// PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry
// PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry
// PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry
// PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry
// PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry
// PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry
// PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry
// PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry
// PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry
// PaginateProjectItemsNodeRepoCreateAuditEntry
// PaginateProjectItemsNodeRepoDestroyAuditEntry
// PaginateProjectItemsNodeRepoRemoveMemberAuditEntry
// PaginateProjectItemsNodeRepoRemoveTopicAuditEntry
// PaginateProjectItemsNodeRepository
// PaginateProjectItemsNodeRepositoryInvitation
// PaginateProjectItemsNodeRepositoryMigration
// PaginateProjectItemsNodeRepositoryRule
// PaginateProjectItemsNodeRepositoryRuleset
// PaginateProjectItemsNodeRepositoryRulesetBypassActor
// PaginateProjectItemsNodeRepositoryTopic
// PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry
// PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry
// PaginateProjectItemsNodeRepositoryVulnerabilityAlert
// PaginateProjectItemsNodeReviewDismissalAllowance
// PaginateProjectItemsNodeReviewDismissedEvent
// PaginateProjectItemsNodeReviewRequest
// PaginateProjectItemsNodeReviewRequestRemovedEvent
// PaginateProjectItemsNodeReviewRequestedEvent
// PaginateProjectItemsNodeSavedReply
// PaginateProjectItemsNodeSecurityAdvisory
// PaginateProjectItemsNodeSponsorsActivity
// PaginateProjectItemsNodeSponsorsListing
// PaginateProjectItemsNodeSponsorsListingFeaturedItem
// PaginateProjectItemsNodeSponsorsTier
// PaginateProjectItemsNodeSponsorship
// PaginateProjectItemsNodeSponsorshipNewsletter
// PaginateProjectItemsNodeStatus
// PaginateProjectItemsNodeStatusCheckRollup
// PaginateProjectItemsNodeStatusContext
// PaginateProjectItemsNodeSubscribedEvent
// PaginateProjectItemsNodeTag
// PaginateProjectItemsNodeTeam
// PaginateProjectItemsNodeTeamAddMemberAuditEntry
// PaginateProjectItemsNodeTeamAddRepositoryAuditEntry
// PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry
// PaginateProjectItemsNodeTeamDiscussion
// PaginateProjectItemsNodeTeamDiscussionComment
// PaginateProjectItemsNodeTeamRemoveMemberAuditEntry
// PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry
// PaginateProjectItemsNodeTopic
// PaginateProjectItemsNodeTransferredEvent
// PaginateProjectItemsNodeTree
// PaginateProjectItemsNodeUnassignedEvent
// PaginateProjectItemsNodeUnlabeledEvent
// PaginateProjectItemsNodeUnlockedEvent
// PaginateProjectItemsNodeUnmarkedAsDuplicateEvent
// PaginateProjectItemsNodeUnpinnedEvent
// PaginateProjectItemsNodeUnsubscribedEvent
// PaginateProjectItemsNodeUser
// PaginateProjectItemsNodeUserBlockedEvent
// PaginateProjectItemsNodeUserContentEdit
// PaginateProjectItemsNodeUserList
// PaginateProjectItemsNodeUserStatus
// PaginateProjectItemsNodeVerifiableDomain
// PaginateProjectItemsNodeWorkflow
// PaginateProjectItemsNodeWorkflowRun
// PaginateProjectItemsNodeWorkflowRunFile
// The GraphQL type's documentation follows.
//
// An object with an ID.
type PaginateProjectItemsNode interface {
	implementsGraphQLInterfacePaginateProjectItemsNode()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectItemsNodeAddedToMergeQueueEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAddedToProjectEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeApp) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeAssignedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutoMergeDisabledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutoMergeEnabledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutoRebaseEnabledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutoSquashEnabledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBaseRefChangedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBaseRefDeletedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBaseRefForcePushedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBlob) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeBot) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodeBranchProtectionRule) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBypassForcePushAllowance) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeBypassPullRequestAllowance) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeCWE) implementsGraphQLInterfacePaginateProjectItemsNode()         {}
func (v *PaginateProjectItemsNodeCheckRun) implementsGraphQLInterfacePaginateProjectItemsNode()    {}
func (v *PaginateProjectItemsNodeCheckSuite) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodeClosedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeCodeOfConduct) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeCommentDeletedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeCommit) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeCommitComment) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeCommitCommentThread) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeComparison) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeConnectedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeConvertToDraftEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeConvertedNoteToIssueEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeConvertedToDiscussionEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeCrossReferencedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDemilestonedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDependencyGraphManifest) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDeployKey) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeDeployedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDeployment) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDeploymentReview) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDeploymentStatus) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDisconnectedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDiscussion) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeDiscussionCategory) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDiscussionComment) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDiscussionPoll) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDiscussionPollOption) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeDraftIssue) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeEnterprise) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeEnterpriseAdministratorInvitation) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseIdentityProvider) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseMemberInvitation) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseRepositoryInfo) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseServerInstallation) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccount) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccountEmail) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnterpriseUserAccount) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeEnvironment) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeExternalIdentity) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeGist) implementsGraphQLInterfacePaginateProjectItemsNode()        {}
func (v *PaginateProjectItemsNodeGistComment) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeHeadRefDeletedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeHeadRefForcePushedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeHeadRefRestoredEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeIpAllowListEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeIssue) implementsGraphQLInterfacePaginateProjectItemsNode()        {}
func (v *PaginateProjectItemsNodeIssueComment) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeLabel) implementsGraphQLInterfacePaginateProjectItemsNode()        {}
func (v *PaginateProjectItemsNodeLabeledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeLanguage) implementsGraphQLInterfacePaginateProjectItemsNode()     {}
func (v *PaginateProjectItemsNodeLicense) implementsGraphQLInterfacePaginateProjectItemsNode()      {}
func (v *PaginateProjectItemsNodeLinkedBranch) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeLockedEvent) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodeMannequin) implementsGraphQLInterfacePaginateProjectItemsNode()    {}
func (v *PaginateProjectItemsNodeMarkedAsDuplicateEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMarketplaceCategory) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMarketplaceListing) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMemberFeatureRequestNotification) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMentionedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMergeQueue) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeMergeQueueEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMergedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeMigrationSource) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMilestone) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeMilestonedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeMovedColumnsInProjectEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOIDCProvider) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeOauthApplicationCreateAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgBlockUserAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgCreateAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgDisableSamlAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgEnableSamlAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgInviteMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgRestoreMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgUnblockUserAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgUpdateMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrganization) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeOrganizationIdentityProvider) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrganizationInvitation) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeOrganizationMigration) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePackage) implementsGraphQLInterfacePaginateProjectItemsNode()     {}
func (v *PaginateProjectItemsNodePackageFile) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodePackageTag) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodePackageVersion) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePinnedDiscussion) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePinnedEnvironment) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePinnedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodePinnedIssue) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProject) implementsGraphQLInterfacePaginateProjectItemsNode()     {}
func (v *PaginateProjectItemsNodeProjectCard) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeProjectColumn) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeProjectV2Field) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2Item) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemFieldDateValue) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemFieldIterationValue) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemFieldNumberValue) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemFieldTextValue) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2IterationField) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2SingleSelectField) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2StatusUpdate) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2View) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeProjectV2Workflow) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePublicKey) implementsGraphQLInterfacePaginateProjectItemsNode()   {}
func (v *PaginateProjectItemsNodePullRequest) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodePullRequestCommit) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePullRequestCommitCommentThread) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePullRequestReview) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePullRequestReviewComment) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePullRequestReviewThread) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePullRequestThread) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodePush) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodePushAllowance) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReaction) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeReadyForReviewEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRef) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeReferencedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRelease) implementsGraphQLInterfacePaginateProjectItemsNode()      {}
func (v *PaginateProjectItemsNodeReleaseAsset) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeRemovedFromMergeQueueEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRemovedFromProjectEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRenamedTitleEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReopenedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoAccessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoAddTopicAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoArchivedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoCreateAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoDestroyAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepoRemoveTopicAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepository) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeRepositoryInvitation) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryMigration) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryRule) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryRuleset) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryRulesetBypassActor) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryTopic) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeRepositoryVulnerabilityAlert) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReviewDismissalAllowance) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReviewDismissedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReviewRequest) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReviewRequestRemovedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeReviewRequestedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSavedReply) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeSecurityAdvisory) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSponsorsActivity) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSponsorsListing) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSponsorsListingFeaturedItem) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSponsorsTier) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeSponsorship) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodeSponsorshipNewsletter) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeStatus) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeStatusCheckRollup) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeStatusContext) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeSubscribedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTag) implementsGraphQLInterfacePaginateProjectItemsNode()  {}
func (v *PaginateProjectItemsNodeTeam) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeTeamAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamAddRepositoryAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamDiscussion) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamDiscussionComment) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTopic) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeTransferredEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeTree) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeUnassignedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUnlabeledEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUnlockedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUnmarkedAsDuplicateEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUnpinnedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUnsubscribedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUser) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeUserBlockedEvent) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUserContentEdit) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeUserList) implementsGraphQLInterfacePaginateProjectItemsNode()   {}
func (v *PaginateProjectItemsNodeUserStatus) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeVerifiableDomain) implementsGraphQLInterfacePaginateProjectItemsNode() {
}
func (v *PaginateProjectItemsNodeWorkflow) implementsGraphQLInterfacePaginateProjectItemsNode()    {}
func (v *PaginateProjectItemsNodeWorkflowRun) implementsGraphQLInterfacePaginateProjectItemsNode() {}
func (v *PaginateProjectItemsNodeWorkflowRunFile) implementsGraphQLInterfacePaginateProjectItemsNode() {
}

func __unmarshalPaginateProjectItemsNode(b []byte, v *PaginateProjectItemsNode) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AddedToMergeQueueEvent":
		*v = new(PaginateProjectItemsNodeAddedToMergeQueueEvent)
		return json.Unmarshal(b, *v)
	case "AddedToProjectEvent":
		*v = new(PaginateProjectItemsNodeAddedToProjectEvent)
		return json.Unmarshal(b, *v)
	case "App":
		*v = new(PaginateProjectItemsNodeApp)
		return json.Unmarshal(b, *v)
	case "AssignedEvent":
		*v = new(PaginateProjectItemsNodeAssignedEvent)
		return json.Unmarshal(b, *v)
	case "AutoMergeDisabledEvent":
		*v = new(PaginateProjectItemsNodeAutoMergeDisabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoMergeEnabledEvent":
		*v = new(PaginateProjectItemsNodeAutoMergeEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoRebaseEnabledEvent":
		*v = new(PaginateProjectItemsNodeAutoRebaseEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoSquashEnabledEvent":
		*v = new(PaginateProjectItemsNodeAutoSquashEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutomaticBaseChangeFailedEvent":
		*v = new(PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent)
		return json.Unmarshal(b, *v)
	case "AutomaticBaseChangeSucceededEvent":
		*v = new(PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefChangedEvent":
		*v = new(PaginateProjectItemsNodeBaseRefChangedEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefDeletedEvent":
		*v = new(PaginateProjectItemsNodeBaseRefDeletedEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefForcePushedEvent":
		*v = new(PaginateProjectItemsNodeBaseRefForcePushedEvent)
		return json.Unmarshal(b, *v)
	case "Blob":
		*v = new(PaginateProjectItemsNodeBlob)
		return json.Unmarshal(b, *v)
	case "Bot":
		*v = new(PaginateProjectItemsNodeBot)
		return json.Unmarshal(b, *v)
	case "BranchProtectionRule":
		*v = new(PaginateProjectItemsNodeBranchProtectionRule)
		return json.Unmarshal(b, *v)
	case "BypassForcePushAllowance":
		*v = new(PaginateProjectItemsNodeBypassForcePushAllowance)
		return json.Unmarshal(b, *v)
	case "BypassPullRequestAllowance":
		*v = new(PaginateProjectItemsNodeBypassPullRequestAllowance)
		return json.Unmarshal(b, *v)
	case "CWE":
		*v = new(PaginateProjectItemsNodeCWE)
		return json.Unmarshal(b, *v)
	case "CheckRun":
		*v = new(PaginateProjectItemsNodeCheckRun)
		return json.Unmarshal(b, *v)
	case "CheckSuite":
		*v = new(PaginateProjectItemsNodeCheckSuite)
		return json.Unmarshal(b, *v)
	case "ClosedEvent":
		*v = new(PaginateProjectItemsNodeClosedEvent)
		return json.Unmarshal(b, *v)
	case "CodeOfConduct":
		*v = new(PaginateProjectItemsNodeCodeOfConduct)
		return json.Unmarshal(b, *v)
	case "CommentDeletedEvent":
		*v = new(PaginateProjectItemsNodeCommentDeletedEvent)
		return json.Unmarshal(b, *v)
	case "Commit":
		*v = new(PaginateProjectItemsNodeCommit)
		return json.Unmarshal(b, *v)
	case "CommitComment":
		*v = new(PaginateProjectItemsNodeCommitComment)
		return json.Unmarshal(b, *v)
	case "CommitCommentThread":
		*v = new(PaginateProjectItemsNodeCommitCommentThread)
		return json.Unmarshal(b, *v)
	case "Comparison":
		*v = new(PaginateProjectItemsNodeComparison)
		return json.Unmarshal(b, *v)
	case "ConnectedEvent":
		*v = new(PaginateProjectItemsNodeConnectedEvent)
		return json.Unmarshal(b, *v)
	case "ConvertToDraftEvent":
		*v = new(PaginateProjectItemsNodeConvertToDraftEvent)
		return json.Unmarshal(b, *v)
	case "ConvertedNoteToIssueEvent":
		*v = new(PaginateProjectItemsNodeConvertedNoteToIssueEvent)
		return json.Unmarshal(b, *v)
	case "ConvertedToDiscussionEvent":
		*v = new(PaginateProjectItemsNodeConvertedToDiscussionEvent)
		return json.Unmarshal(b, *v)
	case "CrossReferencedEvent":
		*v = new(PaginateProjectItemsNodeCrossReferencedEvent)
		return json.Unmarshal(b, *v)
	case "DemilestonedEvent":
		*v = new(PaginateProjectItemsNodeDemilestonedEvent)
		return json.Unmarshal(b, *v)
	case "DependencyGraphManifest":
		*v = new(PaginateProjectItemsNodeDependencyGraphManifest)
		return json.Unmarshal(b, *v)
	case "DeployKey":
		*v = new(PaginateProjectItemsNodeDeployKey)
		return json.Unmarshal(b, *v)
	case "DeployedEvent":
		*v = new(PaginateProjectItemsNodeDeployedEvent)
		return json.Unmarshal(b, *v)
	case "Deployment":
		*v = new(PaginateProjectItemsNodeDeployment)
		return json.Unmarshal(b, *v)
	case "DeploymentEnvironmentChangedEvent":
		*v = new(PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent)
		return json.Unmarshal(b, *v)
	case "DeploymentReview":
		*v = new(PaginateProjectItemsNodeDeploymentReview)
		return json.Unmarshal(b, *v)
	case "DeploymentStatus":
		*v = new(PaginateProjectItemsNodeDeploymentStatus)
		return json.Unmarshal(b, *v)
	case "DisconnectedEvent":
		*v = new(PaginateProjectItemsNodeDisconnectedEvent)
		return json.Unmarshal(b, *v)
	case "Discussion":
		*v = new(PaginateProjectItemsNodeDiscussion)
		return json.Unmarshal(b, *v)
	case "DiscussionCategory":
		*v = new(PaginateProjectItemsNodeDiscussionCategory)
		return json.Unmarshal(b, *v)
	case "DiscussionComment":
		*v = new(PaginateProjectItemsNodeDiscussionComment)
		return json.Unmarshal(b, *v)
	case "DiscussionPoll":
		*v = new(PaginateProjectItemsNodeDiscussionPoll)
		return json.Unmarshal(b, *v)
	case "DiscussionPollOption":
		*v = new(PaginateProjectItemsNodeDiscussionPollOption)
		return json.Unmarshal(b, *v)
	case "DraftIssue":
		*v = new(PaginateProjectItemsNodeDraftIssue)
		return json.Unmarshal(b, *v)
	case "Enterprise":
		*v = new(PaginateProjectItemsNodeEnterprise)
		return json.Unmarshal(b, *v)
	case "EnterpriseAdministratorInvitation":
		*v = new(PaginateProjectItemsNodeEnterpriseAdministratorInvitation)
		return json.Unmarshal(b, *v)
	case "EnterpriseIdentityProvider":
		*v = new(PaginateProjectItemsNodeEnterpriseIdentityProvider)
		return json.Unmarshal(b, *v)
	case "EnterpriseMemberInvitation":
		*v = new(PaginateProjectItemsNodeEnterpriseMemberInvitation)
		return json.Unmarshal(b, *v)
	case "EnterpriseRepositoryInfo":
		*v = new(PaginateProjectItemsNodeEnterpriseRepositoryInfo)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerInstallation":
		*v = new(PaginateProjectItemsNodeEnterpriseServerInstallation)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccount":
		*v = new(PaginateProjectItemsNodeEnterpriseServerUserAccount)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccountEmail":
		*v = new(PaginateProjectItemsNodeEnterpriseServerUserAccountEmail)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccountsUpload":
		*v = new(PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload)
		return json.Unmarshal(b, *v)
	case "EnterpriseUserAccount":
		*v = new(PaginateProjectItemsNodeEnterpriseUserAccount)
		return json.Unmarshal(b, *v)
	case "Environment":
		*v = new(PaginateProjectItemsNodeEnvironment)
		return json.Unmarshal(b, *v)
	case "ExternalIdentity":
		*v = new(PaginateProjectItemsNodeExternalIdentity)
		return json.Unmarshal(b, *v)
	case "Gist":
		*v = new(PaginateProjectItemsNodeGist)
		return json.Unmarshal(b, *v)
	case "GistComment":
		*v = new(PaginateProjectItemsNodeGistComment)
		return json.Unmarshal(b, *v)
	case "HeadRefDeletedEvent":
		*v = new(PaginateProjectItemsNodeHeadRefDeletedEvent)
		return json.Unmarshal(b, *v)
	case "HeadRefForcePushedEvent":
		*v = new(PaginateProjectItemsNodeHeadRefForcePushedEvent)
		return json.Unmarshal(b, *v)
	case "HeadRefRestoredEvent":
		*v = new(PaginateProjectItemsNodeHeadRefRestoredEvent)
		return json.Unmarshal(b, *v)
	case "IpAllowListEntry":
		*v = new(PaginateProjectItemsNodeIpAllowListEntry)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(PaginateProjectItemsNodeIssue)
		return json.Unmarshal(b, *v)
	case "IssueComment":
		*v = new(PaginateProjectItemsNodeIssueComment)
		return json.Unmarshal(b, *v)
	case "Label":
		*v = new(PaginateProjectItemsNodeLabel)
		return json.Unmarshal(b, *v)
	case "LabeledEvent":
		*v = new(PaginateProjectItemsNodeLabeledEvent)
		return json.Unmarshal(b, *v)
	case "Language":
		*v = new(PaginateProjectItemsNodeLanguage)
		return json.Unmarshal(b, *v)
	case "License":
		*v = new(PaginateProjectItemsNodeLicense)
		return json.Unmarshal(b, *v)
	case "LinkedBranch":
		*v = new(PaginateProjectItemsNodeLinkedBranch)
		return json.Unmarshal(b, *v)
	case "LockedEvent":
		*v = new(PaginateProjectItemsNodeLockedEvent)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(PaginateProjectItemsNodeMannequin)
		return json.Unmarshal(b, *v)
	case "MarkedAsDuplicateEvent":
		*v = new(PaginateProjectItemsNodeMarkedAsDuplicateEvent)
		return json.Unmarshal(b, *v)
	case "MarketplaceCategory":
		*v = new(PaginateProjectItemsNodeMarketplaceCategory)
		return json.Unmarshal(b, *v)
	case "MarketplaceListing":
		*v = new(PaginateProjectItemsNodeMarketplaceListing)
		return json.Unmarshal(b, *v)
	case "MemberFeatureRequestNotification":
		*v = new(PaginateProjectItemsNodeMemberFeatureRequestNotification)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposClearAuditEntry":
		*v = new(PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposDisableAuditEntry":
		*v = new(PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposEnableAuditEntry":
		*v = new(PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "MentionedEvent":
		*v = new(PaginateProjectItemsNodeMentionedEvent)
		return json.Unmarshal(b, *v)
	case "MergeQueue":
		*v = new(PaginateProjectItemsNodeMergeQueue)
		return json.Unmarshal(b, *v)
	case "MergeQueueEntry":
		*v = new(PaginateProjectItemsNodeMergeQueueEntry)
		return json.Unmarshal(b, *v)
	case "MergedEvent":
		*v = new(PaginateProjectItemsNodeMergedEvent)
		return json.Unmarshal(b, *v)
	case "MigrationSource":
		*v = new(PaginateProjectItemsNodeMigrationSource)
		return json.Unmarshal(b, *v)
	case "Milestone":
		*v = new(PaginateProjectItemsNodeMilestone)
		return json.Unmarshal(b, *v)
	case "MilestonedEvent":
		*v = new(PaginateProjectItemsNodeMilestonedEvent)
		return json.Unmarshal(b, *v)
	case "MovedColumnsInProjectEvent":
		*v = new(PaginateProjectItemsNodeMovedColumnsInProjectEvent)
		return json.Unmarshal(b, *v)
	case "OIDCProvider":
		*v = new(PaginateProjectItemsNodeOIDCProvider)
		return json.Unmarshal(b, *v)
	case "OauthApplicationCreateAuditEntry":
		*v = new(PaginateProjectItemsNodeOauthApplicationCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgAddBillingManagerAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgAddMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgBlockUserAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgBlockUserAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgConfigDisableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgConfigEnableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgCreateAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableOauthAppRestrictionsAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableSamlAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgDisableSamlAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableTwoFactorRequirementAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableOauthAppRestrictionsAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableSamlAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgEnableSamlAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableTwoFactorRequirementAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgInviteMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgInviteMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgInviteToBusinessAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessApprovedAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessBlockedAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessDeniedAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessRequestedAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessUnblockedAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveBillingManagerAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveOutsideCollaboratorAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRestoreMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgRestoreMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUnblockUserAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgUnblockUserAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateDefaultRepositoryPermissionAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgUpdateMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberRepositoryCreationPermissionAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry":
		*v = new(PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(PaginateProjectItemsNodeOrganization)
		return json.Unmarshal(b, *v)
	case "OrganizationIdentityProvider":
		*v = new(PaginateProjectItemsNodeOrganizationIdentityProvider)
		return json.Unmarshal(b, *v)
	case "OrganizationInvitation":
		*v = new(PaginateProjectItemsNodeOrganizationInvitation)
		return json.Unmarshal(b, *v)
	case "OrganizationMigration":
		*v = new(PaginateProjectItemsNodeOrganizationMigration)
		return json.Unmarshal(b, *v)
	case "Package":
		*v = new(PaginateProjectItemsNodePackage)
		return json.Unmarshal(b, *v)
	case "PackageFile":
		*v = new(PaginateProjectItemsNodePackageFile)
		return json.Unmarshal(b, *v)
	case "PackageTag":
		*v = new(PaginateProjectItemsNodePackageTag)
		return json.Unmarshal(b, *v)
	case "PackageVersion":
		*v = new(PaginateProjectItemsNodePackageVersion)
		return json.Unmarshal(b, *v)
	case "PinnedDiscussion":
		*v = new(PaginateProjectItemsNodePinnedDiscussion)
		return json.Unmarshal(b, *v)
	case "PinnedEnvironment":
		*v = new(PaginateProjectItemsNodePinnedEnvironment)
		return json.Unmarshal(b, *v)
	case "PinnedEvent":
		*v = new(PaginateProjectItemsNodePinnedEvent)
		return json.Unmarshal(b, *v)
	case "PinnedIssue":
		*v = new(PaginateProjectItemsNodePinnedIssue)
		return json.Unmarshal(b, *v)
	case "PrivateRepositoryForkingDisableAuditEntry":
		*v = new(PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "PrivateRepositoryForkingEnableAuditEntry":
		*v = new(PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "Project":
		*v = new(PaginateProjectItemsNodeProject)
		return json.Unmarshal(b, *v)
	case "ProjectCard":
		*v = new(PaginateProjectItemsNodeProjectCard)
		return json.Unmarshal(b, *v)
	case "ProjectColumn":
		*v = new(PaginateProjectItemsNodeProjectColumn)
		return json.Unmarshal(b, *v)
	case "ProjectV2":
		*v = new(PaginateProjectItemsNodeProjectV2)
		return json.Unmarshal(b, *v)
	case "ProjectV2Field":
		*v = new(PaginateProjectItemsNodeProjectV2Field)
		return json.Unmarshal(b, *v)
	case "ProjectV2Item":
		*v = new(PaginateProjectItemsNodeProjectV2Item)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldDateValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemFieldDateValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldIterationValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemFieldIterationValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldNumberValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemFieldNumberValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldSingleSelectValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldTextValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemFieldTextValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2IterationField":
		*v = new(PaginateProjectItemsNodeProjectV2IterationField)
		return json.Unmarshal(b, *v)
	case "ProjectV2SingleSelectField":
		*v = new(PaginateProjectItemsNodeProjectV2SingleSelectField)
		return json.Unmarshal(b, *v)
	case "ProjectV2StatusUpdate":
		*v = new(PaginateProjectItemsNodeProjectV2StatusUpdate)
		return json.Unmarshal(b, *v)
	case "ProjectV2View":
		*v = new(PaginateProjectItemsNodeProjectV2View)
		return json.Unmarshal(b, *v)
	case "ProjectV2Workflow":
		*v = new(PaginateProjectItemsNodeProjectV2Workflow)
		return json.Unmarshal(b, *v)
	case "PublicKey":
		*v = new(PaginateProjectItemsNodePublicKey)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(PaginateProjectItemsNodePullRequest)
		return json.Unmarshal(b, *v)
	case "PullRequestCommit":
		*v = new(PaginateProjectItemsNodePullRequestCommit)
		return json.Unmarshal(b, *v)
	case "PullRequestCommitCommentThread":
		*v = new(PaginateProjectItemsNodePullRequestCommitCommentThread)
		return json.Unmarshal(b, *v)
	case "PullRequestReview":
		*v = new(PaginateProjectItemsNodePullRequestReview)
		return json.Unmarshal(b, *v)
	case "PullRequestReviewComment":
		*v = new(PaginateProjectItemsNodePullRequestReviewComment)
		return json.Unmarshal(b, *v)
	case "PullRequestReviewThread":
		*v = new(PaginateProjectItemsNodePullRequestReviewThread)
		return json.Unmarshal(b, *v)
	case "PullRequestThread":
		*v = new(PaginateProjectItemsNodePullRequestThread)
		return json.Unmarshal(b, *v)
	case "Push":
		*v = new(PaginateProjectItemsNodePush)
		return json.Unmarshal(b, *v)
	case "PushAllowance":
		*v = new(PaginateProjectItemsNodePushAllowance)
		return json.Unmarshal(b, *v)
	case "Reaction":
		*v = new(PaginateProjectItemsNodeReaction)
		return json.Unmarshal(b, *v)
	case "ReadyForReviewEvent":
		*v = new(PaginateProjectItemsNodeReadyForReviewEvent)
		return json.Unmarshal(b, *v)
	case "Ref":
		*v = new(PaginateProjectItemsNodeRef)
		return json.Unmarshal(b, *v)
	case "ReferencedEvent":
		*v = new(PaginateProjectItemsNodeReferencedEvent)
		return json.Unmarshal(b, *v)
	case "Release":
		*v = new(PaginateProjectItemsNodeRelease)
		return json.Unmarshal(b, *v)
	case "ReleaseAsset":
		*v = new(PaginateProjectItemsNodeReleaseAsset)
		return json.Unmarshal(b, *v)
	case "RemovedFromMergeQueueEvent":
		*v = new(PaginateProjectItemsNodeRemovedFromMergeQueueEvent)
		return json.Unmarshal(b, *v)
	case "RemovedFromProjectEvent":
		*v = new(PaginateProjectItemsNodeRemovedFromProjectEvent)
		return json.Unmarshal(b, *v)
	case "RenamedTitleEvent":
		*v = new(PaginateProjectItemsNodeRenamedTitleEvent)
		return json.Unmarshal(b, *v)
	case "ReopenedEvent":
		*v = new(PaginateProjectItemsNodeReopenedEvent)
		return json.Unmarshal(b, *v)
	case "RepoAccessAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoAddMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoAddTopicAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoAddTopicAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoArchivedAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoArchivedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoChangeMergeSettingAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableContributorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableSockpuppetDisallowedAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableContributorsOnlyAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableSockpuppetDisallowedAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigLockAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigUnlockAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoCreateAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoDestroyAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoDestroyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoRemoveMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoRemoveTopicAuditEntry":
		*v = new(PaginateProjectItemsNodeRepoRemoveTopicAuditEntry)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(PaginateProjectItemsNodeRepository)
		return json.Unmarshal(b, *v)
	case "RepositoryInvitation":
		*v = new(PaginateProjectItemsNodeRepositoryInvitation)
		return json.Unmarshal(b, *v)
	case "RepositoryMigration":
		*v = new(PaginateProjectItemsNodeRepositoryMigration)
		return json.Unmarshal(b, *v)
	case "RepositoryRule":
		*v = new(PaginateProjectItemsNodeRepositoryRule)
		return json.Unmarshal(b, *v)
	case "RepositoryRuleset":
		*v = new(PaginateProjectItemsNodeRepositoryRuleset)
		return json.Unmarshal(b, *v)
	case "RepositoryRulesetBypassActor":
		*v = new(PaginateProjectItemsNodeRepositoryRulesetBypassActor)
		return json.Unmarshal(b, *v)
	case "RepositoryTopic":
		*v = new(PaginateProjectItemsNodeRepositoryTopic)
		return json.Unmarshal(b, *v)
	case "RepositoryVisibilityChangeDisableAuditEntry":
		*v = new(PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepositoryVisibilityChangeEnableAuditEntry":
		*v = new(PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepositoryVulnerabilityAlert":
		*v = new(PaginateProjectItemsNodeRepositoryVulnerabilityAlert)
		return json.Unmarshal(b, *v)
	case "ReviewDismissalAllowance":
		*v = new(PaginateProjectItemsNodeReviewDismissalAllowance)
		return json.Unmarshal(b, *v)
	case "ReviewDismissedEvent":
		*v = new(PaginateProjectItemsNodeReviewDismissedEvent)
		return json.Unmarshal(b, *v)
	case "ReviewRequest":
		*v = new(PaginateProjectItemsNodeReviewRequest)
		return json.Unmarshal(b, *v)
	case "ReviewRequestRemovedEvent":
		*v = new(PaginateProjectItemsNodeReviewRequestRemovedEvent)
		return json.Unmarshal(b, *v)
	case "ReviewRequestedEvent":
		*v = new(PaginateProjectItemsNodeReviewRequestedEvent)
		return json.Unmarshal(b, *v)
	case "SavedReply":
		*v = new(PaginateProjectItemsNodeSavedReply)
		return json.Unmarshal(b, *v)
	case "SecurityAdvisory":
		*v = new(PaginateProjectItemsNodeSecurityAdvisory)
		return json.Unmarshal(b, *v)
	case "SponsorsActivity":
		*v = new(PaginateProjectItemsNodeSponsorsActivity)
		return json.Unmarshal(b, *v)
	case "SponsorsListing":
		*v = new(PaginateProjectItemsNodeSponsorsListing)
		return json.Unmarshal(b, *v)
	case "SponsorsListingFeaturedItem":
		*v = new(PaginateProjectItemsNodeSponsorsListingFeaturedItem)
		return json.Unmarshal(b, *v)
	case "SponsorsTier":
		*v = new(PaginateProjectItemsNodeSponsorsTier)
		return json.Unmarshal(b, *v)
	case "Sponsorship":
		*v = new(PaginateProjectItemsNodeSponsorship)
		return json.Unmarshal(b, *v)
	case "SponsorshipNewsletter":
		*v = new(PaginateProjectItemsNodeSponsorshipNewsletter)
		return json.Unmarshal(b, *v)
	case "Status":
		*v = new(PaginateProjectItemsNodeStatus)
		return json.Unmarshal(b, *v)
	case "StatusCheckRollup":
		*v = new(PaginateProjectItemsNodeStatusCheckRollup)
		return json.Unmarshal(b, *v)
	case "StatusContext":
		*v = new(PaginateProjectItemsNodeStatusContext)
		return json.Unmarshal(b, *v)
	case "SubscribedEvent":
		*v = new(PaginateProjectItemsNodeSubscribedEvent)
		return json.Unmarshal(b, *v)
	case "Tag":
		*v = new(PaginateProjectItemsNodeTag)
		return json.Unmarshal(b, *v)
	case "Team":
		*v = new(PaginateProjectItemsNodeTeam)
		return json.Unmarshal(b, *v)
	case "TeamAddMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeTeamAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamAddRepositoryAuditEntry":
		*v = new(PaginateProjectItemsNodeTeamAddRepositoryAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamChangeParentTeamAuditEntry":
		*v = new(PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamDiscussion":
		*v = new(PaginateProjectItemsNodeTeamDiscussion)
		return json.Unmarshal(b, *v)
	case "TeamDiscussionComment":
		*v = new(PaginateProjectItemsNodeTeamDiscussionComment)
		return json.Unmarshal(b, *v)
	case "TeamRemoveMemberAuditEntry":
		*v = new(PaginateProjectItemsNodeTeamRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamRemoveRepositoryAuditEntry":
		*v = new(PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry)
		return json.Unmarshal(b, *v)
	case "Topic":
		*v = new(PaginateProjectItemsNodeTopic)
		return json.Unmarshal(b, *v)
	case "TransferredEvent":
		*v = new(PaginateProjectItemsNodeTransferredEvent)
		return json.Unmarshal(b, *v)
	case "Tree":
		*v = new(PaginateProjectItemsNodeTree)
		return json.Unmarshal(b, *v)
	case "UnassignedEvent":
		*v = new(PaginateProjectItemsNodeUnassignedEvent)
		return json.Unmarshal(b, *v)
	case "UnlabeledEvent":
		*v = new(PaginateProjectItemsNodeUnlabeledEvent)
		return json.Unmarshal(b, *v)
	case "UnlockedEvent":
		*v = new(PaginateProjectItemsNodeUnlockedEvent)
		return json.Unmarshal(b, *v)
	case "UnmarkedAsDuplicateEvent":
		*v = new(PaginateProjectItemsNodeUnmarkedAsDuplicateEvent)
		return json.Unmarshal(b, *v)
	case "UnpinnedEvent":
		*v = new(PaginateProjectItemsNodeUnpinnedEvent)
		return json.Unmarshal(b, *v)
	case "UnsubscribedEvent":
		*v = new(PaginateProjectItemsNodeUnsubscribedEvent)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(PaginateProjectItemsNodeUser)
		return json.Unmarshal(b, *v)
	case "UserBlockedEvent":
		*v = new(PaginateProjectItemsNodeUserBlockedEvent)
		return json.Unmarshal(b, *v)
	case "UserContentEdit":
		*v = new(PaginateProjectItemsNodeUserContentEdit)
		return json.Unmarshal(b, *v)
	case "UserList":
		*v = new(PaginateProjectItemsNodeUserList)
		return json.Unmarshal(b, *v)
	case "UserStatus":
		*v = new(PaginateProjectItemsNodeUserStatus)
		return json.Unmarshal(b, *v)
	case "VerifiableDomain":
		*v = new(PaginateProjectItemsNodeVerifiableDomain)
		return json.Unmarshal(b, *v)
	case "Workflow":
		*v = new(PaginateProjectItemsNodeWorkflow)
		return json.Unmarshal(b, *v)
	case "WorkflowRun":
		*v = new(PaginateProjectItemsNodeWorkflowRun)
		return json.Unmarshal(b, *v)
	case "WorkflowRunFile":
		*v = new(PaginateProjectItemsNodeWorkflowRunFile)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Node.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNode: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectItemsNode(v *PaginateProjectItemsNode) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectItemsNodeAddedToMergeQueueEvent:
		typename = "AddedToMergeQueueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAddedToMergeQueueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAddedToProjectEvent:
		typename = "AddedToProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAddedToProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeApp:
		typename = "App"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeApp
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAssignedEvent:
		typename = "AssignedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAssignedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutoMergeDisabledEvent:
		typename = "AutoMergeDisabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutoMergeDisabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutoMergeEnabledEvent:
		typename = "AutoMergeEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutoMergeEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutoRebaseEnabledEvent:
		typename = "AutoRebaseEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutoRebaseEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutoSquashEnabledEvent:
		typename = "AutoSquashEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutoSquashEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent:
		typename = "AutomaticBaseChangeFailedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent:
		typename = "AutomaticBaseChangeSucceededEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBaseRefChangedEvent:
		typename = "BaseRefChangedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBaseRefChangedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBaseRefDeletedEvent:
		typename = "BaseRefDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBaseRefDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBaseRefForcePushedEvent:
		typename = "BaseRefForcePushedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBaseRefForcePushedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBlob:
		typename = "Blob"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBlob
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBot
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBranchProtectionRule:
		typename = "BranchProtectionRule"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBranchProtectionRule
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBypassForcePushAllowance:
		typename = "BypassForcePushAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBypassForcePushAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeBypassPullRequestAllowance:
		typename = "BypassPullRequestAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeBypassPullRequestAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCWE:
		typename = "CWE"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCWE
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCheckRun:
		typename = "CheckRun"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCheckRun
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCheckSuite:
		typename = "CheckSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCheckSuite
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeClosedEvent:
		typename = "ClosedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeClosedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCodeOfConduct:
		typename = "CodeOfConduct"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCodeOfConduct
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCommentDeletedEvent:
		typename = "CommentDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCommentDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCommit:
		typename = "Commit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCommit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCommitComment:
		typename = "CommitComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCommitComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCommitCommentThread:
		typename = "CommitCommentThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCommitCommentThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeComparison:
		typename = "Comparison"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeComparison
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeConnectedEvent:
		typename = "ConnectedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeConnectedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeConvertToDraftEvent:
		typename = "ConvertToDraftEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeConvertToDraftEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeConvertedNoteToIssueEvent:
		typename = "ConvertedNoteToIssueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeConvertedNoteToIssueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeConvertedToDiscussionEvent:
		typename = "ConvertedToDiscussionEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeConvertedToDiscussionEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeCrossReferencedEvent:
		typename = "CrossReferencedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeCrossReferencedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDemilestonedEvent:
		typename = "DemilestonedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDemilestonedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDependencyGraphManifest:
		typename = "DependencyGraphManifest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDependencyGraphManifest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeployKey:
		typename = "DeployKey"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeployKey
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeployedEvent:
		typename = "DeployedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeployedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeployment:
		typename = "Deployment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeployment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent:
		typename = "DeploymentEnvironmentChangedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeploymentReview:
		typename = "DeploymentReview"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeploymentReview
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDeploymentStatus:
		typename = "DeploymentStatus"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDeploymentStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDisconnectedEvent:
		typename = "DisconnectedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDisconnectedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDiscussion:
		typename = "Discussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDiscussionCategory:
		typename = "DiscussionCategory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDiscussionCategory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDiscussionComment:
		typename = "DiscussionComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDiscussionComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDiscussionPoll:
		typename = "DiscussionPoll"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDiscussionPoll
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDiscussionPollOption:
		typename = "DiscussionPollOption"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDiscussionPollOption
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeDraftIssue:
		typename = "DraftIssue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeDraftIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterprise:
		typename = "Enterprise"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterprise
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseAdministratorInvitation:
		typename = "EnterpriseAdministratorInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseAdministratorInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseIdentityProvider:
		typename = "EnterpriseIdentityProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseIdentityProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseMemberInvitation:
		typename = "EnterpriseMemberInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseMemberInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseRepositoryInfo:
		typename = "EnterpriseRepositoryInfo"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseRepositoryInfo
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseServerInstallation:
		typename = "EnterpriseServerInstallation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseServerInstallation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseServerUserAccount:
		typename = "EnterpriseServerUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseServerUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseServerUserAccountEmail:
		typename = "EnterpriseServerUserAccountEmail"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseServerUserAccountEmail
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload:
		typename = "EnterpriseServerUserAccountsUpload"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnterpriseUserAccount:
		typename = "EnterpriseUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnterpriseUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeEnvironment:
		typename = "Environment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeEnvironment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeExternalIdentity:
		typename = "ExternalIdentity"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeExternalIdentity
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeGist:
		typename = "Gist"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeGist
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeGistComment:
		typename = "GistComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeGistComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeHeadRefDeletedEvent:
		typename = "HeadRefDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeHeadRefDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeHeadRefForcePushedEvent:
		typename = "HeadRefForcePushedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeHeadRefForcePushedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeHeadRefRestoredEvent:
		typename = "HeadRefRestoredEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeHeadRefRestoredEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeIpAllowListEntry:
		typename = "IpAllowListEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeIpAllowListEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeIssueComment:
		typename = "IssueComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeIssueComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLabel:
		typename = "Label"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLabel
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLabeledEvent:
		typename = "LabeledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLabeledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLanguage:
		typename = "Language"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLanguage
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLicense:
		typename = "License"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLicense
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLinkedBranch:
		typename = "LinkedBranch"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLinkedBranch
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeLockedEvent:
		typename = "LockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeLockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMannequin
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMarkedAsDuplicateEvent:
		typename = "MarkedAsDuplicateEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMarkedAsDuplicateEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMarketplaceCategory:
		typename = "MarketplaceCategory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMarketplaceCategory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMarketplaceListing:
		typename = "MarketplaceListing"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMarketplaceListing
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMemberFeatureRequestNotification:
		typename = "MemberFeatureRequestNotification"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMemberFeatureRequestNotification
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry:
		typename = "MembersCanDeleteReposClearAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry:
		typename = "MembersCanDeleteReposDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry:
		typename = "MembersCanDeleteReposEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMentionedEvent:
		typename = "MentionedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMentionedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMergeQueue:
		typename = "MergeQueue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMergeQueue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMergeQueueEntry:
		typename = "MergeQueueEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMergeQueueEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMergedEvent:
		typename = "MergedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMergedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMigrationSource:
		typename = "MigrationSource"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMigrationSource
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMilestone:
		typename = "Milestone"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMilestone
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMilestonedEvent:
		typename = "MilestonedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMilestonedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeMovedColumnsInProjectEvent:
		typename = "MovedColumnsInProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeMovedColumnsInProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOIDCProvider:
		typename = "OIDCProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOIDCProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOauthApplicationCreateAuditEntry:
		typename = "OauthApplicationCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOauthApplicationCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry:
		typename = "OrgAddBillingManagerAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgAddMemberAuditEntry:
		typename = "OrgAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgBlockUserAuditEntry:
		typename = "OrgBlockUserAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgBlockUserAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry:
		typename = "OrgConfigDisableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry:
		typename = "OrgConfigEnableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgCreateAuditEntry:
		typename = "OrgCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry:
		typename = "OrgDisableOauthAppRestrictionsAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgDisableSamlAuditEntry:
		typename = "OrgDisableSamlAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgDisableSamlAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry:
		typename = "OrgDisableTwoFactorRequirementAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry:
		typename = "OrgEnableOauthAppRestrictionsAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgEnableSamlAuditEntry:
		typename = "OrgEnableSamlAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgEnableSamlAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry:
		typename = "OrgEnableTwoFactorRequirementAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgInviteMemberAuditEntry:
		typename = "OrgInviteMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgInviteMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry:
		typename = "OrgInviteToBusinessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry:
		typename = "OrgOauthAppAccessApprovedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry:
		typename = "OrgOauthAppAccessBlockedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry:
		typename = "OrgOauthAppAccessDeniedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry:
		typename = "OrgOauthAppAccessRequestedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry:
		typename = "OrgOauthAppAccessUnblockedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry:
		typename = "OrgRemoveBillingManagerAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgRemoveMemberAuditEntry:
		typename = "OrgRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry:
		typename = "OrgRemoveOutsideCollaboratorAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgRestoreMemberAuditEntry:
		typename = "OrgRestoreMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgRestoreMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgUnblockUserAuditEntry:
		typename = "OrgUnblockUserAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgUnblockUserAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry:
		typename = "OrgUpdateDefaultRepositoryPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgUpdateMemberAuditEntry:
		typename = "OrgUpdateMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgUpdateMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry:
		typename = "OrgUpdateMemberRepositoryCreationPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry:
		typename = "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrganizationIdentityProvider:
		typename = "OrganizationIdentityProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrganizationIdentityProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrganizationInvitation:
		typename = "OrganizationInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrganizationInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeOrganizationMigration:
		typename = "OrganizationMigration"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeOrganizationMigration
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePackage:
		typename = "Package"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePackage
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePackageFile:
		typename = "PackageFile"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePackageFile
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePackageTag:
		typename = "PackageTag"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePackageTag
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePackageVersion:
		typename = "PackageVersion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePackageVersion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePinnedDiscussion:
		typename = "PinnedDiscussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePinnedDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePinnedEnvironment:
		typename = "PinnedEnvironment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePinnedEnvironment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePinnedEvent:
		typename = "PinnedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePinnedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePinnedIssue:
		typename = "PinnedIssue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePinnedIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry:
		typename = "PrivateRepositoryForkingDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry:
		typename = "PrivateRepositoryForkingEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProject:
		typename = "Project"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProject
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectCard:
		typename = "ProjectCard"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectCard
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectColumn:
		typename = "ProjectColumn"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectColumn
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2:
		typename = "ProjectV2"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2Field:
		typename = "ProjectV2Field"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2Field
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2Item:
		typename = "ProjectV2Item"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2Item
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemFieldDateValue:
		typename = "ProjectV2ItemFieldDateValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemFieldDateValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemFieldIterationValue:
		typename = "ProjectV2ItemFieldIterationValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemFieldIterationValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemFieldNumberValue:
		typename = "ProjectV2ItemFieldNumberValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemFieldNumberValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue:
		typename = "ProjectV2ItemFieldSingleSelectValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemFieldTextValue:
		typename = "ProjectV2ItemFieldTextValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemFieldTextValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2IterationField:
		typename = "ProjectV2IterationField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2IterationField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2SingleSelectField:
		typename = "ProjectV2SingleSelectField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2SingleSelectField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2StatusUpdate:
		typename = "ProjectV2StatusUpdate"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2StatusUpdate
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2View:
		typename = "ProjectV2View"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2View
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2Workflow:
		typename = "ProjectV2Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2Workflow
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePublicKey:
		typename = "PublicKey"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePublicKey
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestCommit:
		typename = "PullRequestCommit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestCommit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestCommitCommentThread:
		typename = "PullRequestCommitCommentThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestCommitCommentThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestReview:
		typename = "PullRequestReview"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestReview
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestReviewComment:
		typename = "PullRequestReviewComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestReviewComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestReviewThread:
		typename = "PullRequestReviewThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestReviewThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePullRequestThread:
		typename = "PullRequestThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePullRequestThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePush:
		typename = "Push"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePush
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodePushAllowance:
		typename = "PushAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodePushAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReaction:
		typename = "Reaction"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReaction
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReadyForReviewEvent:
		typename = "ReadyForReviewEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReadyForReviewEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRef:
		typename = "Ref"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRef
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReferencedEvent:
		typename = "ReferencedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReferencedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRelease:
		typename = "Release"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRelease
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReleaseAsset:
		typename = "ReleaseAsset"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReleaseAsset
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRemovedFromMergeQueueEvent:
		typename = "RemovedFromMergeQueueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRemovedFromMergeQueueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRemovedFromProjectEvent:
		typename = "RemovedFromProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRemovedFromProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRenamedTitleEvent:
		typename = "RenamedTitleEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRenamedTitleEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReopenedEvent:
		typename = "ReopenedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReopenedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoAccessAuditEntry:
		typename = "RepoAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoAddMemberAuditEntry:
		typename = "RepoAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoAddTopicAuditEntry:
		typename = "RepoAddTopicAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoAddTopicAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoArchivedAuditEntry:
		typename = "RepoArchivedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoArchivedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry:
		typename = "RepoChangeMergeSettingAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry:
		typename = "RepoConfigDisableAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry:
		typename = "RepoConfigDisableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry:
		typename = "RepoConfigDisableContributorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry:
		typename = "RepoConfigDisableSockpuppetDisallowedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry:
		typename = "RepoConfigEnableAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry:
		typename = "RepoConfigEnableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry:
		typename = "RepoConfigEnableContributorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry:
		typename = "RepoConfigEnableSockpuppetDisallowedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry:
		typename = "RepoConfigLockAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry:
		typename = "RepoConfigUnlockAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoCreateAuditEntry:
		typename = "RepoCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoDestroyAuditEntry:
		typename = "RepoDestroyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoDestroyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoRemoveMemberAuditEntry:
		typename = "RepoRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepoRemoveTopicAuditEntry:
		typename = "RepoRemoveTopicAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepoRemoveTopicAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepository
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryInvitation:
		typename = "RepositoryInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryMigration:
		typename = "RepositoryMigration"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryMigration
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryRule:
		typename = "RepositoryRule"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryRule
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryRuleset:
		typename = "RepositoryRuleset"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryRuleset
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryRulesetBypassActor:
		typename = "RepositoryRulesetBypassActor"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryRulesetBypassActor
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryTopic:
		typename = "RepositoryTopic"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryTopic
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry:
		typename = "RepositoryVisibilityChangeDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry:
		typename = "RepositoryVisibilityChangeEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeRepositoryVulnerabilityAlert:
		typename = "RepositoryVulnerabilityAlert"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeRepositoryVulnerabilityAlert
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReviewDismissalAllowance:
		typename = "ReviewDismissalAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReviewDismissalAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReviewDismissedEvent:
		typename = "ReviewDismissedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReviewDismissedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReviewRequest:
		typename = "ReviewRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReviewRequest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReviewRequestRemovedEvent:
		typename = "ReviewRequestRemovedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReviewRequestRemovedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeReviewRequestedEvent:
		typename = "ReviewRequestedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeReviewRequestedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSavedReply:
		typename = "SavedReply"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSavedReply
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSecurityAdvisory:
		typename = "SecurityAdvisory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSecurityAdvisory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorsActivity:
		typename = "SponsorsActivity"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorsActivity
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorsListing:
		typename = "SponsorsListing"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorsListing
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorsListingFeaturedItem:
		typename = "SponsorsListingFeaturedItem"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorsListingFeaturedItem
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorsTier:
		typename = "SponsorsTier"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorsTier
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorship:
		typename = "Sponsorship"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorship
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSponsorshipNewsletter:
		typename = "SponsorshipNewsletter"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSponsorshipNewsletter
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeStatus:
		typename = "Status"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeStatusCheckRollup:
		typename = "StatusCheckRollup"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeStatusCheckRollup
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeStatusContext:
		typename = "StatusContext"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeStatusContext
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeSubscribedEvent:
		typename = "SubscribedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeSubscribedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTag:
		typename = "Tag"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTag
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeam:
		typename = "Team"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeam
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamAddMemberAuditEntry:
		typename = "TeamAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamAddRepositoryAuditEntry:
		typename = "TeamAddRepositoryAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamAddRepositoryAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry:
		typename = "TeamChangeParentTeamAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamDiscussion:
		typename = "TeamDiscussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamDiscussionComment:
		typename = "TeamDiscussionComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamDiscussionComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamRemoveMemberAuditEntry:
		typename = "TeamRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry:
		typename = "TeamRemoveRepositoryAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTopic:
		typename = "Topic"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTopic
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTransferredEvent:
		typename = "TransferredEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTransferredEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeTree:
		typename = "Tree"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeTree
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnassignedEvent:
		typename = "UnassignedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnassignedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnlabeledEvent:
		typename = "UnlabeledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnlabeledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnlockedEvent:
		typename = "UnlockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnlockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnmarkedAsDuplicateEvent:
		typename = "UnmarkedAsDuplicateEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnmarkedAsDuplicateEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnpinnedEvent:
		typename = "UnpinnedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnpinnedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUnsubscribedEvent:
		typename = "UnsubscribedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUnsubscribedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUser
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUserBlockedEvent:
		typename = "UserBlockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUserBlockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUserContentEdit:
		typename = "UserContentEdit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUserContentEdit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUserList:
		typename = "UserList"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUserList
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeUserStatus:
		typename = "UserStatus"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeUserStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeVerifiableDomain:
		typename = "VerifiableDomain"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeVerifiableDomain
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeWorkflow:
		typename = "Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeWorkflow
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeWorkflowRun:
		typename = "WorkflowRun"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeWorkflowRun
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeWorkflowRunFile:
		typename = "WorkflowRunFile"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeWorkflowRunFile
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNode: "%T"`, v)
	}
}

// PaginateProjectItemsNodeAddedToMergeQueueEvent includes the requested fields of the GraphQL type AddedToMergeQueueEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'added_to_merge_queue' event on a given pull request.
type PaginateProjectItemsNodeAddedToMergeQueueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAddedToMergeQueueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAddedToMergeQueueEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAddedToProjectEvent includes the requested fields of the GraphQL type AddedToProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'added_to_project' event on a given issue or pull request.
type PaginateProjectItemsNodeAddedToProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAddedToProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAddedToProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeApp includes the requested fields of the GraphQL type App.
// The GraphQL type's documentation follows.
//
// A GitHub App.
type PaginateProjectItemsNodeApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeApp.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeApp) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAssignedEvent includes the requested fields of the GraphQL type AssignedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'assigned' event on any assignable object.
type PaginateProjectItemsNodeAssignedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAssignedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAssignedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAutoMergeDisabledEvent includes the requested fields of the GraphQL type AutoMergeDisabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_merge_disabled' event on a given pull request.
type PaginateProjectItemsNodeAutoMergeDisabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutoMergeDisabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutoMergeDisabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAutoMergeEnabledEvent includes the requested fields of the GraphQL type AutoMergeEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_merge_enabled' event on a given pull request.
type PaginateProjectItemsNodeAutoMergeEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutoMergeEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutoMergeEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAutoRebaseEnabledEvent includes the requested fields of the GraphQL type AutoRebaseEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_rebase_enabled' event on a given pull request.
type PaginateProjectItemsNodeAutoRebaseEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutoRebaseEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutoRebaseEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAutoSquashEnabledEvent includes the requested fields of the GraphQL type AutoSquashEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_squash_enabled' event on a given pull request.
type PaginateProjectItemsNodeAutoSquashEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutoSquashEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutoSquashEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent includes the requested fields of the GraphQL type AutomaticBaseChangeFailedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'automatic_base_change_failed' event on a given pull request.
type PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutomaticBaseChangeFailedEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent includes the requested fields of the GraphQL type AutomaticBaseChangeSucceededEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'automatic_base_change_succeeded' event on a given pull request.
type PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeAutomaticBaseChangeSucceededEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeBaseRefChangedEvent includes the requested fields of the GraphQL type BaseRefChangedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_changed' event on a given issue or pull request.
type PaginateProjectItemsNodeBaseRefChangedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBaseRefChangedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBaseRefChangedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBaseRefDeletedEvent includes the requested fields of the GraphQL type BaseRefDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_deleted' event on a given pull request.
type PaginateProjectItemsNodeBaseRefDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBaseRefDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBaseRefDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBaseRefForcePushedEvent includes the requested fields of the GraphQL type BaseRefForcePushedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_force_pushed' event on a given pull request.
type PaginateProjectItemsNodeBaseRefForcePushedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBaseRefForcePushedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBaseRefForcePushedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBlob includes the requested fields of the GraphQL type Blob.
// The GraphQL type's documentation follows.
//
// Represents a Git blob.
type PaginateProjectItemsNodeBlob struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBlob.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBlob) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type PaginateProjectItemsNodeBot struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBot.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBot) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBranchProtectionRule includes the requested fields of the GraphQL type BranchProtectionRule.
// The GraphQL type's documentation follows.
//
// A branch protection rule.
type PaginateProjectItemsNodeBranchProtectionRule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBranchProtectionRule.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBranchProtectionRule) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBypassForcePushAllowance includes the requested fields of the GraphQL type BypassForcePushAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to bypass a force push requirement on a protected branch.
type PaginateProjectItemsNodeBypassForcePushAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBypassForcePushAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBypassForcePushAllowance) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeBypassPullRequestAllowance includes the requested fields of the GraphQL type BypassPullRequestAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.
type PaginateProjectItemsNodeBypassPullRequestAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeBypassPullRequestAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeBypassPullRequestAllowance) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCWE includes the requested fields of the GraphQL type CWE.
// The GraphQL type's documentation follows.
//
// A common weakness enumeration
type PaginateProjectItemsNodeCWE struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCWE.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCWE) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCheckRun includes the requested fields of the GraphQL type CheckRun.
// The GraphQL type's documentation follows.
//
// A check run.
type PaginateProjectItemsNodeCheckRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCheckRun.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCheckRun) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCheckSuite includes the requested fields of the GraphQL type CheckSuite.
// The GraphQL type's documentation follows.
//
// A check suite.
type PaginateProjectItemsNodeCheckSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCheckSuite.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCheckSuite) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeClosedEvent includes the requested fields of the GraphQL type ClosedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'closed' event on any `Closable`.
type PaginateProjectItemsNodeClosedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeClosedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeClosedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCodeOfConduct includes the requested fields of the GraphQL type CodeOfConduct.
// The GraphQL type's documentation follows.
//
// The Code of Conduct for a repository
type PaginateProjectItemsNodeCodeOfConduct struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCodeOfConduct.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCodeOfConduct) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCommentDeletedEvent includes the requested fields of the GraphQL type CommentDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'comment_deleted' event on a given issue or pull request.
type PaginateProjectItemsNodeCommentDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCommentDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCommentDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCommit includes the requested fields of the GraphQL type Commit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit.
type PaginateProjectItemsNodeCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCommit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCommit) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCommitComment includes the requested fields of the GraphQL type CommitComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on a given Commit.
type PaginateProjectItemsNodeCommitComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCommitComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCommitComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCommitCommentThread includes the requested fields of the GraphQL type CommitCommentThread.
// The GraphQL type's documentation follows.
//
// A thread of comments on a commit.
type PaginateProjectItemsNodeCommitCommentThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCommitCommentThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCommitCommentThread) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeComparison includes the requested fields of the GraphQL type Comparison.
// The GraphQL type's documentation follows.
//
// Represents a comparison between two commit revisions.
type PaginateProjectItemsNodeComparison struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeComparison.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeComparison) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeConnectedEvent includes the requested fields of the GraphQL type ConnectedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'connected' event on a given issue or pull request.
type PaginateProjectItemsNodeConnectedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeConnectedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeConnectedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeConvertToDraftEvent includes the requested fields of the GraphQL type ConvertToDraftEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'convert_to_draft' event on a given pull request.
type PaginateProjectItemsNodeConvertToDraftEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeConvertToDraftEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeConvertToDraftEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeConvertedNoteToIssueEvent includes the requested fields of the GraphQL type ConvertedNoteToIssueEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'converted_note_to_issue' event on a given issue or pull request.
type PaginateProjectItemsNodeConvertedNoteToIssueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeConvertedNoteToIssueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeConvertedNoteToIssueEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeConvertedToDiscussionEvent includes the requested fields of the GraphQL type ConvertedToDiscussionEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'converted_to_discussion' event on a given issue.
type PaginateProjectItemsNodeConvertedToDiscussionEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeConvertedToDiscussionEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeConvertedToDiscussionEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeCrossReferencedEvent includes the requested fields of the GraphQL type CrossReferencedEvent.
// The GraphQL type's documentation follows.
//
// Represents a mention made by one issue or pull request to another.
type PaginateProjectItemsNodeCrossReferencedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeCrossReferencedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeCrossReferencedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDemilestonedEvent includes the requested fields of the GraphQL type DemilestonedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'demilestoned' event on a given issue or pull request.
type PaginateProjectItemsNodeDemilestonedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDemilestonedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDemilestonedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDependencyGraphManifest includes the requested fields of the GraphQL type DependencyGraphManifest.
// The GraphQL type's documentation follows.
//
// Dependency manifest for a repository
type PaginateProjectItemsNodeDependencyGraphManifest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDependencyGraphManifest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDependencyGraphManifest) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDeployKey includes the requested fields of the GraphQL type DeployKey.
// The GraphQL type's documentation follows.
//
// A repository deploy key.
type PaginateProjectItemsNodeDeployKey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeployKey.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeployKey) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDeployedEvent includes the requested fields of the GraphQL type DeployedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'deployed' event on a given pull request.
type PaginateProjectItemsNodeDeployedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeployedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeployedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDeployment includes the requested fields of the GraphQL type Deployment.
// The GraphQL type's documentation follows.
//
// Represents triggered deployment instance.
type PaginateProjectItemsNodeDeployment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeployment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeployment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent includes the requested fields of the GraphQL type DeploymentEnvironmentChangedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'deployment_environment_changed' event on a given pull request.
type PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeploymentEnvironmentChangedEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeDeploymentReview includes the requested fields of the GraphQL type DeploymentReview.
// The GraphQL type's documentation follows.
//
// A deployment review.
type PaginateProjectItemsNodeDeploymentReview struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeploymentReview.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeploymentReview) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDeploymentStatus includes the requested fields of the GraphQL type DeploymentStatus.
// The GraphQL type's documentation follows.
//
// Describes the status of a given deployment attempt.
type PaginateProjectItemsNodeDeploymentStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDeploymentStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDeploymentStatus) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDisconnectedEvent includes the requested fields of the GraphQL type DisconnectedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'disconnected' event on a given issue or pull request.
type PaginateProjectItemsNodeDisconnectedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDisconnectedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDisconnectedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDiscussion includes the requested fields of the GraphQL type Discussion.
// The GraphQL type's documentation follows.
//
// A discussion in a repository.
type PaginateProjectItemsNodeDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDiscussionCategory includes the requested fields of the GraphQL type DiscussionCategory.
// The GraphQL type's documentation follows.
//
// A category for discussions in a repository.
type PaginateProjectItemsNodeDiscussionCategory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDiscussionCategory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDiscussionCategory) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDiscussionComment includes the requested fields of the GraphQL type DiscussionComment.
// The GraphQL type's documentation follows.
//
// A comment on a discussion.
type PaginateProjectItemsNodeDiscussionComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDiscussionComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDiscussionComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDiscussionPoll includes the requested fields of the GraphQL type DiscussionPoll.
// The GraphQL type's documentation follows.
//
// A poll for a discussion.
type PaginateProjectItemsNodeDiscussionPoll struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDiscussionPoll.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDiscussionPoll) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDiscussionPollOption includes the requested fields of the GraphQL type DiscussionPollOption.
// The GraphQL type's documentation follows.
//
// An option for a discussion poll.
type PaginateProjectItemsNodeDiscussionPollOption struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDiscussionPollOption.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDiscussionPollOption) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeDraftIssue includes the requested fields of the GraphQL type DraftIssue.
// The GraphQL type's documentation follows.
//
// A draft issue within a project.
type PaginateProjectItemsNodeDraftIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeDraftIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeDraftIssue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterprise includes the requested fields of the GraphQL type Enterprise.
// The GraphQL type's documentation follows.
//
// An account to manage multiple organizations with consolidated policy and billing.
type PaginateProjectItemsNodeEnterprise struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterprise.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterprise) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterpriseAdministratorInvitation includes the requested fields of the GraphQL type EnterpriseAdministratorInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to become an owner or billing manager of an enterprise.
type PaginateProjectItemsNodeEnterpriseAdministratorInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseAdministratorInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseAdministratorInvitation) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeEnterpriseIdentityProvider includes the requested fields of the GraphQL type EnterpriseIdentityProvider.
// The GraphQL type's documentation follows.
//
// An identity provider configured to provision identities for an enterprise.
// Visible to enterprise owners or enterprise owners' personal access tokens
// (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectItemsNodeEnterpriseIdentityProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseIdentityProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseIdentityProvider) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterpriseMemberInvitation includes the requested fields of the GraphQL type EnterpriseMemberInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to become an unaffiliated member of an enterprise.
type PaginateProjectItemsNodeEnterpriseMemberInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseMemberInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseMemberInvitation) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterpriseRepositoryInfo includes the requested fields of the GraphQL type EnterpriseRepositoryInfo.
// The GraphQL type's documentation follows.
//
// A subset of repository information queryable from an enterprise.
type PaginateProjectItemsNodeEnterpriseRepositoryInfo struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseRepositoryInfo.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseRepositoryInfo) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterpriseServerInstallation includes the requested fields of the GraphQL type EnterpriseServerInstallation.
// The GraphQL type's documentation follows.
//
// An Enterprise Server installation.
type PaginateProjectItemsNodeEnterpriseServerInstallation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseServerInstallation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseServerInstallation) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeEnterpriseServerUserAccount includes the requested fields of the GraphQL type EnterpriseServerUserAccount.
// The GraphQL type's documentation follows.
//
// A user account on an Enterprise Server installation.
type PaginateProjectItemsNodeEnterpriseServerUserAccount struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseServerUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccount) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnterpriseServerUserAccountEmail includes the requested fields of the GraphQL type EnterpriseServerUserAccountEmail.
// The GraphQL type's documentation follows.
//
// An email belonging to a user account on an Enterprise Server installation.
type PaginateProjectItemsNodeEnterpriseServerUserAccountEmail struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseServerUserAccountEmail.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccountEmail) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload includes the requested fields of the GraphQL type EnterpriseServerUserAccountsUpload.
// The GraphQL type's documentation follows.
//
// A user accounts upload from an Enterprise Server installation.
type PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseServerUserAccountsUpload) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeEnterpriseUserAccount includes the requested fields of the GraphQL type EnterpriseUserAccount.
// The GraphQL type's documentation follows.
//
// An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
type PaginateProjectItemsNodeEnterpriseUserAccount struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnterpriseUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnterpriseUserAccount) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeEnvironment includes the requested fields of the GraphQL type Environment.
// The GraphQL type's documentation follows.
//
// An environment.
type PaginateProjectItemsNodeEnvironment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeEnvironment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeEnvironment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeExternalIdentity includes the requested fields of the GraphQL type ExternalIdentity.
// The GraphQL type's documentation follows.
//
// An external identity provisioned by SAML SSO or SCIM. If SAML is configured on
// the organization, the external identity is visible to (1) organization owners,
// (2) organization owners' personal access tokens (classic) with read:org or
// admin:org scope, (3) GitHub App with an installation token with read or write
// access to members. If SAML is configured on the enterprise, the external
// identity is visible to (1) enterprise owners, (2) enterprise owners' personal
// access tokens (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectItemsNodeExternalIdentity struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeExternalIdentity.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeExternalIdentity) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeGist includes the requested fields of the GraphQL type Gist.
// The GraphQL type's documentation follows.
//
// A Gist.
type PaginateProjectItemsNodeGist struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeGist.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeGist) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeGistComment includes the requested fields of the GraphQL type GistComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Gist.
type PaginateProjectItemsNodeGistComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeGistComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeGistComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeHeadRefDeletedEvent includes the requested fields of the GraphQL type HeadRefDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_deleted' event on a given pull request.
type PaginateProjectItemsNodeHeadRefDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeHeadRefDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeHeadRefDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeHeadRefForcePushedEvent includes the requested fields of the GraphQL type HeadRefForcePushedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_force_pushed' event on a given pull request.
type PaginateProjectItemsNodeHeadRefForcePushedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeHeadRefForcePushedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeHeadRefForcePushedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeHeadRefRestoredEvent includes the requested fields of the GraphQL type HeadRefRestoredEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_restored' event on a given pull request.
type PaginateProjectItemsNodeHeadRefRestoredEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeHeadRefRestoredEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeHeadRefRestoredEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeIpAllowListEntry includes the requested fields of the GraphQL type IpAllowListEntry.
// The GraphQL type's documentation follows.
//
// An IP address or range of addresses that is allowed to access an owner's resources.
type PaginateProjectItemsNodeIpAllowListEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeIpAllowListEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeIpAllowListEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type PaginateProjectItemsNodeIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeIssue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeIssueComment includes the requested fields of the GraphQL type IssueComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Issue.
type PaginateProjectItemsNodeIssueComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeIssueComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeIssueComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLabel includes the requested fields of the GraphQL type Label.
// The GraphQL type's documentation follows.
//
// A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.
type PaginateProjectItemsNodeLabel struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLabel.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLabel) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLabeledEvent includes the requested fields of the GraphQL type LabeledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'labeled' event on a given issue or pull request.
type PaginateProjectItemsNodeLabeledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLabeledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLabeledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLanguage includes the requested fields of the GraphQL type Language.
// The GraphQL type's documentation follows.
//
// Represents a given language found in repositories.
type PaginateProjectItemsNodeLanguage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLanguage.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLanguage) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLicense includes the requested fields of the GraphQL type License.
// The GraphQL type's documentation follows.
//
// A repository's open source license
type PaginateProjectItemsNodeLicense struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLicense.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLicense) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLinkedBranch includes the requested fields of the GraphQL type LinkedBranch.
// The GraphQL type's documentation follows.
//
// A branch linked to an issue.
type PaginateProjectItemsNodeLinkedBranch struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLinkedBranch.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLinkedBranch) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeLockedEvent includes the requested fields of the GraphQL type LockedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'locked' event on a given issue or pull request.
type PaginateProjectItemsNodeLockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeLockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeLockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type PaginateProjectItemsNodeMannequin struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMannequin.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMannequin) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMarkedAsDuplicateEvent includes the requested fields of the GraphQL type MarkedAsDuplicateEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'marked_as_duplicate' event on a given issue or pull request.
type PaginateProjectItemsNodeMarkedAsDuplicateEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMarkedAsDuplicateEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMarkedAsDuplicateEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMarketplaceCategory includes the requested fields of the GraphQL type MarketplaceCategory.
// The GraphQL type's documentation follows.
//
// A public description of a Marketplace category.
type PaginateProjectItemsNodeMarketplaceCategory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMarketplaceCategory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMarketplaceCategory) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMarketplaceListing includes the requested fields of the GraphQL type MarketplaceListing.
// The GraphQL type's documentation follows.
//
// A listing in the GitHub integration marketplace.
type PaginateProjectItemsNodeMarketplaceListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMarketplaceListing.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMarketplaceListing) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMemberFeatureRequestNotification includes the requested fields of the GraphQL type MemberFeatureRequestNotification.
// The GraphQL type's documentation follows.
//
// Represents a member feature request notification
type PaginateProjectItemsNodeMemberFeatureRequestNotification struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMemberFeatureRequestNotification.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMemberFeatureRequestNotification) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposClearAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.clear event.
type PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMembersCanDeleteReposClearAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.disable event.
type PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMembersCanDeleteReposDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.enable event.
type PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMembersCanDeleteReposEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeMentionedEvent includes the requested fields of the GraphQL type MentionedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'mentioned' event on a given issue or pull request.
type PaginateProjectItemsNodeMentionedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMentionedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMentionedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMergeQueue includes the requested fields of the GraphQL type MergeQueue.
// The GraphQL type's documentation follows.
//
// The queue of pull request entries to be merged into a protected branch in a repository.
type PaginateProjectItemsNodeMergeQueue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMergeQueue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMergeQueue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMergeQueueEntry includes the requested fields of the GraphQL type MergeQueueEntry.
// The GraphQL type's documentation follows.
//
// Entries in a MergeQueue
type PaginateProjectItemsNodeMergeQueueEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMergeQueueEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMergeQueueEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMergedEvent includes the requested fields of the GraphQL type MergedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'merged' event on a given pull request.
type PaginateProjectItemsNodeMergedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMergedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMergedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMigrationSource includes the requested fields of the GraphQL type MigrationSource.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) migration source.
type PaginateProjectItemsNodeMigrationSource struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMigrationSource.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMigrationSource) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMilestone includes the requested fields of the GraphQL type Milestone.
// The GraphQL type's documentation follows.
//
// Represents a Milestone object on a given repository.
type PaginateProjectItemsNodeMilestone struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMilestone.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMilestone) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMilestonedEvent includes the requested fields of the GraphQL type MilestonedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'milestoned' event on a given issue or pull request.
type PaginateProjectItemsNodeMilestonedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMilestonedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMilestonedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeMovedColumnsInProjectEvent includes the requested fields of the GraphQL type MovedColumnsInProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'moved_columns_in_project' event on a given issue or pull request.
type PaginateProjectItemsNodeMovedColumnsInProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeMovedColumnsInProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeMovedColumnsInProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOIDCProvider includes the requested fields of the GraphQL type OIDCProvider.
// The GraphQL type's documentation follows.
//
// An OIDC identity provider configured to provision identities for an enterprise.
// Visible to enterprise owners or enterprise owners' personal access tokens
// (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectItemsNodeOIDCProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOIDCProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOIDCProvider) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOauthApplicationCreateAuditEntry includes the requested fields of the GraphQL type OauthApplicationCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a oauth_application.create event.
type PaginateProjectItemsNodeOauthApplicationCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOauthApplicationCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOauthApplicationCreateAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry includes the requested fields of the GraphQL type OrgAddBillingManagerAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.add_billing_manager
type PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgAddBillingManagerAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgAddMemberAuditEntry includes the requested fields of the GraphQL type OrgAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.add_member
type PaginateProjectItemsNodeOrgAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgBlockUserAuditEntry includes the requested fields of the GraphQL type OrgBlockUserAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.block_user
type PaginateProjectItemsNodeOrgBlockUserAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgBlockUserAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgBlockUserAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type OrgConfigDisableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.config.disable_collaborators_only event.
type PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgConfigDisableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type OrgConfigEnableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.config.enable_collaborators_only event.
type PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgConfigEnableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgCreateAuditEntry includes the requested fields of the GraphQL type OrgCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.create event.
type PaginateProjectItemsNodeOrgCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgCreateAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry includes the requested fields of the GraphQL type OrgDisableOauthAppRestrictionsAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_oauth_app_restrictions event.
type PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgDisableOauthAppRestrictionsAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgDisableSamlAuditEntry includes the requested fields of the GraphQL type OrgDisableSamlAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_saml event.
type PaginateProjectItemsNodeOrgDisableSamlAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgDisableSamlAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgDisableSamlAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry includes the requested fields of the GraphQL type OrgDisableTwoFactorRequirementAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_two_factor_requirement event.
type PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgDisableTwoFactorRequirementAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry includes the requested fields of the GraphQL type OrgEnableOauthAppRestrictionsAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_oauth_app_restrictions event.
type PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgEnableOauthAppRestrictionsAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgEnableSamlAuditEntry includes the requested fields of the GraphQL type OrgEnableSamlAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_saml event.
type PaginateProjectItemsNodeOrgEnableSamlAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgEnableSamlAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgEnableSamlAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry includes the requested fields of the GraphQL type OrgEnableTwoFactorRequirementAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_two_factor_requirement event.
type PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgEnableTwoFactorRequirementAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgInviteMemberAuditEntry includes the requested fields of the GraphQL type OrgInviteMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.invite_member event.
type PaginateProjectItemsNodeOrgInviteMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgInviteMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgInviteMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry includes the requested fields of the GraphQL type OrgInviteToBusinessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.invite_to_business event.
type PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgInviteToBusinessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessApprovedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_approved event.
type PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgOauthAppAccessApprovedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessBlockedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_blocked event.
type PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgOauthAppAccessBlockedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessDeniedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_denied event.
type PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgOauthAppAccessDeniedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessRequestedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_requested event.
type PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgOauthAppAccessRequestedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessUnblockedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_unblocked event.
type PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgOauthAppAccessUnblockedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry includes the requested fields of the GraphQL type OrgRemoveBillingManagerAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_billing_manager event.
type PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgRemoveBillingManagerAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgRemoveMemberAuditEntry includes the requested fields of the GraphQL type OrgRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_member event.
type PaginateProjectItemsNodeOrgRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry includes the requested fields of the GraphQL type OrgRemoveOutsideCollaboratorAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_outside_collaborator event.
type PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgRemoveOutsideCollaboratorAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgRestoreMemberAuditEntry includes the requested fields of the GraphQL type OrgRestoreMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.restore_member event.
type PaginateProjectItemsNodeOrgRestoreMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgRestoreMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgRestoreMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgUnblockUserAuditEntry includes the requested fields of the GraphQL type OrgUnblockUserAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.unblock_user
type PaginateProjectItemsNodeOrgUnblockUserAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgUnblockUserAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgUnblockUserAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateDefaultRepositoryPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_default_repository_permission
type PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgUpdateDefaultRepositoryPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgUpdateMemberAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member event.
type PaginateProjectItemsNodeOrgUpdateMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgUpdateMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgUpdateMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberRepositoryCreationPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member_repository_creation_permission event.
type PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member_repository_invitation_permission event.
type PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type PaginateProjectItemsNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrganization) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrganizationIdentityProvider includes the requested fields of the GraphQL type OrganizationIdentityProvider.
// The GraphQL type's documentation follows.
//
// An Identity Provider configured to provision SAML and SCIM identities for
// Organizations. Visible to (1) organization owners, (2) organization owners'
// personal access tokens (classic) with read:org or admin:org scope, (3) GitHub
// App with an installation token with read or write access to members.
type PaginateProjectItemsNodeOrganizationIdentityProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrganizationIdentityProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrganizationIdentityProvider) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeOrganizationInvitation includes the requested fields of the GraphQL type OrganizationInvitation.
// The GraphQL type's documentation follows.
//
// An Invitation for a user to an organization.
type PaginateProjectItemsNodeOrganizationInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrganizationInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrganizationInvitation) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeOrganizationMigration includes the requested fields of the GraphQL type OrganizationMigration.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) organization migration.
type PaginateProjectItemsNodeOrganizationMigration struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeOrganizationMigration.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeOrganizationMigration) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePackage includes the requested fields of the GraphQL type Package.
// The GraphQL type's documentation follows.
//
// Information for an uploaded package.
type PaginateProjectItemsNodePackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePackage.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePackage) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePackageFile includes the requested fields of the GraphQL type PackageFile.
// The GraphQL type's documentation follows.
//
// A file in a package version.
type PaginateProjectItemsNodePackageFile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePackageFile.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePackageFile) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePackageTag includes the requested fields of the GraphQL type PackageTag.
// The GraphQL type's documentation follows.
//
// A version tag contains the mapping between a tag name and a version.
type PaginateProjectItemsNodePackageTag struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePackageTag.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePackageTag) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePackageVersion includes the requested fields of the GraphQL type PackageVersion.
// The GraphQL type's documentation follows.
//
// Information about a specific package version.
type PaginateProjectItemsNodePackageVersion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePackageVersion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePackageVersion) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePinnedDiscussion includes the requested fields of the GraphQL type PinnedDiscussion.
// The GraphQL type's documentation follows.
//
// A Pinned Discussion is a discussion pinned to a repository's index page.
type PaginateProjectItemsNodePinnedDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePinnedDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePinnedDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePinnedEnvironment includes the requested fields of the GraphQL type PinnedEnvironment.
// The GraphQL type's documentation follows.
//
// Represents a pinned environment on a given repository
type PaginateProjectItemsNodePinnedEnvironment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePinnedEnvironment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePinnedEnvironment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePinnedEvent includes the requested fields of the GraphQL type PinnedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'pinned' event on a given issue or pull request.
type PaginateProjectItemsNodePinnedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePinnedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePinnedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePinnedIssue includes the requested fields of the GraphQL type PinnedIssue.
// The GraphQL type's documentation follows.
//
// A Pinned Issue is a issue pinned to a repository's index page.
type PaginateProjectItemsNodePinnedIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePinnedIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePinnedIssue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry includes the requested fields of the GraphQL type PrivateRepositoryForkingDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a private_repository_forking.disable event.
type PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePrivateRepositoryForkingDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry includes the requested fields of the GraphQL type PrivateRepositoryForkingEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a private_repository_forking.enable event.
type PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePrivateRepositoryForkingEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProject includes the requested fields of the GraphQL type Project.
// The GraphQL type's documentation follows.
//
// Projects manage issues, pull requests and notes within a project owner.
type PaginateProjectItemsNodeProject struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProject.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProject) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectCard includes the requested fields of the GraphQL type ProjectCard.
// The GraphQL type's documentation follows.
//
// A card in a project.
type PaginateProjectItemsNodeProjectCard struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectCard.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectCard) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectColumn includes the requested fields of the GraphQL type ProjectColumn.
// The GraphQL type's documentation follows.
//
// A column inside a project.
type PaginateProjectItemsNodeProjectColumn struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectColumn.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectColumn) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2 includes the requested fields of the GraphQL type ProjectV2.
// The GraphQL type's documentation follows.
//
// New projects that manage issues, pull requests and drafts using tables and boards.
type PaginateProjectItemsNodeProjectV2 struct {
	Typename string `json:"__typename"`
	// List of items in the project
	Items PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection `json:"items"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2) GetTypename() string { return v.Typename }

// GetItems returns PaginateProjectItemsNodeProjectV2.Items, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2) GetItems() PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection {
	return v.Items
}

// PaginateProjectItemsNodeProjectV2Field includes the requested fields of the GraphQL type ProjectV2Field.
// The GraphQL type's documentation follows.
//
// A field inside a project.
type PaginateProjectItemsNodeProjectV2Field struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2Field.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2Field) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2Item includes the requested fields of the GraphQL type ProjectV2Item.
// The GraphQL type's documentation follows.
//
// An item within a Project.
type PaginateProjectItemsNodeProjectV2Item struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2Item.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2Item) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2ItemFieldDateValue includes the requested fields of the GraphQL type ProjectV2ItemFieldDateValue.
// The GraphQL type's documentation follows.
//
// The value of a date field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemFieldDateValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemFieldDateValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemFieldDateValue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2ItemFieldIterationValue includes the requested fields of the GraphQL type ProjectV2ItemFieldIterationValue.
// The GraphQL type's documentation follows.
//
// The value of an iteration field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemFieldIterationValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemFieldIterationValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemFieldIterationValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemFieldNumberValue includes the requested fields of the GraphQL type ProjectV2ItemFieldNumberValue.
// The GraphQL type's documentation follows.
//
// The value of a number field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemFieldNumberValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemFieldNumberValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemFieldNumberValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue includes the requested fields of the GraphQL type ProjectV2ItemFieldSingleSelectValue.
// The GraphQL type's documentation follows.
//
// The value of a single select field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemFieldSingleSelectValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemFieldTextValue includes the requested fields of the GraphQL type ProjectV2ItemFieldTextValue.
// The GraphQL type's documentation follows.
//
// The value of a text field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemFieldTextValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemFieldTextValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemFieldTextValue) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection includes the requested fields of the GraphQL type ProjectV2ItemConnection.
// The GraphQL type's documentation follows.
//
// The connection type for ProjectV2Item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection struct {
	// A list of nodes.
	Nodes []PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item `json:"nodes"`
}

// GetNodes returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnection) GetNodes() []PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item {
	return v.Nodes
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item includes the requested fields of the GraphQL type ProjectV2Item.
// The GraphQL type's documentation follows.
//
// An item within a Project.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item struct {
	// The Node ID of the ProjectV2Item object
	Id string `json:"id"`
	// The field values that are set on the item.
	FieldValues PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection `json:"fieldValues"`
}

// GetId returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item.Id, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item) GetId() string {
	return v.Id
}

// GetFieldValues returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item.FieldValues, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item) GetFieldValues() PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection {
	return v.FieldValues
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection includes the requested fields of the GraphQL type ProjectV2ItemFieldValueConnection.
// The GraphQL type's documentation follows.
//
// The connection type for ProjectV2ItemFieldValue.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection struct {
	// A list of nodes.
	Nodes []PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue `json:"-"`
}

// GetNodes returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) GetNodes() []PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue {
	return v.Nodes
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection
		Nodes []json.RawMessage `json:"nodes"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Nodes
		src := firstPass.Nodes
		*dst = make(
			[]PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection struct {
	Nodes []json.RawMessage `json:"nodes"`
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) __premarshalJSON() (*__premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection, error) {
	var retval __premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection

	{

		dst := &retval.Nodes
		src := v.Nodes
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes: %w", err)
			}
		}
	}
	return &retval, nil
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue includes the requested fields of the GraphQL type ProjectV2ItemFieldDateValue.
// The GraphQL type's documentation follows.
//
// The value of a date field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue includes the requested fields of the GraphQL type ProjectV2ItemFieldIterationValue.
// The GraphQL type's documentation follows.
//
// The value of an iteration field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue includes the requested fields of the GraphQL type ProjectV2ItemFieldLabelValue.
// The GraphQL type's documentation follows.
//
// The value of the labels field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue includes the requested fields of the GraphQL type ProjectV2ItemFieldMilestoneValue.
// The GraphQL type's documentation follows.
//
// The value of a milestone field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue includes the requested fields of the GraphQL type ProjectV2ItemFieldNumberValue.
// The GraphQL type's documentation follows.
//
// The value of a number field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue includes the requested fields of the GraphQL type ProjectV2ItemFieldPullRequestValue.
// The GraphQL type's documentation follows.
//
// The value of a pull request field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue includes the requested fields of the GraphQL type ProjectV2ItemFieldRepositoryValue.
// The GraphQL type's documentation follows.
//
// The value of a repository field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue includes the requested fields of the GraphQL type ProjectV2ItemFieldReviewerValue.
// The GraphQL type's documentation follows.
//
// The value of a reviewers field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue includes the requested fields of the GraphQL type ProjectV2ItemFieldSingleSelectValue.
// The GraphQL type's documentation follows.
//
// The value of a single select field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`
	// The name of the selected single select option.
	Name string `json:"name"`
	// The project field that contains this value.
	Field PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration `json:"-"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetName() string {
	return v.Name
}

// GetField returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetField() PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration {
	return v.Field
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
		Field json.RawMessage `json:"field"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Field
		src := firstPass.Field
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field: %w", err)
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`

	Name string `json:"name"`

	Field json.RawMessage `json:"field"`
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) __premarshalJSON() (*__premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue, error) {
	var retval __premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue

	retval.Typename = v.Typename
	retval.Name = v.Name
	{

		dst := &retval.Field
		src := v.Field
		var err error
		*dst, err = __marshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field: %w", err)
		}
	}
	return &retval, nil
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field includes the requested fields of the GraphQL type ProjectV2Field.
// The GraphQL type's documentation follows.
//
// A field inside a project.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) GetName() string {
	return v.Name
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration includes the requested fields of the GraphQL interface ProjectV2FieldConfiguration.
//
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration is implemented by the following types:
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField
// The GraphQL type's documentation follows.
//
// Configurations for project fields.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration interface {
	implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}

func __unmarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(b []byte, v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ProjectV2Field":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field)
		return json.Unmarshal(b, *v)
	case "ProjectV2IterationField":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField)
		return json.Unmarshal(b, *v)
	case "ProjectV2SingleSelectField":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ProjectV2FieldConfiguration.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field:
		typename = "ProjectV2Field"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField:
		typename = "ProjectV2IterationField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField:
		typename = "ProjectV2SingleSelectField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration: "%T"`, v)
	}
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField includes the requested fields of the GraphQL type ProjectV2IterationField.
// The GraphQL type's documentation follows.
//
// An iteration field inside a project.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) GetName() string {
	return v.Name
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField includes the requested fields of the GraphQL type ProjectV2SingleSelectField.
// The GraphQL type's documentation follows.
//
// A single select field inside a project.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) GetName() string {
	return v.Name
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue includes the requested fields of the GraphQL type ProjectV2ItemFieldTextValue.
// The GraphQL type's documentation follows.
//
// The value of a text field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue includes the requested fields of the GraphQL type ProjectV2ItemFieldUserValue.
// The GraphQL type's documentation follows.
//
// The value of a user field in a Project item.
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue includes the requested fields of the GraphQL interface ProjectV2ItemFieldValue.
//
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue is implemented by the following types:
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue
// PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue
// The GraphQL type's documentation follows.
//
// Project field values
type PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue interface {
	implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue) implementsGraphQLInterfacePaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}

func __unmarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(b []byte, v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ProjectV2ItemFieldDateValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldIterationValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldLabelValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldMilestoneValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldNumberValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldPullRequestValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldRepositoryValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldReviewerValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldSingleSelectValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldTextValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldUserValue":
		*v = new(PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ProjectV2ItemFieldValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(v *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue:
		typename = "ProjectV2ItemFieldDateValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue:
		typename = "ProjectV2ItemFieldIterationValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue:
		typename = "ProjectV2ItemFieldLabelValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue:
		typename = "ProjectV2ItemFieldMilestoneValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue:
		typename = "ProjectV2ItemFieldNumberValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue:
		typename = "ProjectV2ItemFieldPullRequestValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue:
		typename = "ProjectV2ItemFieldRepositoryValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue:
		typename = "ProjectV2ItemFieldReviewerValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue:
		typename = "ProjectV2ItemFieldSingleSelectValue"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalPaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
		}{typename, premarshaled}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue:
		typename = "ProjectV2ItemFieldTextValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue:
		typename = "ProjectV2ItemFieldUserValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectItemsNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue: "%T"`, v)
	}
}

// PaginateProjectItemsNodeProjectV2IterationField includes the requested fields of the GraphQL type ProjectV2IterationField.
// The GraphQL type's documentation follows.
//
// An iteration field inside a project.
type PaginateProjectItemsNodeProjectV2IterationField struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2IterationField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2IterationField) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2SingleSelectField includes the requested fields of the GraphQL type ProjectV2SingleSelectField.
// The GraphQL type's documentation follows.
//
// A single select field inside a project.
type PaginateProjectItemsNodeProjectV2SingleSelectField struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2SingleSelectField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2SingleSelectField) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2StatusUpdate includes the requested fields of the GraphQL type ProjectV2StatusUpdate.
// The GraphQL type's documentation follows.
//
// A status update within a project.
type PaginateProjectItemsNodeProjectV2StatusUpdate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2StatusUpdate.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2StatusUpdate) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2View includes the requested fields of the GraphQL type ProjectV2View.
// The GraphQL type's documentation follows.
//
// A view within a ProjectV2.
type PaginateProjectItemsNodeProjectV2View struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2View.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2View) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeProjectV2Workflow includes the requested fields of the GraphQL type ProjectV2Workflow.
// The GraphQL type's documentation follows.
//
// A workflow inside a project.
type PaginateProjectItemsNodeProjectV2Workflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeProjectV2Workflow.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeProjectV2Workflow) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePublicKey includes the requested fields of the GraphQL type PublicKey.
// The GraphQL type's documentation follows.
//
// A user's public key.
type PaginateProjectItemsNodePublicKey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePublicKey.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePublicKey) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type PaginateProjectItemsNodePullRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequest) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequestCommit includes the requested fields of the GraphQL type PullRequestCommit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit part of a pull request.
type PaginateProjectItemsNodePullRequestCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestCommit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestCommit) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequestCommitCommentThread includes the requested fields of the GraphQL type PullRequestCommitCommentThread.
// The GraphQL type's documentation follows.
//
// Represents a commit comment thread part of a pull request.
type PaginateProjectItemsNodePullRequestCommitCommentThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestCommitCommentThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestCommitCommentThread) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodePullRequestReview includes the requested fields of the GraphQL type PullRequestReview.
// The GraphQL type's documentation follows.
//
// A review object for a given pull request.
type PaginateProjectItemsNodePullRequestReview struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestReview.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestReview) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequestReviewComment includes the requested fields of the GraphQL type PullRequestReviewComment.
// The GraphQL type's documentation follows.
//
// A review comment associated with a given repository pull request.
type PaginateProjectItemsNodePullRequestReviewComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestReviewComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestReviewComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequestReviewThread includes the requested fields of the GraphQL type PullRequestReviewThread.
// The GraphQL type's documentation follows.
//
// A threaded list of comments for a given pull request.
type PaginateProjectItemsNodePullRequestReviewThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestReviewThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestReviewThread) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePullRequestThread includes the requested fields of the GraphQL type PullRequestThread.
// The GraphQL type's documentation follows.
//
// A threaded list of comments for a given pull request.
type PaginateProjectItemsNodePullRequestThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePullRequestThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePullRequestThread) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePush includes the requested fields of the GraphQL type Push.
// The GraphQL type's documentation follows.
//
// A Git push.
type PaginateProjectItemsNodePush struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePush.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePush) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodePushAllowance includes the requested fields of the GraphQL type PushAllowance.
// The GraphQL type's documentation follows.
//
// A team, user, or app who has the ability to push to a protected branch.
type PaginateProjectItemsNodePushAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodePushAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodePushAllowance) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReaction includes the requested fields of the GraphQL type Reaction.
// The GraphQL type's documentation follows.
//
// An emoji reaction to a particular piece of content.
type PaginateProjectItemsNodeReaction struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReaction.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReaction) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReadyForReviewEvent includes the requested fields of the GraphQL type ReadyForReviewEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'ready_for_review' event on a given pull request.
type PaginateProjectItemsNodeReadyForReviewEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReadyForReviewEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReadyForReviewEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRef includes the requested fields of the GraphQL type Ref.
// The GraphQL type's documentation follows.
//
// Represents a Git reference.
type PaginateProjectItemsNodeRef struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRef.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRef) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReferencedEvent includes the requested fields of the GraphQL type ReferencedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'referenced' event on a given `ReferencedSubject`.
type PaginateProjectItemsNodeReferencedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReferencedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReferencedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRelease includes the requested fields of the GraphQL type Release.
// The GraphQL type's documentation follows.
//
// A release contains the content for a release.
type PaginateProjectItemsNodeRelease struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRelease.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRelease) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReleaseAsset includes the requested fields of the GraphQL type ReleaseAsset.
// The GraphQL type's documentation follows.
//
// A release asset contains the content for a release asset.
type PaginateProjectItemsNodeReleaseAsset struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReleaseAsset.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReleaseAsset) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRemovedFromMergeQueueEvent includes the requested fields of the GraphQL type RemovedFromMergeQueueEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'removed_from_merge_queue' event on a given pull request.
type PaginateProjectItemsNodeRemovedFromMergeQueueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRemovedFromMergeQueueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRemovedFromMergeQueueEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRemovedFromProjectEvent includes the requested fields of the GraphQL type RemovedFromProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'removed_from_project' event on a given issue or pull request.
type PaginateProjectItemsNodeRemovedFromProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRemovedFromProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRemovedFromProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRenamedTitleEvent includes the requested fields of the GraphQL type RenamedTitleEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'renamed' event on a given issue or pull request
type PaginateProjectItemsNodeRenamedTitleEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRenamedTitleEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRenamedTitleEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReopenedEvent includes the requested fields of the GraphQL type ReopenedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'reopened' event on any `Closable`.
type PaginateProjectItemsNodeReopenedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReopenedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReopenedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoAccessAuditEntry includes the requested fields of the GraphQL type RepoAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.access event.
type PaginateProjectItemsNodeRepoAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoAccessAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoAddMemberAuditEntry includes the requested fields of the GraphQL type RepoAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.add_member event.
type PaginateProjectItemsNodeRepoAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoAddTopicAuditEntry includes the requested fields of the GraphQL type RepoAddTopicAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.add_topic event.
type PaginateProjectItemsNodeRepoAddTopicAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoAddTopicAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoAddTopicAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoArchivedAuditEntry includes the requested fields of the GraphQL type RepoArchivedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.archived event.
type PaginateProjectItemsNodeRepoArchivedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoArchivedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoArchivedAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry includes the requested fields of the GraphQL type RepoChangeMergeSettingAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.change_merge_setting event.
type PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoChangeMergeSettingAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_anonymous_git_access event.
type PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigDisableAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_collaborators_only event.
type PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigDisableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableContributorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_contributors_only event.
type PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigDisableContributorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableSockpuppetDisallowedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_sockpuppet_disallowed event.
type PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigDisableSockpuppetDisallowedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_anonymous_git_access event.
type PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigEnableAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_collaborators_only event.
type PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigEnableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableContributorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_contributors_only event.
type PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigEnableContributorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableSockpuppetDisallowedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_sockpuppet_disallowed event.
type PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigEnableSockpuppetDisallowedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigLockAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.lock_anonymous_git_access event.
type PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigLockAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigUnlockAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.unlock_anonymous_git_access event.
type PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoConfigUnlockAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepoCreateAuditEntry includes the requested fields of the GraphQL type RepoCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.create event.
type PaginateProjectItemsNodeRepoCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoCreateAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoDestroyAuditEntry includes the requested fields of the GraphQL type RepoDestroyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.destroy event.
type PaginateProjectItemsNodeRepoDestroyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoDestroyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoDestroyAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoRemoveMemberAuditEntry includes the requested fields of the GraphQL type RepoRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.remove_member event.
type PaginateProjectItemsNodeRepoRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepoRemoveTopicAuditEntry includes the requested fields of the GraphQL type RepoRemoveTopicAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.remove_topic event.
type PaginateProjectItemsNodeRepoRemoveTopicAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepoRemoveTopicAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepoRemoveTopicAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type PaginateProjectItemsNodeRepository struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepository.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepository) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryInvitation includes the requested fields of the GraphQL type RepositoryInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to be added to a repository.
type PaginateProjectItemsNodeRepositoryInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryInvitation) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryMigration includes the requested fields of the GraphQL type RepositoryMigration.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) repository migration.
type PaginateProjectItemsNodeRepositoryMigration struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryMigration.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryMigration) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryRule includes the requested fields of the GraphQL type RepositoryRule.
// The GraphQL type's documentation follows.
//
// A repository rule.
type PaginateProjectItemsNodeRepositoryRule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryRule.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryRule) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryRuleset includes the requested fields of the GraphQL type RepositoryRuleset.
// The GraphQL type's documentation follows.
//
// A repository ruleset.
type PaginateProjectItemsNodeRepositoryRuleset struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryRuleset.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryRuleset) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryRulesetBypassActor includes the requested fields of the GraphQL type RepositoryRulesetBypassActor.
// The GraphQL type's documentation follows.
//
// A team or app that has the ability to bypass a rules defined on a ruleset
type PaginateProjectItemsNodeRepositoryRulesetBypassActor struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryRulesetBypassActor.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryRulesetBypassActor) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepositoryTopic includes the requested fields of the GraphQL type RepositoryTopic.
// The GraphQL type's documentation follows.
//
// A repository-topic connects a repository to a topic.
type PaginateProjectItemsNodeRepositoryTopic struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryTopic.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryTopic) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry includes the requested fields of the GraphQL type RepositoryVisibilityChangeDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repository_visibility_change.disable event.
type PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryVisibilityChangeDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry includes the requested fields of the GraphQL type RepositoryVisibilityChangeEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repository_visibility_change.enable event.
type PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryVisibilityChangeEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeRepositoryVulnerabilityAlert includes the requested fields of the GraphQL type RepositoryVulnerabilityAlert.
// The GraphQL type's documentation follows.
//
// A Dependabot alert for a repository with a dependency affected by a security vulnerability.
type PaginateProjectItemsNodeRepositoryVulnerabilityAlert struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeRepositoryVulnerabilityAlert.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeRepositoryVulnerabilityAlert) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeReviewDismissalAllowance includes the requested fields of the GraphQL type ReviewDismissalAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to dismiss a review on a protected branch.
type PaginateProjectItemsNodeReviewDismissalAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReviewDismissalAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReviewDismissalAllowance) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReviewDismissedEvent includes the requested fields of the GraphQL type ReviewDismissedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'review_dismissed' event on a given issue or pull request.
type PaginateProjectItemsNodeReviewDismissedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReviewDismissedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReviewDismissedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReviewRequest includes the requested fields of the GraphQL type ReviewRequest.
// The GraphQL type's documentation follows.
//
// A request for a user to review a pull request.
type PaginateProjectItemsNodeReviewRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReviewRequest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReviewRequest) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReviewRequestRemovedEvent includes the requested fields of the GraphQL type ReviewRequestRemovedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'review_request_removed' event on a given pull request.
type PaginateProjectItemsNodeReviewRequestRemovedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReviewRequestRemovedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReviewRequestRemovedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeReviewRequestedEvent includes the requested fields of the GraphQL type ReviewRequestedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'review_requested' event on a given pull request.
type PaginateProjectItemsNodeReviewRequestedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeReviewRequestedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeReviewRequestedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSavedReply includes the requested fields of the GraphQL type SavedReply.
// The GraphQL type's documentation follows.
//
// A Saved Reply is text a user can use to reply quickly.
type PaginateProjectItemsNodeSavedReply struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSavedReply.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSavedReply) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSecurityAdvisory includes the requested fields of the GraphQL type SecurityAdvisory.
// The GraphQL type's documentation follows.
//
// A GitHub Security Advisory
type PaginateProjectItemsNodeSecurityAdvisory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSecurityAdvisory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSecurityAdvisory) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorsActivity includes the requested fields of the GraphQL type SponsorsActivity.
// The GraphQL type's documentation follows.
//
// An event related to sponsorship activity.
type PaginateProjectItemsNodeSponsorsActivity struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorsActivity.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorsActivity) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorsListing includes the requested fields of the GraphQL type SponsorsListing.
// The GraphQL type's documentation follows.
//
// A GitHub Sponsors listing.
type PaginateProjectItemsNodeSponsorsListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorsListing.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorsListing) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorsListingFeaturedItem includes the requested fields of the GraphQL type SponsorsListingFeaturedItem.
// The GraphQL type's documentation follows.
//
// A record that is promoted on a GitHub Sponsors profile.
type PaginateProjectItemsNodeSponsorsListingFeaturedItem struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorsListingFeaturedItem.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorsListingFeaturedItem) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorsTier includes the requested fields of the GraphQL type SponsorsTier.
// The GraphQL type's documentation follows.
//
// A GitHub Sponsors tier associated with a GitHub Sponsors listing.
type PaginateProjectItemsNodeSponsorsTier struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorsTier.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorsTier) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorship includes the requested fields of the GraphQL type Sponsorship.
// The GraphQL type's documentation follows.
//
// A sponsorship relationship between a sponsor and a maintainer
type PaginateProjectItemsNodeSponsorship struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorship.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorship) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSponsorshipNewsletter includes the requested fields of the GraphQL type SponsorshipNewsletter.
// The GraphQL type's documentation follows.
//
// An update sent to sponsors of a user or organization on GitHub Sponsors.
type PaginateProjectItemsNodeSponsorshipNewsletter struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSponsorshipNewsletter.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSponsorshipNewsletter) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeStatus includes the requested fields of the GraphQL type Status.
// The GraphQL type's documentation follows.
//
// Represents a commit status.
type PaginateProjectItemsNodeStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeStatus) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeStatusCheckRollup includes the requested fields of the GraphQL type StatusCheckRollup.
// The GraphQL type's documentation follows.
//
// Represents the rollup for both the check runs and status for a commit.
type PaginateProjectItemsNodeStatusCheckRollup struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeStatusCheckRollup.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeStatusCheckRollup) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeStatusContext includes the requested fields of the GraphQL type StatusContext.
// The GraphQL type's documentation follows.
//
// Represents an individual commit status context
type PaginateProjectItemsNodeStatusContext struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeStatusContext.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeStatusContext) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeSubscribedEvent includes the requested fields of the GraphQL type SubscribedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'subscribed' event on a given `Subscribable`.
type PaginateProjectItemsNodeSubscribedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeSubscribedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeSubscribedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTag includes the requested fields of the GraphQL type Tag.
// The GraphQL type's documentation follows.
//
// Represents a Git tag.
type PaginateProjectItemsNodeTag struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTag.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTag) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// A team of users in an organization.
type PaginateProjectItemsNodeTeam struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeam.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeam) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamAddMemberAuditEntry includes the requested fields of the GraphQL type TeamAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.add_member event.
type PaginateProjectItemsNodeTeamAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamAddRepositoryAuditEntry includes the requested fields of the GraphQL type TeamAddRepositoryAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.add_repository event.
type PaginateProjectItemsNodeTeamAddRepositoryAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamAddRepositoryAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamAddRepositoryAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry includes the requested fields of the GraphQL type TeamChangeParentTeamAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.change_parent_team event.
type PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamChangeParentTeamAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeTeamDiscussion includes the requested fields of the GraphQL type TeamDiscussion.
// The GraphQL type's documentation follows.
//
// A team discussion.
type PaginateProjectItemsNodeTeamDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamDiscussionComment includes the requested fields of the GraphQL type TeamDiscussionComment.
// The GraphQL type's documentation follows.
//
// A comment on a team discussion.
type PaginateProjectItemsNodeTeamDiscussionComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamDiscussionComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamDiscussionComment) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamRemoveMemberAuditEntry includes the requested fields of the GraphQL type TeamRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.remove_member event.
type PaginateProjectItemsNodeTeamRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry includes the requested fields of the GraphQL type TeamRemoveRepositoryAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.remove_repository event.
type PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTeamRemoveRepositoryAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectItemsNodeTopic includes the requested fields of the GraphQL type Topic.
// The GraphQL type's documentation follows.
//
// A topic aggregates entities that are related to a subject.
type PaginateProjectItemsNodeTopic struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTopic.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTopic) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTransferredEvent includes the requested fields of the GraphQL type TransferredEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'transferred' event on a given issue or pull request.
type PaginateProjectItemsNodeTransferredEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTransferredEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTransferredEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeTree includes the requested fields of the GraphQL type Tree.
// The GraphQL type's documentation follows.
//
// Represents a Git tree.
type PaginateProjectItemsNodeTree struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeTree.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeTree) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnassignedEvent includes the requested fields of the GraphQL type UnassignedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unassigned' event on any assignable object.
type PaginateProjectItemsNodeUnassignedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnassignedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnassignedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnlabeledEvent includes the requested fields of the GraphQL type UnlabeledEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unlabeled' event on a given issue or pull request.
type PaginateProjectItemsNodeUnlabeledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnlabeledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnlabeledEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnlockedEvent includes the requested fields of the GraphQL type UnlockedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unlocked' event on a given issue or pull request.
type PaginateProjectItemsNodeUnlockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnlockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnlockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnmarkedAsDuplicateEvent includes the requested fields of the GraphQL type UnmarkedAsDuplicateEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
type PaginateProjectItemsNodeUnmarkedAsDuplicateEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnmarkedAsDuplicateEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnmarkedAsDuplicateEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnpinnedEvent includes the requested fields of the GraphQL type UnpinnedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unpinned' event on a given issue or pull request.
type PaginateProjectItemsNodeUnpinnedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnpinnedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnpinnedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUnsubscribedEvent includes the requested fields of the GraphQL type UnsubscribedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unsubscribed' event on a given `Subscribable`.
type PaginateProjectItemsNodeUnsubscribedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUnsubscribedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUnsubscribedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type PaginateProjectItemsNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUser) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUserBlockedEvent includes the requested fields of the GraphQL type UserBlockedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'user_blocked' event on a given user.
type PaginateProjectItemsNodeUserBlockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUserBlockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUserBlockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUserContentEdit includes the requested fields of the GraphQL type UserContentEdit.
// The GraphQL type's documentation follows.
//
// An edit on user content
type PaginateProjectItemsNodeUserContentEdit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUserContentEdit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUserContentEdit) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUserList includes the requested fields of the GraphQL type UserList.
// The GraphQL type's documentation follows.
//
// A user-curated list of repositories
type PaginateProjectItemsNodeUserList struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUserList.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUserList) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeUserStatus includes the requested fields of the GraphQL type UserStatus.
// The GraphQL type's documentation follows.
//
// The user's description of what they're currently doing.
type PaginateProjectItemsNodeUserStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeUserStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeUserStatus) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeVerifiableDomain includes the requested fields of the GraphQL type VerifiableDomain.
// The GraphQL type's documentation follows.
//
// A domain that can be verified or approved for an organization or an enterprise.
type PaginateProjectItemsNodeVerifiableDomain struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeVerifiableDomain.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeVerifiableDomain) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeWorkflow includes the requested fields of the GraphQL type Workflow.
// The GraphQL type's documentation follows.
//
// A workflow contains meta information about an Actions workflow file.
type PaginateProjectItemsNodeWorkflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeWorkflow.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeWorkflow) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeWorkflowRun includes the requested fields of the GraphQL type WorkflowRun.
// The GraphQL type's documentation follows.
//
// A workflow run.
type PaginateProjectItemsNodeWorkflowRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeWorkflowRun.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeWorkflowRun) GetTypename() string { return v.Typename }

// PaginateProjectItemsNodeWorkflowRunFile includes the requested fields of the GraphQL type WorkflowRunFile.
// The GraphQL type's documentation follows.
//
// An executed workflow file for a workflow run.
type PaginateProjectItemsNodeWorkflowRunFile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectItemsNodeWorkflowRunFile.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsNodeWorkflowRunFile) GetTypename() string { return v.Typename }

// PaginateProjectItemsResponse is returned by PaginateProjectItems on success.
type PaginateProjectItemsResponse struct {
	// Fetches an object given its ID.
	Node PaginateProjectItemsNode `json:"-"`
}

// GetNode returns PaginateProjectItemsResponse.Node, and is useful for accessing the field via an interface.
func (v *PaginateProjectItemsResponse) GetNode() PaginateProjectItemsNode { return v.Node }

func (v *PaginateProjectItemsResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectItemsResponse
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectItemsResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalPaginateProjectItemsNode(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal PaginateProjectItemsResponse.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectItemsResponse struct {
	Node json.RawMessage `json:"node"`
}

func (v *PaginateProjectItemsResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectItemsResponse) __premarshalJSON() (*__premarshalPaginateProjectItemsResponse, error) {
	var retval __premarshalPaginateProjectItemsResponse

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalPaginateProjectItemsNode(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal PaginateProjectItemsResponse.Node: %w", err)
		}
	}
	return &retval, nil
}

// __FetchUserProjectInput is used internally by genqlient
type __FetchUserProjectInput struct {
	UserId        string `json:"userId"`
	ProjectNumber int    `json:"projectNumber"`
}

// GetUserId returns __FetchUserProjectInput.UserId, and is useful for accessing the field via an interface.
func (v *__FetchUserProjectInput) GetUserId() string { return v.UserId }

// GetProjectNumber returns __FetchUserProjectInput.ProjectNumber, and is useful for accessing the field via an interface.
func (v *__FetchUserProjectInput) GetProjectNumber() int { return v.ProjectNumber }

// __PaginateProjectItemsInput is used internally by genqlient
type __PaginateProjectItemsInput struct {
	ProjectId string `json:"projectId"`
}

// GetProjectId returns __PaginateProjectItemsInput.ProjectId, and is useful for accessing the field via an interface.
func (v *__PaginateProjectItemsInput) GetProjectId() string { return v.ProjectId }

// The query or mutation executed by FetchUserProject.
const FetchUserProject_Operation = `
query FetchUserProject ($userId: String!, $projectNumber: Int!) {
	user(login: $userId) {
		projectV2(number: $projectNumber) {
			id
		}
	}
}
`

func FetchUserProject(
	ctx_ context.Context,
	client_ graphql.Client,
	userId string,
	projectNumber int,
) (*FetchUserProjectResponse, error) {
	req_ := &graphql.Request{
		OpName: "FetchUserProject",
		Query:  FetchUserProject_Operation,
		Variables: &__FetchUserProjectInput{
			UserId:        userId,
			ProjectNumber: projectNumber,
		},
	}
	var err_ error

	var data_ FetchUserProjectResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by PaginateProjectItems.
const PaginateProjectItems_Operation = `
query PaginateProjectItems ($projectId: ID!) {
	node(id: $projectId) {
		__typename
		... on ProjectV2 {
			items(first: 100) {
				nodes {
					id
					fieldValues(first: 8) {
						nodes {
							__typename
							... on ProjectV2ItemFieldSingleSelectValue {
								name
								field {
									__typename
									... on ProjectV2FieldCommon {
										name
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
`

func PaginateProjectItems(
	ctx_ context.Context,
	client_ graphql.Client,
	projectId string,
) (*PaginateProjectItemsResponse, error) {
	req_ := &graphql.Request{
		OpName: "PaginateProjectItems",
		Query:  PaginateProjectItems_Operation,
		Variables: &__PaginateProjectItemsInput{
			ProjectId: projectId,
		},
	}
	var err_ error

	var data_ PaginateProjectItemsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
