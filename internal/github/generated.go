// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package github

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// FetchUserProjectResponse is returned by FetchUserProject on success.
type FetchUserProjectResponse struct {
	// Lookup a user by login.
	User FetchUserProjectUser `json:"user"`
}

// GetUser returns FetchUserProjectResponse.User, and is useful for accessing the field via an interface.
func (v *FetchUserProjectResponse) GetUser() FetchUserProjectUser { return v.User }

// FetchUserProjectUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type FetchUserProjectUser struct {
	// Find a project by number.
	ProjectV2 FetchUserProjectUserProjectV2 `json:"projectV2"`
}

// GetProjectV2 returns FetchUserProjectUser.ProjectV2, and is useful for accessing the field via an interface.
func (v *FetchUserProjectUser) GetProjectV2() FetchUserProjectUserProjectV2 { return v.ProjectV2 }

// FetchUserProjectUserProjectV2 includes the requested fields of the GraphQL type ProjectV2.
// The GraphQL type's documentation follows.
//
// New projects that manage issues, pull requests and drafts using tables and boards.
type FetchUserProjectUserProjectV2 struct {
	// The Node ID of the ProjectV2 object
	Id string `json:"id"`
}

// GetId returns FetchUserProjectUserProjectV2.Id, and is useful for accessing the field via an interface.
func (v *FetchUserProjectUserProjectV2) GetId() string { return v.Id }

// PaginateProjectIssuesNode includes the requested fields of the GraphQL interface Node.
//
// PaginateProjectIssuesNode is implemented by the following types:
// PaginateProjectIssuesNodeAddedToMergeQueueEvent
// PaginateProjectIssuesNodeAddedToProjectEvent
// PaginateProjectIssuesNodeApp
// PaginateProjectIssuesNodeAssignedEvent
// PaginateProjectIssuesNodeAutoMergeDisabledEvent
// PaginateProjectIssuesNodeAutoMergeEnabledEvent
// PaginateProjectIssuesNodeAutoRebaseEnabledEvent
// PaginateProjectIssuesNodeAutoSquashEnabledEvent
// PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent
// PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent
// PaginateProjectIssuesNodeBaseRefChangedEvent
// PaginateProjectIssuesNodeBaseRefDeletedEvent
// PaginateProjectIssuesNodeBaseRefForcePushedEvent
// PaginateProjectIssuesNodeBlob
// PaginateProjectIssuesNodeBot
// PaginateProjectIssuesNodeBranchProtectionRule
// PaginateProjectIssuesNodeBypassForcePushAllowance
// PaginateProjectIssuesNodeBypassPullRequestAllowance
// PaginateProjectIssuesNodeCWE
// PaginateProjectIssuesNodeCheckRun
// PaginateProjectIssuesNodeCheckSuite
// PaginateProjectIssuesNodeClosedEvent
// PaginateProjectIssuesNodeCodeOfConduct
// PaginateProjectIssuesNodeCommentDeletedEvent
// PaginateProjectIssuesNodeCommit
// PaginateProjectIssuesNodeCommitComment
// PaginateProjectIssuesNodeCommitCommentThread
// PaginateProjectIssuesNodeComparison
// PaginateProjectIssuesNodeConnectedEvent
// PaginateProjectIssuesNodeConvertToDraftEvent
// PaginateProjectIssuesNodeConvertedNoteToIssueEvent
// PaginateProjectIssuesNodeConvertedToDiscussionEvent
// PaginateProjectIssuesNodeCrossReferencedEvent
// PaginateProjectIssuesNodeDemilestonedEvent
// PaginateProjectIssuesNodeDependencyGraphManifest
// PaginateProjectIssuesNodeDeployKey
// PaginateProjectIssuesNodeDeployedEvent
// PaginateProjectIssuesNodeDeployment
// PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent
// PaginateProjectIssuesNodeDeploymentReview
// PaginateProjectIssuesNodeDeploymentStatus
// PaginateProjectIssuesNodeDisconnectedEvent
// PaginateProjectIssuesNodeDiscussion
// PaginateProjectIssuesNodeDiscussionCategory
// PaginateProjectIssuesNodeDiscussionComment
// PaginateProjectIssuesNodeDiscussionPoll
// PaginateProjectIssuesNodeDiscussionPollOption
// PaginateProjectIssuesNodeDraftIssue
// PaginateProjectIssuesNodeEnterprise
// PaginateProjectIssuesNodeEnterpriseAdministratorInvitation
// PaginateProjectIssuesNodeEnterpriseIdentityProvider
// PaginateProjectIssuesNodeEnterpriseMemberInvitation
// PaginateProjectIssuesNodeEnterpriseRepositoryInfo
// PaginateProjectIssuesNodeEnterpriseServerInstallation
// PaginateProjectIssuesNodeEnterpriseServerUserAccount
// PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail
// PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload
// PaginateProjectIssuesNodeEnterpriseUserAccount
// PaginateProjectIssuesNodeEnvironment
// PaginateProjectIssuesNodeExternalIdentity
// PaginateProjectIssuesNodeGist
// PaginateProjectIssuesNodeGistComment
// PaginateProjectIssuesNodeHeadRefDeletedEvent
// PaginateProjectIssuesNodeHeadRefForcePushedEvent
// PaginateProjectIssuesNodeHeadRefRestoredEvent
// PaginateProjectIssuesNodeIpAllowListEntry
// PaginateProjectIssuesNodeIssue
// PaginateProjectIssuesNodeIssueComment
// PaginateProjectIssuesNodeLabel
// PaginateProjectIssuesNodeLabeledEvent
// PaginateProjectIssuesNodeLanguage
// PaginateProjectIssuesNodeLicense
// PaginateProjectIssuesNodeLinkedBranch
// PaginateProjectIssuesNodeLockedEvent
// PaginateProjectIssuesNodeMannequin
// PaginateProjectIssuesNodeMarkedAsDuplicateEvent
// PaginateProjectIssuesNodeMarketplaceCategory
// PaginateProjectIssuesNodeMarketplaceListing
// PaginateProjectIssuesNodeMemberFeatureRequestNotification
// PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry
// PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry
// PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry
// PaginateProjectIssuesNodeMentionedEvent
// PaginateProjectIssuesNodeMergeQueue
// PaginateProjectIssuesNodeMergeQueueEntry
// PaginateProjectIssuesNodeMergedEvent
// PaginateProjectIssuesNodeMigrationSource
// PaginateProjectIssuesNodeMilestone
// PaginateProjectIssuesNodeMilestonedEvent
// PaginateProjectIssuesNodeMovedColumnsInProjectEvent
// PaginateProjectIssuesNodeOIDCProvider
// PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry
// PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry
// PaginateProjectIssuesNodeOrgAddMemberAuditEntry
// PaginateProjectIssuesNodeOrgBlockUserAuditEntry
// PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry
// PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry
// PaginateProjectIssuesNodeOrgCreateAuditEntry
// PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry
// PaginateProjectIssuesNodeOrgDisableSamlAuditEntry
// PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry
// PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry
// PaginateProjectIssuesNodeOrgEnableSamlAuditEntry
// PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry
// PaginateProjectIssuesNodeOrgInviteMemberAuditEntry
// PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry
// PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry
// PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry
// PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry
// PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry
// PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry
// PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry
// PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry
// PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry
// PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry
// PaginateProjectIssuesNodeOrgUnblockUserAuditEntry
// PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry
// PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry
// PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry
// PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry
// PaginateProjectIssuesNodeOrganization
// PaginateProjectIssuesNodeOrganizationIdentityProvider
// PaginateProjectIssuesNodeOrganizationInvitation
// PaginateProjectIssuesNodeOrganizationMigration
// PaginateProjectIssuesNodePackage
// PaginateProjectIssuesNodePackageFile
// PaginateProjectIssuesNodePackageTag
// PaginateProjectIssuesNodePackageVersion
// PaginateProjectIssuesNodePinnedDiscussion
// PaginateProjectIssuesNodePinnedEnvironment
// PaginateProjectIssuesNodePinnedEvent
// PaginateProjectIssuesNodePinnedIssue
// PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry
// PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry
// PaginateProjectIssuesNodeProject
// PaginateProjectIssuesNodeProjectCard
// PaginateProjectIssuesNodeProjectColumn
// PaginateProjectIssuesNodeProjectV2
// PaginateProjectIssuesNodeProjectV2Field
// PaginateProjectIssuesNodeProjectV2Item
// PaginateProjectIssuesNodeProjectV2ItemFieldDateValue
// PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue
// PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue
// PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue
// PaginateProjectIssuesNodeProjectV2ItemFieldTextValue
// PaginateProjectIssuesNodeProjectV2IterationField
// PaginateProjectIssuesNodeProjectV2SingleSelectField
// PaginateProjectIssuesNodeProjectV2StatusUpdate
// PaginateProjectIssuesNodeProjectV2View
// PaginateProjectIssuesNodeProjectV2Workflow
// PaginateProjectIssuesNodePublicKey
// PaginateProjectIssuesNodePullRequest
// PaginateProjectIssuesNodePullRequestCommit
// PaginateProjectIssuesNodePullRequestCommitCommentThread
// PaginateProjectIssuesNodePullRequestReview
// PaginateProjectIssuesNodePullRequestReviewComment
// PaginateProjectIssuesNodePullRequestReviewThread
// PaginateProjectIssuesNodePullRequestThread
// PaginateProjectIssuesNodePush
// PaginateProjectIssuesNodePushAllowance
// PaginateProjectIssuesNodeReaction
// PaginateProjectIssuesNodeReadyForReviewEvent
// PaginateProjectIssuesNodeRef
// PaginateProjectIssuesNodeReferencedEvent
// PaginateProjectIssuesNodeRelease
// PaginateProjectIssuesNodeReleaseAsset
// PaginateProjectIssuesNodeRemovedFromMergeQueueEvent
// PaginateProjectIssuesNodeRemovedFromProjectEvent
// PaginateProjectIssuesNodeRenamedTitleEvent
// PaginateProjectIssuesNodeReopenedEvent
// PaginateProjectIssuesNodeRepoAccessAuditEntry
// PaginateProjectIssuesNodeRepoAddMemberAuditEntry
// PaginateProjectIssuesNodeRepoAddTopicAuditEntry
// PaginateProjectIssuesNodeRepoArchivedAuditEntry
// PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry
// PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry
// PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry
// PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry
// PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry
// PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry
// PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry
// PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry
// PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry
// PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry
// PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry
// PaginateProjectIssuesNodeRepoCreateAuditEntry
// PaginateProjectIssuesNodeRepoDestroyAuditEntry
// PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry
// PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry
// PaginateProjectIssuesNodeRepository
// PaginateProjectIssuesNodeRepositoryInvitation
// PaginateProjectIssuesNodeRepositoryMigration
// PaginateProjectIssuesNodeRepositoryRule
// PaginateProjectIssuesNodeRepositoryRuleset
// PaginateProjectIssuesNodeRepositoryRulesetBypassActor
// PaginateProjectIssuesNodeRepositoryTopic
// PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry
// PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry
// PaginateProjectIssuesNodeRepositoryVulnerabilityAlert
// PaginateProjectIssuesNodeReviewDismissalAllowance
// PaginateProjectIssuesNodeReviewDismissedEvent
// PaginateProjectIssuesNodeReviewRequest
// PaginateProjectIssuesNodeReviewRequestRemovedEvent
// PaginateProjectIssuesNodeReviewRequestedEvent
// PaginateProjectIssuesNodeSavedReply
// PaginateProjectIssuesNodeSecurityAdvisory
// PaginateProjectIssuesNodeSponsorsActivity
// PaginateProjectIssuesNodeSponsorsListing
// PaginateProjectIssuesNodeSponsorsListingFeaturedItem
// PaginateProjectIssuesNodeSponsorsTier
// PaginateProjectIssuesNodeSponsorship
// PaginateProjectIssuesNodeSponsorshipNewsletter
// PaginateProjectIssuesNodeStatus
// PaginateProjectIssuesNodeStatusCheckRollup
// PaginateProjectIssuesNodeStatusContext
// PaginateProjectIssuesNodeSubscribedEvent
// PaginateProjectIssuesNodeTag
// PaginateProjectIssuesNodeTeam
// PaginateProjectIssuesNodeTeamAddMemberAuditEntry
// PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry
// PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry
// PaginateProjectIssuesNodeTeamDiscussion
// PaginateProjectIssuesNodeTeamDiscussionComment
// PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry
// PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry
// PaginateProjectIssuesNodeTopic
// PaginateProjectIssuesNodeTransferredEvent
// PaginateProjectIssuesNodeTree
// PaginateProjectIssuesNodeUnassignedEvent
// PaginateProjectIssuesNodeUnlabeledEvent
// PaginateProjectIssuesNodeUnlockedEvent
// PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent
// PaginateProjectIssuesNodeUnpinnedEvent
// PaginateProjectIssuesNodeUnsubscribedEvent
// PaginateProjectIssuesNodeUser
// PaginateProjectIssuesNodeUserBlockedEvent
// PaginateProjectIssuesNodeUserContentEdit
// PaginateProjectIssuesNodeUserList
// PaginateProjectIssuesNodeUserStatus
// PaginateProjectIssuesNodeVerifiableDomain
// PaginateProjectIssuesNodeWorkflow
// PaginateProjectIssuesNodeWorkflowRun
// PaginateProjectIssuesNodeWorkflowRunFile
// The GraphQL type's documentation follows.
//
// An object with an ID.
type PaginateProjectIssuesNode interface {
	implementsGraphQLInterfacePaginateProjectIssuesNode()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectIssuesNodeAddedToMergeQueueEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAddedToProjectEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeApp) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeAssignedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutoMergeDisabledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutoMergeEnabledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutoRebaseEnabledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutoSquashEnabledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBaseRefChangedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBaseRefDeletedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBaseRefForcePushedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBlob) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeBot) implementsGraphQLInterfacePaginateProjectIssuesNode()  {}
func (v *PaginateProjectIssuesNodeBranchProtectionRule) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBypassForcePushAllowance) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeBypassPullRequestAllowance) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCWE) implementsGraphQLInterfacePaginateProjectIssuesNode()        {}
func (v *PaginateProjectIssuesNodeCheckRun) implementsGraphQLInterfacePaginateProjectIssuesNode()   {}
func (v *PaginateProjectIssuesNodeCheckSuite) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeClosedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCodeOfConduct) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCommentDeletedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCommit) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeCommitComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCommitCommentThread) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeComparison) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeConnectedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeConvertToDraftEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeConvertedNoteToIssueEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeConvertedToDiscussionEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeCrossReferencedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDemilestonedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDependencyGraphManifest) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDeployKey) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeDeployedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDeployment) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDeploymentReview) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDeploymentStatus) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDisconnectedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDiscussion) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeDiscussionCategory) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDiscussionComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDiscussionPoll) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDiscussionPollOption) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeDraftIssue) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeEnterprise) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeEnterpriseAdministratorInvitation) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseIdentityProvider) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseMemberInvitation) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseRepositoryInfo) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseServerInstallation) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccount) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnterpriseUserAccount) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeEnvironment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeExternalIdentity) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeGist) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeGistComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeHeadRefDeletedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeHeadRefForcePushedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeHeadRefRestoredEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeIpAllowListEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeIssue) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeIssueComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeLabel) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeLabeledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeLanguage) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeLicense) implementsGraphQLInterfacePaginateProjectIssuesNode()  {}
func (v *PaginateProjectIssuesNodeLinkedBranch) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeLockedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMannequin) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeMarkedAsDuplicateEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMarketplaceCategory) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMarketplaceListing) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMemberFeatureRequestNotification) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMentionedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMergeQueue) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeMergeQueueEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMergedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMigrationSource) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMilestone) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeMilestonedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeMovedColumnsInProjectEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOIDCProvider) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgBlockUserAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgCreateAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgDisableSamlAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgEnableSamlAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgInviteMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgUnblockUserAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrganization) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrganizationIdentityProvider) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrganizationInvitation) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeOrganizationMigration) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePackage) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodePackageFile) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePackageTag) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodePackageVersion) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePinnedDiscussion) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePinnedEnvironment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePinnedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePinnedIssue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProject) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeProjectCard) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectColumn) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeProjectV2Field) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2Item) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldDateValue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldTextValue) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2IterationField) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2SingleSelectField) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2StatusUpdate) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2View) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeProjectV2Workflow) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePublicKey) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodePullRequest) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestCommit) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestCommitCommentThread) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestReview) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestReviewComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestReviewThread) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePullRequestThread) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodePush) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodePushAllowance) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReaction) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeReadyForReviewEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRef) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeReferencedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRelease) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeReleaseAsset) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRemovedFromMergeQueueEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRemovedFromProjectEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRenamedTitleEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReopenedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoAccessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoAddTopicAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoArchivedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoCreateAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoDestroyAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepository) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeRepositoryInvitation) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryMigration) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryRule) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryRuleset) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryRulesetBypassActor) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryTopic) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeRepositoryVulnerabilityAlert) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReviewDismissalAllowance) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReviewDismissedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReviewRequest) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReviewRequestRemovedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeReviewRequestedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSavedReply) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeSecurityAdvisory) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorsActivity) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorsListing) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorsListingFeaturedItem) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorsTier) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorship) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSponsorshipNewsletter) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeStatus) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeStatusCheckRollup) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeStatusContext) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeSubscribedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTag) implementsGraphQLInterfacePaginateProjectIssuesNode()  {}
func (v *PaginateProjectIssuesNodeTeam) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeTeamAddMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamDiscussion) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamDiscussionComment) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTopic) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeTransferredEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeTree) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeUnassignedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUnlabeledEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUnlockedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUnpinnedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUnsubscribedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUser) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeUserBlockedEvent) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUserContentEdit) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeUserList) implementsGraphQLInterfacePaginateProjectIssuesNode()   {}
func (v *PaginateProjectIssuesNodeUserStatus) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeVerifiableDomain) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeWorkflow) implementsGraphQLInterfacePaginateProjectIssuesNode() {}
func (v *PaginateProjectIssuesNodeWorkflowRun) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}
func (v *PaginateProjectIssuesNodeWorkflowRunFile) implementsGraphQLInterfacePaginateProjectIssuesNode() {
}

func __unmarshalPaginateProjectIssuesNode(b []byte, v *PaginateProjectIssuesNode) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AddedToMergeQueueEvent":
		*v = new(PaginateProjectIssuesNodeAddedToMergeQueueEvent)
		return json.Unmarshal(b, *v)
	case "AddedToProjectEvent":
		*v = new(PaginateProjectIssuesNodeAddedToProjectEvent)
		return json.Unmarshal(b, *v)
	case "App":
		*v = new(PaginateProjectIssuesNodeApp)
		return json.Unmarshal(b, *v)
	case "AssignedEvent":
		*v = new(PaginateProjectIssuesNodeAssignedEvent)
		return json.Unmarshal(b, *v)
	case "AutoMergeDisabledEvent":
		*v = new(PaginateProjectIssuesNodeAutoMergeDisabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoMergeEnabledEvent":
		*v = new(PaginateProjectIssuesNodeAutoMergeEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoRebaseEnabledEvent":
		*v = new(PaginateProjectIssuesNodeAutoRebaseEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutoSquashEnabledEvent":
		*v = new(PaginateProjectIssuesNodeAutoSquashEnabledEvent)
		return json.Unmarshal(b, *v)
	case "AutomaticBaseChangeFailedEvent":
		*v = new(PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent)
		return json.Unmarshal(b, *v)
	case "AutomaticBaseChangeSucceededEvent":
		*v = new(PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefChangedEvent":
		*v = new(PaginateProjectIssuesNodeBaseRefChangedEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefDeletedEvent":
		*v = new(PaginateProjectIssuesNodeBaseRefDeletedEvent)
		return json.Unmarshal(b, *v)
	case "BaseRefForcePushedEvent":
		*v = new(PaginateProjectIssuesNodeBaseRefForcePushedEvent)
		return json.Unmarshal(b, *v)
	case "Blob":
		*v = new(PaginateProjectIssuesNodeBlob)
		return json.Unmarshal(b, *v)
	case "Bot":
		*v = new(PaginateProjectIssuesNodeBot)
		return json.Unmarshal(b, *v)
	case "BranchProtectionRule":
		*v = new(PaginateProjectIssuesNodeBranchProtectionRule)
		return json.Unmarshal(b, *v)
	case "BypassForcePushAllowance":
		*v = new(PaginateProjectIssuesNodeBypassForcePushAllowance)
		return json.Unmarshal(b, *v)
	case "BypassPullRequestAllowance":
		*v = new(PaginateProjectIssuesNodeBypassPullRequestAllowance)
		return json.Unmarshal(b, *v)
	case "CWE":
		*v = new(PaginateProjectIssuesNodeCWE)
		return json.Unmarshal(b, *v)
	case "CheckRun":
		*v = new(PaginateProjectIssuesNodeCheckRun)
		return json.Unmarshal(b, *v)
	case "CheckSuite":
		*v = new(PaginateProjectIssuesNodeCheckSuite)
		return json.Unmarshal(b, *v)
	case "ClosedEvent":
		*v = new(PaginateProjectIssuesNodeClosedEvent)
		return json.Unmarshal(b, *v)
	case "CodeOfConduct":
		*v = new(PaginateProjectIssuesNodeCodeOfConduct)
		return json.Unmarshal(b, *v)
	case "CommentDeletedEvent":
		*v = new(PaginateProjectIssuesNodeCommentDeletedEvent)
		return json.Unmarshal(b, *v)
	case "Commit":
		*v = new(PaginateProjectIssuesNodeCommit)
		return json.Unmarshal(b, *v)
	case "CommitComment":
		*v = new(PaginateProjectIssuesNodeCommitComment)
		return json.Unmarshal(b, *v)
	case "CommitCommentThread":
		*v = new(PaginateProjectIssuesNodeCommitCommentThread)
		return json.Unmarshal(b, *v)
	case "Comparison":
		*v = new(PaginateProjectIssuesNodeComparison)
		return json.Unmarshal(b, *v)
	case "ConnectedEvent":
		*v = new(PaginateProjectIssuesNodeConnectedEvent)
		return json.Unmarshal(b, *v)
	case "ConvertToDraftEvent":
		*v = new(PaginateProjectIssuesNodeConvertToDraftEvent)
		return json.Unmarshal(b, *v)
	case "ConvertedNoteToIssueEvent":
		*v = new(PaginateProjectIssuesNodeConvertedNoteToIssueEvent)
		return json.Unmarshal(b, *v)
	case "ConvertedToDiscussionEvent":
		*v = new(PaginateProjectIssuesNodeConvertedToDiscussionEvent)
		return json.Unmarshal(b, *v)
	case "CrossReferencedEvent":
		*v = new(PaginateProjectIssuesNodeCrossReferencedEvent)
		return json.Unmarshal(b, *v)
	case "DemilestonedEvent":
		*v = new(PaginateProjectIssuesNodeDemilestonedEvent)
		return json.Unmarshal(b, *v)
	case "DependencyGraphManifest":
		*v = new(PaginateProjectIssuesNodeDependencyGraphManifest)
		return json.Unmarshal(b, *v)
	case "DeployKey":
		*v = new(PaginateProjectIssuesNodeDeployKey)
		return json.Unmarshal(b, *v)
	case "DeployedEvent":
		*v = new(PaginateProjectIssuesNodeDeployedEvent)
		return json.Unmarshal(b, *v)
	case "Deployment":
		*v = new(PaginateProjectIssuesNodeDeployment)
		return json.Unmarshal(b, *v)
	case "DeploymentEnvironmentChangedEvent":
		*v = new(PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent)
		return json.Unmarshal(b, *v)
	case "DeploymentReview":
		*v = new(PaginateProjectIssuesNodeDeploymentReview)
		return json.Unmarshal(b, *v)
	case "DeploymentStatus":
		*v = new(PaginateProjectIssuesNodeDeploymentStatus)
		return json.Unmarshal(b, *v)
	case "DisconnectedEvent":
		*v = new(PaginateProjectIssuesNodeDisconnectedEvent)
		return json.Unmarshal(b, *v)
	case "Discussion":
		*v = new(PaginateProjectIssuesNodeDiscussion)
		return json.Unmarshal(b, *v)
	case "DiscussionCategory":
		*v = new(PaginateProjectIssuesNodeDiscussionCategory)
		return json.Unmarshal(b, *v)
	case "DiscussionComment":
		*v = new(PaginateProjectIssuesNodeDiscussionComment)
		return json.Unmarshal(b, *v)
	case "DiscussionPoll":
		*v = new(PaginateProjectIssuesNodeDiscussionPoll)
		return json.Unmarshal(b, *v)
	case "DiscussionPollOption":
		*v = new(PaginateProjectIssuesNodeDiscussionPollOption)
		return json.Unmarshal(b, *v)
	case "DraftIssue":
		*v = new(PaginateProjectIssuesNodeDraftIssue)
		return json.Unmarshal(b, *v)
	case "Enterprise":
		*v = new(PaginateProjectIssuesNodeEnterprise)
		return json.Unmarshal(b, *v)
	case "EnterpriseAdministratorInvitation":
		*v = new(PaginateProjectIssuesNodeEnterpriseAdministratorInvitation)
		return json.Unmarshal(b, *v)
	case "EnterpriseIdentityProvider":
		*v = new(PaginateProjectIssuesNodeEnterpriseIdentityProvider)
		return json.Unmarshal(b, *v)
	case "EnterpriseMemberInvitation":
		*v = new(PaginateProjectIssuesNodeEnterpriseMemberInvitation)
		return json.Unmarshal(b, *v)
	case "EnterpriseRepositoryInfo":
		*v = new(PaginateProjectIssuesNodeEnterpriseRepositoryInfo)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerInstallation":
		*v = new(PaginateProjectIssuesNodeEnterpriseServerInstallation)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccount":
		*v = new(PaginateProjectIssuesNodeEnterpriseServerUserAccount)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccountEmail":
		*v = new(PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail)
		return json.Unmarshal(b, *v)
	case "EnterpriseServerUserAccountsUpload":
		*v = new(PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload)
		return json.Unmarshal(b, *v)
	case "EnterpriseUserAccount":
		*v = new(PaginateProjectIssuesNodeEnterpriseUserAccount)
		return json.Unmarshal(b, *v)
	case "Environment":
		*v = new(PaginateProjectIssuesNodeEnvironment)
		return json.Unmarshal(b, *v)
	case "ExternalIdentity":
		*v = new(PaginateProjectIssuesNodeExternalIdentity)
		return json.Unmarshal(b, *v)
	case "Gist":
		*v = new(PaginateProjectIssuesNodeGist)
		return json.Unmarshal(b, *v)
	case "GistComment":
		*v = new(PaginateProjectIssuesNodeGistComment)
		return json.Unmarshal(b, *v)
	case "HeadRefDeletedEvent":
		*v = new(PaginateProjectIssuesNodeHeadRefDeletedEvent)
		return json.Unmarshal(b, *v)
	case "HeadRefForcePushedEvent":
		*v = new(PaginateProjectIssuesNodeHeadRefForcePushedEvent)
		return json.Unmarshal(b, *v)
	case "HeadRefRestoredEvent":
		*v = new(PaginateProjectIssuesNodeHeadRefRestoredEvent)
		return json.Unmarshal(b, *v)
	case "IpAllowListEntry":
		*v = new(PaginateProjectIssuesNodeIpAllowListEntry)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(PaginateProjectIssuesNodeIssue)
		return json.Unmarshal(b, *v)
	case "IssueComment":
		*v = new(PaginateProjectIssuesNodeIssueComment)
		return json.Unmarshal(b, *v)
	case "Label":
		*v = new(PaginateProjectIssuesNodeLabel)
		return json.Unmarshal(b, *v)
	case "LabeledEvent":
		*v = new(PaginateProjectIssuesNodeLabeledEvent)
		return json.Unmarshal(b, *v)
	case "Language":
		*v = new(PaginateProjectIssuesNodeLanguage)
		return json.Unmarshal(b, *v)
	case "License":
		*v = new(PaginateProjectIssuesNodeLicense)
		return json.Unmarshal(b, *v)
	case "LinkedBranch":
		*v = new(PaginateProjectIssuesNodeLinkedBranch)
		return json.Unmarshal(b, *v)
	case "LockedEvent":
		*v = new(PaginateProjectIssuesNodeLockedEvent)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(PaginateProjectIssuesNodeMannequin)
		return json.Unmarshal(b, *v)
	case "MarkedAsDuplicateEvent":
		*v = new(PaginateProjectIssuesNodeMarkedAsDuplicateEvent)
		return json.Unmarshal(b, *v)
	case "MarketplaceCategory":
		*v = new(PaginateProjectIssuesNodeMarketplaceCategory)
		return json.Unmarshal(b, *v)
	case "MarketplaceListing":
		*v = new(PaginateProjectIssuesNodeMarketplaceListing)
		return json.Unmarshal(b, *v)
	case "MemberFeatureRequestNotification":
		*v = new(PaginateProjectIssuesNodeMemberFeatureRequestNotification)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposClearAuditEntry":
		*v = new(PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposDisableAuditEntry":
		*v = new(PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "MembersCanDeleteReposEnableAuditEntry":
		*v = new(PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "MentionedEvent":
		*v = new(PaginateProjectIssuesNodeMentionedEvent)
		return json.Unmarshal(b, *v)
	case "MergeQueue":
		*v = new(PaginateProjectIssuesNodeMergeQueue)
		return json.Unmarshal(b, *v)
	case "MergeQueueEntry":
		*v = new(PaginateProjectIssuesNodeMergeQueueEntry)
		return json.Unmarshal(b, *v)
	case "MergedEvent":
		*v = new(PaginateProjectIssuesNodeMergedEvent)
		return json.Unmarshal(b, *v)
	case "MigrationSource":
		*v = new(PaginateProjectIssuesNodeMigrationSource)
		return json.Unmarshal(b, *v)
	case "Milestone":
		*v = new(PaginateProjectIssuesNodeMilestone)
		return json.Unmarshal(b, *v)
	case "MilestonedEvent":
		*v = new(PaginateProjectIssuesNodeMilestonedEvent)
		return json.Unmarshal(b, *v)
	case "MovedColumnsInProjectEvent":
		*v = new(PaginateProjectIssuesNodeMovedColumnsInProjectEvent)
		return json.Unmarshal(b, *v)
	case "OIDCProvider":
		*v = new(PaginateProjectIssuesNodeOIDCProvider)
		return json.Unmarshal(b, *v)
	case "OauthApplicationCreateAuditEntry":
		*v = new(PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgAddBillingManagerAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgAddMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgBlockUserAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgBlockUserAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgConfigDisableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgConfigEnableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgCreateAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableOauthAppRestrictionsAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableSamlAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgDisableSamlAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgDisableTwoFactorRequirementAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableOauthAppRestrictionsAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableSamlAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgEnableSamlAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgEnableTwoFactorRequirementAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgInviteMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgInviteMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgInviteToBusinessAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessApprovedAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessBlockedAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessDeniedAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessRequestedAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgOauthAppAccessUnblockedAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveBillingManagerAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRemoveOutsideCollaboratorAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgRestoreMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUnblockUserAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgUnblockUserAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateDefaultRepositoryPermissionAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberRepositoryCreationPermissionAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry":
		*v = new(PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(PaginateProjectIssuesNodeOrganization)
		return json.Unmarshal(b, *v)
	case "OrganizationIdentityProvider":
		*v = new(PaginateProjectIssuesNodeOrganizationIdentityProvider)
		return json.Unmarshal(b, *v)
	case "OrganizationInvitation":
		*v = new(PaginateProjectIssuesNodeOrganizationInvitation)
		return json.Unmarshal(b, *v)
	case "OrganizationMigration":
		*v = new(PaginateProjectIssuesNodeOrganizationMigration)
		return json.Unmarshal(b, *v)
	case "Package":
		*v = new(PaginateProjectIssuesNodePackage)
		return json.Unmarshal(b, *v)
	case "PackageFile":
		*v = new(PaginateProjectIssuesNodePackageFile)
		return json.Unmarshal(b, *v)
	case "PackageTag":
		*v = new(PaginateProjectIssuesNodePackageTag)
		return json.Unmarshal(b, *v)
	case "PackageVersion":
		*v = new(PaginateProjectIssuesNodePackageVersion)
		return json.Unmarshal(b, *v)
	case "PinnedDiscussion":
		*v = new(PaginateProjectIssuesNodePinnedDiscussion)
		return json.Unmarshal(b, *v)
	case "PinnedEnvironment":
		*v = new(PaginateProjectIssuesNodePinnedEnvironment)
		return json.Unmarshal(b, *v)
	case "PinnedEvent":
		*v = new(PaginateProjectIssuesNodePinnedEvent)
		return json.Unmarshal(b, *v)
	case "PinnedIssue":
		*v = new(PaginateProjectIssuesNodePinnedIssue)
		return json.Unmarshal(b, *v)
	case "PrivateRepositoryForkingDisableAuditEntry":
		*v = new(PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "PrivateRepositoryForkingEnableAuditEntry":
		*v = new(PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "Project":
		*v = new(PaginateProjectIssuesNodeProject)
		return json.Unmarshal(b, *v)
	case "ProjectCard":
		*v = new(PaginateProjectIssuesNodeProjectCard)
		return json.Unmarshal(b, *v)
	case "ProjectColumn":
		*v = new(PaginateProjectIssuesNodeProjectColumn)
		return json.Unmarshal(b, *v)
	case "ProjectV2":
		*v = new(PaginateProjectIssuesNodeProjectV2)
		return json.Unmarshal(b, *v)
	case "ProjectV2Field":
		*v = new(PaginateProjectIssuesNodeProjectV2Field)
		return json.Unmarshal(b, *v)
	case "ProjectV2Item":
		*v = new(PaginateProjectIssuesNodeProjectV2Item)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldDateValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemFieldDateValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldIterationValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldNumberValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldSingleSelectValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldTextValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemFieldTextValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2IterationField":
		*v = new(PaginateProjectIssuesNodeProjectV2IterationField)
		return json.Unmarshal(b, *v)
	case "ProjectV2SingleSelectField":
		*v = new(PaginateProjectIssuesNodeProjectV2SingleSelectField)
		return json.Unmarshal(b, *v)
	case "ProjectV2StatusUpdate":
		*v = new(PaginateProjectIssuesNodeProjectV2StatusUpdate)
		return json.Unmarshal(b, *v)
	case "ProjectV2View":
		*v = new(PaginateProjectIssuesNodeProjectV2View)
		return json.Unmarshal(b, *v)
	case "ProjectV2Workflow":
		*v = new(PaginateProjectIssuesNodeProjectV2Workflow)
		return json.Unmarshal(b, *v)
	case "PublicKey":
		*v = new(PaginateProjectIssuesNodePublicKey)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(PaginateProjectIssuesNodePullRequest)
		return json.Unmarshal(b, *v)
	case "PullRequestCommit":
		*v = new(PaginateProjectIssuesNodePullRequestCommit)
		return json.Unmarshal(b, *v)
	case "PullRequestCommitCommentThread":
		*v = new(PaginateProjectIssuesNodePullRequestCommitCommentThread)
		return json.Unmarshal(b, *v)
	case "PullRequestReview":
		*v = new(PaginateProjectIssuesNodePullRequestReview)
		return json.Unmarshal(b, *v)
	case "PullRequestReviewComment":
		*v = new(PaginateProjectIssuesNodePullRequestReviewComment)
		return json.Unmarshal(b, *v)
	case "PullRequestReviewThread":
		*v = new(PaginateProjectIssuesNodePullRequestReviewThread)
		return json.Unmarshal(b, *v)
	case "PullRequestThread":
		*v = new(PaginateProjectIssuesNodePullRequestThread)
		return json.Unmarshal(b, *v)
	case "Push":
		*v = new(PaginateProjectIssuesNodePush)
		return json.Unmarshal(b, *v)
	case "PushAllowance":
		*v = new(PaginateProjectIssuesNodePushAllowance)
		return json.Unmarshal(b, *v)
	case "Reaction":
		*v = new(PaginateProjectIssuesNodeReaction)
		return json.Unmarshal(b, *v)
	case "ReadyForReviewEvent":
		*v = new(PaginateProjectIssuesNodeReadyForReviewEvent)
		return json.Unmarshal(b, *v)
	case "Ref":
		*v = new(PaginateProjectIssuesNodeRef)
		return json.Unmarshal(b, *v)
	case "ReferencedEvent":
		*v = new(PaginateProjectIssuesNodeReferencedEvent)
		return json.Unmarshal(b, *v)
	case "Release":
		*v = new(PaginateProjectIssuesNodeRelease)
		return json.Unmarshal(b, *v)
	case "ReleaseAsset":
		*v = new(PaginateProjectIssuesNodeReleaseAsset)
		return json.Unmarshal(b, *v)
	case "RemovedFromMergeQueueEvent":
		*v = new(PaginateProjectIssuesNodeRemovedFromMergeQueueEvent)
		return json.Unmarshal(b, *v)
	case "RemovedFromProjectEvent":
		*v = new(PaginateProjectIssuesNodeRemovedFromProjectEvent)
		return json.Unmarshal(b, *v)
	case "RenamedTitleEvent":
		*v = new(PaginateProjectIssuesNodeRenamedTitleEvent)
		return json.Unmarshal(b, *v)
	case "ReopenedEvent":
		*v = new(PaginateProjectIssuesNodeReopenedEvent)
		return json.Unmarshal(b, *v)
	case "RepoAccessAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoAddMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoAddTopicAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoAddTopicAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoArchivedAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoArchivedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoChangeMergeSettingAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableContributorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigDisableSockpuppetDisallowedAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableCollaboratorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableContributorsOnlyAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigEnableSockpuppetDisallowedAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigLockAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoConfigUnlockAnonymousGitAccessAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoCreateAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoCreateAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoDestroyAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoDestroyAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoRemoveMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepoRemoveTopicAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(PaginateProjectIssuesNodeRepository)
		return json.Unmarshal(b, *v)
	case "RepositoryInvitation":
		*v = new(PaginateProjectIssuesNodeRepositoryInvitation)
		return json.Unmarshal(b, *v)
	case "RepositoryMigration":
		*v = new(PaginateProjectIssuesNodeRepositoryMigration)
		return json.Unmarshal(b, *v)
	case "RepositoryRule":
		*v = new(PaginateProjectIssuesNodeRepositoryRule)
		return json.Unmarshal(b, *v)
	case "RepositoryRuleset":
		*v = new(PaginateProjectIssuesNodeRepositoryRuleset)
		return json.Unmarshal(b, *v)
	case "RepositoryRulesetBypassActor":
		*v = new(PaginateProjectIssuesNodeRepositoryRulesetBypassActor)
		return json.Unmarshal(b, *v)
	case "RepositoryTopic":
		*v = new(PaginateProjectIssuesNodeRepositoryTopic)
		return json.Unmarshal(b, *v)
	case "RepositoryVisibilityChangeDisableAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepositoryVisibilityChangeEnableAuditEntry":
		*v = new(PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry)
		return json.Unmarshal(b, *v)
	case "RepositoryVulnerabilityAlert":
		*v = new(PaginateProjectIssuesNodeRepositoryVulnerabilityAlert)
		return json.Unmarshal(b, *v)
	case "ReviewDismissalAllowance":
		*v = new(PaginateProjectIssuesNodeReviewDismissalAllowance)
		return json.Unmarshal(b, *v)
	case "ReviewDismissedEvent":
		*v = new(PaginateProjectIssuesNodeReviewDismissedEvent)
		return json.Unmarshal(b, *v)
	case "ReviewRequest":
		*v = new(PaginateProjectIssuesNodeReviewRequest)
		return json.Unmarshal(b, *v)
	case "ReviewRequestRemovedEvent":
		*v = new(PaginateProjectIssuesNodeReviewRequestRemovedEvent)
		return json.Unmarshal(b, *v)
	case "ReviewRequestedEvent":
		*v = new(PaginateProjectIssuesNodeReviewRequestedEvent)
		return json.Unmarshal(b, *v)
	case "SavedReply":
		*v = new(PaginateProjectIssuesNodeSavedReply)
		return json.Unmarshal(b, *v)
	case "SecurityAdvisory":
		*v = new(PaginateProjectIssuesNodeSecurityAdvisory)
		return json.Unmarshal(b, *v)
	case "SponsorsActivity":
		*v = new(PaginateProjectIssuesNodeSponsorsActivity)
		return json.Unmarshal(b, *v)
	case "SponsorsListing":
		*v = new(PaginateProjectIssuesNodeSponsorsListing)
		return json.Unmarshal(b, *v)
	case "SponsorsListingFeaturedItem":
		*v = new(PaginateProjectIssuesNodeSponsorsListingFeaturedItem)
		return json.Unmarshal(b, *v)
	case "SponsorsTier":
		*v = new(PaginateProjectIssuesNodeSponsorsTier)
		return json.Unmarshal(b, *v)
	case "Sponsorship":
		*v = new(PaginateProjectIssuesNodeSponsorship)
		return json.Unmarshal(b, *v)
	case "SponsorshipNewsletter":
		*v = new(PaginateProjectIssuesNodeSponsorshipNewsletter)
		return json.Unmarshal(b, *v)
	case "Status":
		*v = new(PaginateProjectIssuesNodeStatus)
		return json.Unmarshal(b, *v)
	case "StatusCheckRollup":
		*v = new(PaginateProjectIssuesNodeStatusCheckRollup)
		return json.Unmarshal(b, *v)
	case "StatusContext":
		*v = new(PaginateProjectIssuesNodeStatusContext)
		return json.Unmarshal(b, *v)
	case "SubscribedEvent":
		*v = new(PaginateProjectIssuesNodeSubscribedEvent)
		return json.Unmarshal(b, *v)
	case "Tag":
		*v = new(PaginateProjectIssuesNodeTag)
		return json.Unmarshal(b, *v)
	case "Team":
		*v = new(PaginateProjectIssuesNodeTeam)
		return json.Unmarshal(b, *v)
	case "TeamAddMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeTeamAddMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamAddRepositoryAuditEntry":
		*v = new(PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamChangeParentTeamAuditEntry":
		*v = new(PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamDiscussion":
		*v = new(PaginateProjectIssuesNodeTeamDiscussion)
		return json.Unmarshal(b, *v)
	case "TeamDiscussionComment":
		*v = new(PaginateProjectIssuesNodeTeamDiscussionComment)
		return json.Unmarshal(b, *v)
	case "TeamRemoveMemberAuditEntry":
		*v = new(PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry)
		return json.Unmarshal(b, *v)
	case "TeamRemoveRepositoryAuditEntry":
		*v = new(PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry)
		return json.Unmarshal(b, *v)
	case "Topic":
		*v = new(PaginateProjectIssuesNodeTopic)
		return json.Unmarshal(b, *v)
	case "TransferredEvent":
		*v = new(PaginateProjectIssuesNodeTransferredEvent)
		return json.Unmarshal(b, *v)
	case "Tree":
		*v = new(PaginateProjectIssuesNodeTree)
		return json.Unmarshal(b, *v)
	case "UnassignedEvent":
		*v = new(PaginateProjectIssuesNodeUnassignedEvent)
		return json.Unmarshal(b, *v)
	case "UnlabeledEvent":
		*v = new(PaginateProjectIssuesNodeUnlabeledEvent)
		return json.Unmarshal(b, *v)
	case "UnlockedEvent":
		*v = new(PaginateProjectIssuesNodeUnlockedEvent)
		return json.Unmarshal(b, *v)
	case "UnmarkedAsDuplicateEvent":
		*v = new(PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent)
		return json.Unmarshal(b, *v)
	case "UnpinnedEvent":
		*v = new(PaginateProjectIssuesNodeUnpinnedEvent)
		return json.Unmarshal(b, *v)
	case "UnsubscribedEvent":
		*v = new(PaginateProjectIssuesNodeUnsubscribedEvent)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(PaginateProjectIssuesNodeUser)
		return json.Unmarshal(b, *v)
	case "UserBlockedEvent":
		*v = new(PaginateProjectIssuesNodeUserBlockedEvent)
		return json.Unmarshal(b, *v)
	case "UserContentEdit":
		*v = new(PaginateProjectIssuesNodeUserContentEdit)
		return json.Unmarshal(b, *v)
	case "UserList":
		*v = new(PaginateProjectIssuesNodeUserList)
		return json.Unmarshal(b, *v)
	case "UserStatus":
		*v = new(PaginateProjectIssuesNodeUserStatus)
		return json.Unmarshal(b, *v)
	case "VerifiableDomain":
		*v = new(PaginateProjectIssuesNodeVerifiableDomain)
		return json.Unmarshal(b, *v)
	case "Workflow":
		*v = new(PaginateProjectIssuesNodeWorkflow)
		return json.Unmarshal(b, *v)
	case "WorkflowRun":
		*v = new(PaginateProjectIssuesNodeWorkflowRun)
		return json.Unmarshal(b, *v)
	case "WorkflowRunFile":
		*v = new(PaginateProjectIssuesNodeWorkflowRunFile)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Node.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNode: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectIssuesNode(v *PaginateProjectIssuesNode) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectIssuesNodeAddedToMergeQueueEvent:
		typename = "AddedToMergeQueueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAddedToMergeQueueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAddedToProjectEvent:
		typename = "AddedToProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAddedToProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeApp:
		typename = "App"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeApp
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAssignedEvent:
		typename = "AssignedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAssignedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutoMergeDisabledEvent:
		typename = "AutoMergeDisabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutoMergeDisabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutoMergeEnabledEvent:
		typename = "AutoMergeEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutoMergeEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutoRebaseEnabledEvent:
		typename = "AutoRebaseEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutoRebaseEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutoSquashEnabledEvent:
		typename = "AutoSquashEnabledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutoSquashEnabledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent:
		typename = "AutomaticBaseChangeFailedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent:
		typename = "AutomaticBaseChangeSucceededEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBaseRefChangedEvent:
		typename = "BaseRefChangedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBaseRefChangedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBaseRefDeletedEvent:
		typename = "BaseRefDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBaseRefDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBaseRefForcePushedEvent:
		typename = "BaseRefForcePushedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBaseRefForcePushedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBlob:
		typename = "Blob"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBlob
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBot
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBranchProtectionRule:
		typename = "BranchProtectionRule"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBranchProtectionRule
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBypassForcePushAllowance:
		typename = "BypassForcePushAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBypassForcePushAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeBypassPullRequestAllowance:
		typename = "BypassPullRequestAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeBypassPullRequestAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCWE:
		typename = "CWE"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCWE
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCheckRun:
		typename = "CheckRun"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCheckRun
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCheckSuite:
		typename = "CheckSuite"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCheckSuite
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeClosedEvent:
		typename = "ClosedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeClosedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCodeOfConduct:
		typename = "CodeOfConduct"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCodeOfConduct
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCommentDeletedEvent:
		typename = "CommentDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCommentDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCommit:
		typename = "Commit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCommit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCommitComment:
		typename = "CommitComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCommitComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCommitCommentThread:
		typename = "CommitCommentThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCommitCommentThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeComparison:
		typename = "Comparison"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeComparison
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeConnectedEvent:
		typename = "ConnectedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeConnectedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeConvertToDraftEvent:
		typename = "ConvertToDraftEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeConvertToDraftEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeConvertedNoteToIssueEvent:
		typename = "ConvertedNoteToIssueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeConvertedNoteToIssueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeConvertedToDiscussionEvent:
		typename = "ConvertedToDiscussionEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeConvertedToDiscussionEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeCrossReferencedEvent:
		typename = "CrossReferencedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeCrossReferencedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDemilestonedEvent:
		typename = "DemilestonedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDemilestonedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDependencyGraphManifest:
		typename = "DependencyGraphManifest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDependencyGraphManifest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeployKey:
		typename = "DeployKey"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeployKey
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeployedEvent:
		typename = "DeployedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeployedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeployment:
		typename = "Deployment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeployment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent:
		typename = "DeploymentEnvironmentChangedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeploymentReview:
		typename = "DeploymentReview"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeploymentReview
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDeploymentStatus:
		typename = "DeploymentStatus"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDeploymentStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDisconnectedEvent:
		typename = "DisconnectedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDisconnectedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDiscussion:
		typename = "Discussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDiscussionCategory:
		typename = "DiscussionCategory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDiscussionCategory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDiscussionComment:
		typename = "DiscussionComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDiscussionComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDiscussionPoll:
		typename = "DiscussionPoll"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDiscussionPoll
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDiscussionPollOption:
		typename = "DiscussionPollOption"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDiscussionPollOption
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeDraftIssue:
		typename = "DraftIssue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeDraftIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterprise:
		typename = "Enterprise"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterprise
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseAdministratorInvitation:
		typename = "EnterpriseAdministratorInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseAdministratorInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseIdentityProvider:
		typename = "EnterpriseIdentityProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseIdentityProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseMemberInvitation:
		typename = "EnterpriseMemberInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseMemberInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseRepositoryInfo:
		typename = "EnterpriseRepositoryInfo"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseRepositoryInfo
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseServerInstallation:
		typename = "EnterpriseServerInstallation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseServerInstallation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseServerUserAccount:
		typename = "EnterpriseServerUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseServerUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail:
		typename = "EnterpriseServerUserAccountEmail"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload:
		typename = "EnterpriseServerUserAccountsUpload"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnterpriseUserAccount:
		typename = "EnterpriseUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnterpriseUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeEnvironment:
		typename = "Environment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeEnvironment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeExternalIdentity:
		typename = "ExternalIdentity"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeExternalIdentity
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeGist:
		typename = "Gist"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeGist
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeGistComment:
		typename = "GistComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeGistComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeHeadRefDeletedEvent:
		typename = "HeadRefDeletedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeHeadRefDeletedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeHeadRefForcePushedEvent:
		typename = "HeadRefForcePushedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeHeadRefForcePushedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeHeadRefRestoredEvent:
		typename = "HeadRefRestoredEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeHeadRefRestoredEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeIpAllowListEntry:
		typename = "IpAllowListEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeIpAllowListEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeIssueComment:
		typename = "IssueComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeIssueComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLabel:
		typename = "Label"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLabel
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLabeledEvent:
		typename = "LabeledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLabeledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLanguage:
		typename = "Language"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLanguage
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLicense:
		typename = "License"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLicense
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLinkedBranch:
		typename = "LinkedBranch"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLinkedBranch
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeLockedEvent:
		typename = "LockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeLockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMannequin
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMarkedAsDuplicateEvent:
		typename = "MarkedAsDuplicateEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMarkedAsDuplicateEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMarketplaceCategory:
		typename = "MarketplaceCategory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMarketplaceCategory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMarketplaceListing:
		typename = "MarketplaceListing"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMarketplaceListing
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMemberFeatureRequestNotification:
		typename = "MemberFeatureRequestNotification"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMemberFeatureRequestNotification
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry:
		typename = "MembersCanDeleteReposClearAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry:
		typename = "MembersCanDeleteReposDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry:
		typename = "MembersCanDeleteReposEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMentionedEvent:
		typename = "MentionedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMentionedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMergeQueue:
		typename = "MergeQueue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMergeQueue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMergeQueueEntry:
		typename = "MergeQueueEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMergeQueueEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMergedEvent:
		typename = "MergedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMergedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMigrationSource:
		typename = "MigrationSource"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMigrationSource
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMilestone:
		typename = "Milestone"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMilestone
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMilestonedEvent:
		typename = "MilestonedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMilestonedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeMovedColumnsInProjectEvent:
		typename = "MovedColumnsInProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeMovedColumnsInProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOIDCProvider:
		typename = "OIDCProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOIDCProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry:
		typename = "OauthApplicationCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry:
		typename = "OrgAddBillingManagerAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgAddMemberAuditEntry:
		typename = "OrgAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgBlockUserAuditEntry:
		typename = "OrgBlockUserAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgBlockUserAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry:
		typename = "OrgConfigDisableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry:
		typename = "OrgConfigEnableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgCreateAuditEntry:
		typename = "OrgCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry:
		typename = "OrgDisableOauthAppRestrictionsAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgDisableSamlAuditEntry:
		typename = "OrgDisableSamlAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgDisableSamlAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry:
		typename = "OrgDisableTwoFactorRequirementAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry:
		typename = "OrgEnableOauthAppRestrictionsAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgEnableSamlAuditEntry:
		typename = "OrgEnableSamlAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgEnableSamlAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry:
		typename = "OrgEnableTwoFactorRequirementAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgInviteMemberAuditEntry:
		typename = "OrgInviteMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgInviteMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry:
		typename = "OrgInviteToBusinessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry:
		typename = "OrgOauthAppAccessApprovedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry:
		typename = "OrgOauthAppAccessBlockedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry:
		typename = "OrgOauthAppAccessDeniedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry:
		typename = "OrgOauthAppAccessRequestedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry:
		typename = "OrgOauthAppAccessUnblockedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry:
		typename = "OrgRemoveBillingManagerAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry:
		typename = "OrgRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry:
		typename = "OrgRemoveOutsideCollaboratorAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry:
		typename = "OrgRestoreMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgUnblockUserAuditEntry:
		typename = "OrgUnblockUserAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgUnblockUserAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry:
		typename = "OrgUpdateDefaultRepositoryPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry:
		typename = "OrgUpdateMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry:
		typename = "OrgUpdateMemberRepositoryCreationPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry:
		typename = "OrgUpdateMemberRepositoryInvitationPermissionAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrganization
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrganizationIdentityProvider:
		typename = "OrganizationIdentityProvider"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrganizationIdentityProvider
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrganizationInvitation:
		typename = "OrganizationInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrganizationInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeOrganizationMigration:
		typename = "OrganizationMigration"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeOrganizationMigration
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePackage:
		typename = "Package"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePackage
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePackageFile:
		typename = "PackageFile"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePackageFile
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePackageTag:
		typename = "PackageTag"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePackageTag
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePackageVersion:
		typename = "PackageVersion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePackageVersion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePinnedDiscussion:
		typename = "PinnedDiscussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePinnedDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePinnedEnvironment:
		typename = "PinnedEnvironment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePinnedEnvironment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePinnedEvent:
		typename = "PinnedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePinnedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePinnedIssue:
		typename = "PinnedIssue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePinnedIssue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry:
		typename = "PrivateRepositoryForkingDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry:
		typename = "PrivateRepositoryForkingEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProject:
		typename = "Project"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProject
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectCard:
		typename = "ProjectCard"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectCard
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectColumn:
		typename = "ProjectColumn"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectColumn
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2:
		typename = "ProjectV2"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2Field:
		typename = "ProjectV2Field"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2Field
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2Item:
		typename = "ProjectV2Item"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2Item
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemFieldDateValue:
		typename = "ProjectV2ItemFieldDateValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemFieldDateValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue:
		typename = "ProjectV2ItemFieldIterationValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue:
		typename = "ProjectV2ItemFieldNumberValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue:
		typename = "ProjectV2ItemFieldSingleSelectValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemFieldTextValue:
		typename = "ProjectV2ItemFieldTextValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemFieldTextValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2IterationField:
		typename = "ProjectV2IterationField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2IterationField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2SingleSelectField:
		typename = "ProjectV2SingleSelectField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2SingleSelectField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2StatusUpdate:
		typename = "ProjectV2StatusUpdate"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2StatusUpdate
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2View:
		typename = "ProjectV2View"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2View
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2Workflow:
		typename = "ProjectV2Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2Workflow
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePublicKey:
		typename = "PublicKey"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePublicKey
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestCommit:
		typename = "PullRequestCommit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestCommit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestCommitCommentThread:
		typename = "PullRequestCommitCommentThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestCommitCommentThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestReview:
		typename = "PullRequestReview"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestReview
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestReviewComment:
		typename = "PullRequestReviewComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestReviewComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestReviewThread:
		typename = "PullRequestReviewThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestReviewThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePullRequestThread:
		typename = "PullRequestThread"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePullRequestThread
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePush:
		typename = "Push"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePush
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodePushAllowance:
		typename = "PushAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodePushAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReaction:
		typename = "Reaction"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReaction
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReadyForReviewEvent:
		typename = "ReadyForReviewEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReadyForReviewEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRef:
		typename = "Ref"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRef
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReferencedEvent:
		typename = "ReferencedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReferencedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRelease:
		typename = "Release"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRelease
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReleaseAsset:
		typename = "ReleaseAsset"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReleaseAsset
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRemovedFromMergeQueueEvent:
		typename = "RemovedFromMergeQueueEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRemovedFromMergeQueueEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRemovedFromProjectEvent:
		typename = "RemovedFromProjectEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRemovedFromProjectEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRenamedTitleEvent:
		typename = "RenamedTitleEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRenamedTitleEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReopenedEvent:
		typename = "ReopenedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReopenedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoAccessAuditEntry:
		typename = "RepoAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoAddMemberAuditEntry:
		typename = "RepoAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoAddTopicAuditEntry:
		typename = "RepoAddTopicAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoAddTopicAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoArchivedAuditEntry:
		typename = "RepoArchivedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoArchivedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry:
		typename = "RepoChangeMergeSettingAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry:
		typename = "RepoConfigDisableAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry:
		typename = "RepoConfigDisableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry:
		typename = "RepoConfigDisableContributorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry:
		typename = "RepoConfigDisableSockpuppetDisallowedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry:
		typename = "RepoConfigEnableAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry:
		typename = "RepoConfigEnableCollaboratorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry:
		typename = "RepoConfigEnableContributorsOnlyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry:
		typename = "RepoConfigEnableSockpuppetDisallowedAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry:
		typename = "RepoConfigLockAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry:
		typename = "RepoConfigUnlockAnonymousGitAccessAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoCreateAuditEntry:
		typename = "RepoCreateAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoCreateAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoDestroyAuditEntry:
		typename = "RepoDestroyAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoDestroyAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry:
		typename = "RepoRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry:
		typename = "RepoRemoveTopicAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepository
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryInvitation:
		typename = "RepositoryInvitation"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryInvitation
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryMigration:
		typename = "RepositoryMigration"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryMigration
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryRule:
		typename = "RepositoryRule"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryRule
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryRuleset:
		typename = "RepositoryRuleset"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryRuleset
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryRulesetBypassActor:
		typename = "RepositoryRulesetBypassActor"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryRulesetBypassActor
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryTopic:
		typename = "RepositoryTopic"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryTopic
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry:
		typename = "RepositoryVisibilityChangeDisableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry:
		typename = "RepositoryVisibilityChangeEnableAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeRepositoryVulnerabilityAlert:
		typename = "RepositoryVulnerabilityAlert"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeRepositoryVulnerabilityAlert
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReviewDismissalAllowance:
		typename = "ReviewDismissalAllowance"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReviewDismissalAllowance
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReviewDismissedEvent:
		typename = "ReviewDismissedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReviewDismissedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReviewRequest:
		typename = "ReviewRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReviewRequest
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReviewRequestRemovedEvent:
		typename = "ReviewRequestRemovedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReviewRequestRemovedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeReviewRequestedEvent:
		typename = "ReviewRequestedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeReviewRequestedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSavedReply:
		typename = "SavedReply"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSavedReply
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSecurityAdvisory:
		typename = "SecurityAdvisory"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSecurityAdvisory
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorsActivity:
		typename = "SponsorsActivity"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorsActivity
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorsListing:
		typename = "SponsorsListing"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorsListing
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorsListingFeaturedItem:
		typename = "SponsorsListingFeaturedItem"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorsListingFeaturedItem
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorsTier:
		typename = "SponsorsTier"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorsTier
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorship:
		typename = "Sponsorship"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorship
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSponsorshipNewsletter:
		typename = "SponsorshipNewsletter"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSponsorshipNewsletter
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeStatus:
		typename = "Status"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeStatusCheckRollup:
		typename = "StatusCheckRollup"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeStatusCheckRollup
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeStatusContext:
		typename = "StatusContext"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeStatusContext
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeSubscribedEvent:
		typename = "SubscribedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeSubscribedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTag:
		typename = "Tag"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTag
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeam:
		typename = "Team"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeam
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamAddMemberAuditEntry:
		typename = "TeamAddMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamAddMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry:
		typename = "TeamAddRepositoryAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry:
		typename = "TeamChangeParentTeamAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamDiscussion:
		typename = "TeamDiscussion"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamDiscussionComment:
		typename = "TeamDiscussionComment"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamDiscussionComment
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry:
		typename = "TeamRemoveMemberAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry:
		typename = "TeamRemoveRepositoryAuditEntry"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTopic:
		typename = "Topic"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTopic
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTransferredEvent:
		typename = "TransferredEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTransferredEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeTree:
		typename = "Tree"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeTree
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnassignedEvent:
		typename = "UnassignedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnassignedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnlabeledEvent:
		typename = "UnlabeledEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnlabeledEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnlockedEvent:
		typename = "UnlockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnlockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent:
		typename = "UnmarkedAsDuplicateEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnpinnedEvent:
		typename = "UnpinnedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnpinnedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUnsubscribedEvent:
		typename = "UnsubscribedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUnsubscribedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUser
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUserBlockedEvent:
		typename = "UserBlockedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUserBlockedEvent
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUserContentEdit:
		typename = "UserContentEdit"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUserContentEdit
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUserList:
		typename = "UserList"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUserList
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeUserStatus:
		typename = "UserStatus"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeUserStatus
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeVerifiableDomain:
		typename = "VerifiableDomain"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeVerifiableDomain
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeWorkflow:
		typename = "Workflow"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeWorkflow
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeWorkflowRun:
		typename = "WorkflowRun"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeWorkflowRun
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeWorkflowRunFile:
		typename = "WorkflowRunFile"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeWorkflowRunFile
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNode: "%T"`, v)
	}
}

// PaginateProjectIssuesNodeAddedToMergeQueueEvent includes the requested fields of the GraphQL type AddedToMergeQueueEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'added_to_merge_queue' event on a given pull request.
type PaginateProjectIssuesNodeAddedToMergeQueueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAddedToMergeQueueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAddedToMergeQueueEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAddedToProjectEvent includes the requested fields of the GraphQL type AddedToProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'added_to_project' event on a given issue or pull request.
type PaginateProjectIssuesNodeAddedToProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAddedToProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAddedToProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeApp includes the requested fields of the GraphQL type App.
// The GraphQL type's documentation follows.
//
// A GitHub App.
type PaginateProjectIssuesNodeApp struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeApp.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeApp) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAssignedEvent includes the requested fields of the GraphQL type AssignedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'assigned' event on any assignable object.
type PaginateProjectIssuesNodeAssignedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAssignedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAssignedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAutoMergeDisabledEvent includes the requested fields of the GraphQL type AutoMergeDisabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_merge_disabled' event on a given pull request.
type PaginateProjectIssuesNodeAutoMergeDisabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutoMergeDisabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutoMergeDisabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAutoMergeEnabledEvent includes the requested fields of the GraphQL type AutoMergeEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_merge_enabled' event on a given pull request.
type PaginateProjectIssuesNodeAutoMergeEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutoMergeEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutoMergeEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAutoRebaseEnabledEvent includes the requested fields of the GraphQL type AutoRebaseEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_rebase_enabled' event on a given pull request.
type PaginateProjectIssuesNodeAutoRebaseEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutoRebaseEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutoRebaseEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAutoSquashEnabledEvent includes the requested fields of the GraphQL type AutoSquashEnabledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'auto_squash_enabled' event on a given pull request.
type PaginateProjectIssuesNodeAutoSquashEnabledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutoSquashEnabledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutoSquashEnabledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent includes the requested fields of the GraphQL type AutomaticBaseChangeFailedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'automatic_base_change_failed' event on a given pull request.
type PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutomaticBaseChangeFailedEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent includes the requested fields of the GraphQL type AutomaticBaseChangeSucceededEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'automatic_base_change_succeeded' event on a given pull request.
type PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeAutomaticBaseChangeSucceededEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeBaseRefChangedEvent includes the requested fields of the GraphQL type BaseRefChangedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_changed' event on a given issue or pull request.
type PaginateProjectIssuesNodeBaseRefChangedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBaseRefChangedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBaseRefChangedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBaseRefDeletedEvent includes the requested fields of the GraphQL type BaseRefDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_deleted' event on a given pull request.
type PaginateProjectIssuesNodeBaseRefDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBaseRefDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBaseRefDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBaseRefForcePushedEvent includes the requested fields of the GraphQL type BaseRefForcePushedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'base_ref_force_pushed' event on a given pull request.
type PaginateProjectIssuesNodeBaseRefForcePushedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBaseRefForcePushedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBaseRefForcePushedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBlob includes the requested fields of the GraphQL type Blob.
// The GraphQL type's documentation follows.
//
// Represents a Git blob.
type PaginateProjectIssuesNodeBlob struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBlob.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBlob) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type PaginateProjectIssuesNodeBot struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBot.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBot) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBranchProtectionRule includes the requested fields of the GraphQL type BranchProtectionRule.
// The GraphQL type's documentation follows.
//
// A branch protection rule.
type PaginateProjectIssuesNodeBranchProtectionRule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBranchProtectionRule.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBranchProtectionRule) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBypassForcePushAllowance includes the requested fields of the GraphQL type BypassForcePushAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to bypass a force push requirement on a protected branch.
type PaginateProjectIssuesNodeBypassForcePushAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBypassForcePushAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBypassForcePushAllowance) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeBypassPullRequestAllowance includes the requested fields of the GraphQL type BypassPullRequestAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.
type PaginateProjectIssuesNodeBypassPullRequestAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeBypassPullRequestAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeBypassPullRequestAllowance) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCWE includes the requested fields of the GraphQL type CWE.
// The GraphQL type's documentation follows.
//
// A common weakness enumeration
type PaginateProjectIssuesNodeCWE struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCWE.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCWE) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCheckRun includes the requested fields of the GraphQL type CheckRun.
// The GraphQL type's documentation follows.
//
// A check run.
type PaginateProjectIssuesNodeCheckRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCheckRun.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCheckRun) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCheckSuite includes the requested fields of the GraphQL type CheckSuite.
// The GraphQL type's documentation follows.
//
// A check suite.
type PaginateProjectIssuesNodeCheckSuite struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCheckSuite.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCheckSuite) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeClosedEvent includes the requested fields of the GraphQL type ClosedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'closed' event on any `Closable`.
type PaginateProjectIssuesNodeClosedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeClosedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeClosedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCodeOfConduct includes the requested fields of the GraphQL type CodeOfConduct.
// The GraphQL type's documentation follows.
//
// The Code of Conduct for a repository
type PaginateProjectIssuesNodeCodeOfConduct struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCodeOfConduct.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCodeOfConduct) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCommentDeletedEvent includes the requested fields of the GraphQL type CommentDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'comment_deleted' event on a given issue or pull request.
type PaginateProjectIssuesNodeCommentDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCommentDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCommentDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCommit includes the requested fields of the GraphQL type Commit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit.
type PaginateProjectIssuesNodeCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCommit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCommit) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCommitComment includes the requested fields of the GraphQL type CommitComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on a given Commit.
type PaginateProjectIssuesNodeCommitComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCommitComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCommitComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCommitCommentThread includes the requested fields of the GraphQL type CommitCommentThread.
// The GraphQL type's documentation follows.
//
// A thread of comments on a commit.
type PaginateProjectIssuesNodeCommitCommentThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCommitCommentThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCommitCommentThread) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeComparison includes the requested fields of the GraphQL type Comparison.
// The GraphQL type's documentation follows.
//
// Represents a comparison between two commit revisions.
type PaginateProjectIssuesNodeComparison struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeComparison.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeComparison) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeConnectedEvent includes the requested fields of the GraphQL type ConnectedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'connected' event on a given issue or pull request.
type PaginateProjectIssuesNodeConnectedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeConnectedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeConnectedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeConvertToDraftEvent includes the requested fields of the GraphQL type ConvertToDraftEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'convert_to_draft' event on a given pull request.
type PaginateProjectIssuesNodeConvertToDraftEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeConvertToDraftEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeConvertToDraftEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeConvertedNoteToIssueEvent includes the requested fields of the GraphQL type ConvertedNoteToIssueEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'converted_note_to_issue' event on a given issue or pull request.
type PaginateProjectIssuesNodeConvertedNoteToIssueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeConvertedNoteToIssueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeConvertedNoteToIssueEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeConvertedToDiscussionEvent includes the requested fields of the GraphQL type ConvertedToDiscussionEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'converted_to_discussion' event on a given issue.
type PaginateProjectIssuesNodeConvertedToDiscussionEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeConvertedToDiscussionEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeConvertedToDiscussionEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeCrossReferencedEvent includes the requested fields of the GraphQL type CrossReferencedEvent.
// The GraphQL type's documentation follows.
//
// Represents a mention made by one issue or pull request to another.
type PaginateProjectIssuesNodeCrossReferencedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeCrossReferencedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeCrossReferencedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDemilestonedEvent includes the requested fields of the GraphQL type DemilestonedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'demilestoned' event on a given issue or pull request.
type PaginateProjectIssuesNodeDemilestonedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDemilestonedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDemilestonedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDependencyGraphManifest includes the requested fields of the GraphQL type DependencyGraphManifest.
// The GraphQL type's documentation follows.
//
// Dependency manifest for a repository
type PaginateProjectIssuesNodeDependencyGraphManifest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDependencyGraphManifest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDependencyGraphManifest) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDeployKey includes the requested fields of the GraphQL type DeployKey.
// The GraphQL type's documentation follows.
//
// A repository deploy key.
type PaginateProjectIssuesNodeDeployKey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeployKey.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeployKey) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDeployedEvent includes the requested fields of the GraphQL type DeployedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'deployed' event on a given pull request.
type PaginateProjectIssuesNodeDeployedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeployedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeployedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDeployment includes the requested fields of the GraphQL type Deployment.
// The GraphQL type's documentation follows.
//
// Represents triggered deployment instance.
type PaginateProjectIssuesNodeDeployment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeployment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeployment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent includes the requested fields of the GraphQL type DeploymentEnvironmentChangedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'deployment_environment_changed' event on a given pull request.
type PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeploymentEnvironmentChangedEvent) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeDeploymentReview includes the requested fields of the GraphQL type DeploymentReview.
// The GraphQL type's documentation follows.
//
// A deployment review.
type PaginateProjectIssuesNodeDeploymentReview struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeploymentReview.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeploymentReview) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDeploymentStatus includes the requested fields of the GraphQL type DeploymentStatus.
// The GraphQL type's documentation follows.
//
// Describes the status of a given deployment attempt.
type PaginateProjectIssuesNodeDeploymentStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDeploymentStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDeploymentStatus) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDisconnectedEvent includes the requested fields of the GraphQL type DisconnectedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'disconnected' event on a given issue or pull request.
type PaginateProjectIssuesNodeDisconnectedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDisconnectedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDisconnectedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDiscussion includes the requested fields of the GraphQL type Discussion.
// The GraphQL type's documentation follows.
//
// A discussion in a repository.
type PaginateProjectIssuesNodeDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDiscussionCategory includes the requested fields of the GraphQL type DiscussionCategory.
// The GraphQL type's documentation follows.
//
// A category for discussions in a repository.
type PaginateProjectIssuesNodeDiscussionCategory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDiscussionCategory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDiscussionCategory) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDiscussionComment includes the requested fields of the GraphQL type DiscussionComment.
// The GraphQL type's documentation follows.
//
// A comment on a discussion.
type PaginateProjectIssuesNodeDiscussionComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDiscussionComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDiscussionComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDiscussionPoll includes the requested fields of the GraphQL type DiscussionPoll.
// The GraphQL type's documentation follows.
//
// A poll for a discussion.
type PaginateProjectIssuesNodeDiscussionPoll struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDiscussionPoll.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDiscussionPoll) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDiscussionPollOption includes the requested fields of the GraphQL type DiscussionPollOption.
// The GraphQL type's documentation follows.
//
// An option for a discussion poll.
type PaginateProjectIssuesNodeDiscussionPollOption struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDiscussionPollOption.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDiscussionPollOption) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeDraftIssue includes the requested fields of the GraphQL type DraftIssue.
// The GraphQL type's documentation follows.
//
// A draft issue within a project.
type PaginateProjectIssuesNodeDraftIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeDraftIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeDraftIssue) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnterprise includes the requested fields of the GraphQL type Enterprise.
// The GraphQL type's documentation follows.
//
// An account to manage multiple organizations with consolidated policy and billing.
type PaginateProjectIssuesNodeEnterprise struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterprise.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterprise) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnterpriseAdministratorInvitation includes the requested fields of the GraphQL type EnterpriseAdministratorInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to become an owner or billing manager of an enterprise.
type PaginateProjectIssuesNodeEnterpriseAdministratorInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseAdministratorInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseAdministratorInvitation) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeEnterpriseIdentityProvider includes the requested fields of the GraphQL type EnterpriseIdentityProvider.
// The GraphQL type's documentation follows.
//
// An identity provider configured to provision identities for an enterprise.
// Visible to enterprise owners or enterprise owners' personal access tokens
// (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectIssuesNodeEnterpriseIdentityProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseIdentityProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseIdentityProvider) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnterpriseMemberInvitation includes the requested fields of the GraphQL type EnterpriseMemberInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to become an unaffiliated member of an enterprise.
type PaginateProjectIssuesNodeEnterpriseMemberInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseMemberInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseMemberInvitation) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnterpriseRepositoryInfo includes the requested fields of the GraphQL type EnterpriseRepositoryInfo.
// The GraphQL type's documentation follows.
//
// A subset of repository information queryable from an enterprise.
type PaginateProjectIssuesNodeEnterpriseRepositoryInfo struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseRepositoryInfo.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseRepositoryInfo) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnterpriseServerInstallation includes the requested fields of the GraphQL type EnterpriseServerInstallation.
// The GraphQL type's documentation follows.
//
// An Enterprise Server installation.
type PaginateProjectIssuesNodeEnterpriseServerInstallation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseServerInstallation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseServerInstallation) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeEnterpriseServerUserAccount includes the requested fields of the GraphQL type EnterpriseServerUserAccount.
// The GraphQL type's documentation follows.
//
// A user account on an Enterprise Server installation.
type PaginateProjectIssuesNodeEnterpriseServerUserAccount struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseServerUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccount) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail includes the requested fields of the GraphQL type EnterpriseServerUserAccountEmail.
// The GraphQL type's documentation follows.
//
// An email belonging to a user account on an Enterprise Server installation.
type PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccountEmail) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload includes the requested fields of the GraphQL type EnterpriseServerUserAccountsUpload.
// The GraphQL type's documentation follows.
//
// A user accounts upload from an Enterprise Server installation.
type PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseServerUserAccountsUpload) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeEnterpriseUserAccount includes the requested fields of the GraphQL type EnterpriseUserAccount.
// The GraphQL type's documentation follows.
//
// An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
type PaginateProjectIssuesNodeEnterpriseUserAccount struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnterpriseUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnterpriseUserAccount) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeEnvironment includes the requested fields of the GraphQL type Environment.
// The GraphQL type's documentation follows.
//
// An environment.
type PaginateProjectIssuesNodeEnvironment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeEnvironment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeEnvironment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeExternalIdentity includes the requested fields of the GraphQL type ExternalIdentity.
// The GraphQL type's documentation follows.
//
// An external identity provisioned by SAML SSO or SCIM. If SAML is configured on
// the organization, the external identity is visible to (1) organization owners,
// (2) organization owners' personal access tokens (classic) with read:org or
// admin:org scope, (3) GitHub App with an installation token with read or write
// access to members. If SAML is configured on the enterprise, the external
// identity is visible to (1) enterprise owners, (2) enterprise owners' personal
// access tokens (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectIssuesNodeExternalIdentity struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeExternalIdentity.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeExternalIdentity) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeGist includes the requested fields of the GraphQL type Gist.
// The GraphQL type's documentation follows.
//
// A Gist.
type PaginateProjectIssuesNodeGist struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeGist.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeGist) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeGistComment includes the requested fields of the GraphQL type GistComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Gist.
type PaginateProjectIssuesNodeGistComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeGistComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeGistComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeHeadRefDeletedEvent includes the requested fields of the GraphQL type HeadRefDeletedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_deleted' event on a given pull request.
type PaginateProjectIssuesNodeHeadRefDeletedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeHeadRefDeletedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeHeadRefDeletedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeHeadRefForcePushedEvent includes the requested fields of the GraphQL type HeadRefForcePushedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_force_pushed' event on a given pull request.
type PaginateProjectIssuesNodeHeadRefForcePushedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeHeadRefForcePushedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeHeadRefForcePushedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeHeadRefRestoredEvent includes the requested fields of the GraphQL type HeadRefRestoredEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'head_ref_restored' event on a given pull request.
type PaginateProjectIssuesNodeHeadRefRestoredEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeHeadRefRestoredEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeHeadRefRestoredEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeIpAllowListEntry includes the requested fields of the GraphQL type IpAllowListEntry.
// The GraphQL type's documentation follows.
//
// An IP address or range of addresses that is allowed to access an owner's resources.
type PaginateProjectIssuesNodeIpAllowListEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeIpAllowListEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeIpAllowListEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type PaginateProjectIssuesNodeIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeIssue) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeIssueComment includes the requested fields of the GraphQL type IssueComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Issue.
type PaginateProjectIssuesNodeIssueComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeIssueComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeIssueComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLabel includes the requested fields of the GraphQL type Label.
// The GraphQL type's documentation follows.
//
// A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.
type PaginateProjectIssuesNodeLabel struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLabel.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLabel) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLabeledEvent includes the requested fields of the GraphQL type LabeledEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'labeled' event on a given issue or pull request.
type PaginateProjectIssuesNodeLabeledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLabeledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLabeledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLanguage includes the requested fields of the GraphQL type Language.
// The GraphQL type's documentation follows.
//
// Represents a given language found in repositories.
type PaginateProjectIssuesNodeLanguage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLanguage.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLanguage) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLicense includes the requested fields of the GraphQL type License.
// The GraphQL type's documentation follows.
//
// A repository's open source license
type PaginateProjectIssuesNodeLicense struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLicense.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLicense) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLinkedBranch includes the requested fields of the GraphQL type LinkedBranch.
// The GraphQL type's documentation follows.
//
// A branch linked to an issue.
type PaginateProjectIssuesNodeLinkedBranch struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLinkedBranch.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLinkedBranch) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeLockedEvent includes the requested fields of the GraphQL type LockedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'locked' event on a given issue or pull request.
type PaginateProjectIssuesNodeLockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeLockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeLockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type PaginateProjectIssuesNodeMannequin struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMannequin.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMannequin) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMarkedAsDuplicateEvent includes the requested fields of the GraphQL type MarkedAsDuplicateEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'marked_as_duplicate' event on a given issue or pull request.
type PaginateProjectIssuesNodeMarkedAsDuplicateEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMarkedAsDuplicateEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMarkedAsDuplicateEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMarketplaceCategory includes the requested fields of the GraphQL type MarketplaceCategory.
// The GraphQL type's documentation follows.
//
// A public description of a Marketplace category.
type PaginateProjectIssuesNodeMarketplaceCategory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMarketplaceCategory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMarketplaceCategory) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMarketplaceListing includes the requested fields of the GraphQL type MarketplaceListing.
// The GraphQL type's documentation follows.
//
// A listing in the GitHub integration marketplace.
type PaginateProjectIssuesNodeMarketplaceListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMarketplaceListing.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMarketplaceListing) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMemberFeatureRequestNotification includes the requested fields of the GraphQL type MemberFeatureRequestNotification.
// The GraphQL type's documentation follows.
//
// Represents a member feature request notification
type PaginateProjectIssuesNodeMemberFeatureRequestNotification struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMemberFeatureRequestNotification.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMemberFeatureRequestNotification) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposClearAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.clear event.
type PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposClearAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.disable event.
type PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry includes the requested fields of the GraphQL type MembersCanDeleteReposEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a members_can_delete_repos.enable event.
type PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMembersCanDeleteReposEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeMentionedEvent includes the requested fields of the GraphQL type MentionedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'mentioned' event on a given issue or pull request.
type PaginateProjectIssuesNodeMentionedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMentionedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMentionedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMergeQueue includes the requested fields of the GraphQL type MergeQueue.
// The GraphQL type's documentation follows.
//
// The queue of pull request entries to be merged into a protected branch in a repository.
type PaginateProjectIssuesNodeMergeQueue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMergeQueue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMergeQueue) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMergeQueueEntry includes the requested fields of the GraphQL type MergeQueueEntry.
// The GraphQL type's documentation follows.
//
// Entries in a MergeQueue
type PaginateProjectIssuesNodeMergeQueueEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMergeQueueEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMergeQueueEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMergedEvent includes the requested fields of the GraphQL type MergedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'merged' event on a given pull request.
type PaginateProjectIssuesNodeMergedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMergedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMergedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMigrationSource includes the requested fields of the GraphQL type MigrationSource.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) migration source.
type PaginateProjectIssuesNodeMigrationSource struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMigrationSource.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMigrationSource) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMilestone includes the requested fields of the GraphQL type Milestone.
// The GraphQL type's documentation follows.
//
// Represents a Milestone object on a given repository.
type PaginateProjectIssuesNodeMilestone struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMilestone.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMilestone) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMilestonedEvent includes the requested fields of the GraphQL type MilestonedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'milestoned' event on a given issue or pull request.
type PaginateProjectIssuesNodeMilestonedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMilestonedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMilestonedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeMovedColumnsInProjectEvent includes the requested fields of the GraphQL type MovedColumnsInProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'moved_columns_in_project' event on a given issue or pull request.
type PaginateProjectIssuesNodeMovedColumnsInProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeMovedColumnsInProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeMovedColumnsInProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOIDCProvider includes the requested fields of the GraphQL type OIDCProvider.
// The GraphQL type's documentation follows.
//
// An OIDC identity provider configured to provision identities for an enterprise.
// Visible to enterprise owners or enterprise owners' personal access tokens
// (classic) with read:enterprise or admin:enterprise scope.
type PaginateProjectIssuesNodeOIDCProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOIDCProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOIDCProvider) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry includes the requested fields of the GraphQL type OauthApplicationCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a oauth_application.create event.
type PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOauthApplicationCreateAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry includes the requested fields of the GraphQL type OrgAddBillingManagerAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.add_billing_manager
type PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgAddBillingManagerAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgAddMemberAuditEntry includes the requested fields of the GraphQL type OrgAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.add_member
type PaginateProjectIssuesNodeOrgAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgBlockUserAuditEntry includes the requested fields of the GraphQL type OrgBlockUserAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.block_user
type PaginateProjectIssuesNodeOrgBlockUserAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgBlockUserAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgBlockUserAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type OrgConfigDisableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.config.disable_collaborators_only event.
type PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgConfigDisableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type OrgConfigEnableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.config.enable_collaborators_only event.
type PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgConfigEnableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgCreateAuditEntry includes the requested fields of the GraphQL type OrgCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.create event.
type PaginateProjectIssuesNodeOrgCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgCreateAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry includes the requested fields of the GraphQL type OrgDisableOauthAppRestrictionsAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_oauth_app_restrictions event.
type PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgDisableOauthAppRestrictionsAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgDisableSamlAuditEntry includes the requested fields of the GraphQL type OrgDisableSamlAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_saml event.
type PaginateProjectIssuesNodeOrgDisableSamlAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgDisableSamlAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgDisableSamlAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry includes the requested fields of the GraphQL type OrgDisableTwoFactorRequirementAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.disable_two_factor_requirement event.
type PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgDisableTwoFactorRequirementAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry includes the requested fields of the GraphQL type OrgEnableOauthAppRestrictionsAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_oauth_app_restrictions event.
type PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgEnableOauthAppRestrictionsAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgEnableSamlAuditEntry includes the requested fields of the GraphQL type OrgEnableSamlAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_saml event.
type PaginateProjectIssuesNodeOrgEnableSamlAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgEnableSamlAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgEnableSamlAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry includes the requested fields of the GraphQL type OrgEnableTwoFactorRequirementAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.enable_two_factor_requirement event.
type PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgEnableTwoFactorRequirementAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgInviteMemberAuditEntry includes the requested fields of the GraphQL type OrgInviteMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.invite_member event.
type PaginateProjectIssuesNodeOrgInviteMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgInviteMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgInviteMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry includes the requested fields of the GraphQL type OrgInviteToBusinessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.invite_to_business event.
type PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgInviteToBusinessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessApprovedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_approved event.
type PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessApprovedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessBlockedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_blocked event.
type PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessBlockedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessDeniedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_denied event.
type PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessDeniedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessRequestedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_requested event.
type PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessRequestedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry includes the requested fields of the GraphQL type OrgOauthAppAccessUnblockedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.oauth_app_access_unblocked event.
type PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgOauthAppAccessUnblockedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry includes the requested fields of the GraphQL type OrgRemoveBillingManagerAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_billing_manager event.
type PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgRemoveBillingManagerAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry includes the requested fields of the GraphQL type OrgRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_member event.
type PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry includes the requested fields of the GraphQL type OrgRemoveOutsideCollaboratorAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.remove_outside_collaborator event.
type PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgRemoveOutsideCollaboratorAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry includes the requested fields of the GraphQL type OrgRestoreMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.restore_member event.
type PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgRestoreMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgUnblockUserAuditEntry includes the requested fields of the GraphQL type OrgUnblockUserAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.unblock_user
type PaginateProjectIssuesNodeOrgUnblockUserAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgUnblockUserAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgUnblockUserAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateDefaultRepositoryPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_default_repository_permission
type PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgUpdateDefaultRepositoryPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member event.
type PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgUpdateMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberRepositoryCreationPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member_repository_creation_permission event.
type PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryCreationPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry includes the requested fields of the GraphQL type OrgUpdateMemberRepositoryInvitationPermissionAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a org.update_member_repository_invitation_permission event.
type PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrgUpdateMemberRepositoryInvitationPermissionAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type PaginateProjectIssuesNodeOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrganization.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrganization) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrganizationIdentityProvider includes the requested fields of the GraphQL type OrganizationIdentityProvider.
// The GraphQL type's documentation follows.
//
// An Identity Provider configured to provision SAML and SCIM identities for
// Organizations. Visible to (1) organization owners, (2) organization owners'
// personal access tokens (classic) with read:org or admin:org scope, (3) GitHub
// App with an installation token with read or write access to members.
type PaginateProjectIssuesNodeOrganizationIdentityProvider struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrganizationIdentityProvider.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrganizationIdentityProvider) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeOrganizationInvitation includes the requested fields of the GraphQL type OrganizationInvitation.
// The GraphQL type's documentation follows.
//
// An Invitation for a user to an organization.
type PaginateProjectIssuesNodeOrganizationInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrganizationInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrganizationInvitation) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeOrganizationMigration includes the requested fields of the GraphQL type OrganizationMigration.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) organization migration.
type PaginateProjectIssuesNodeOrganizationMigration struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeOrganizationMigration.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeOrganizationMigration) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePackage includes the requested fields of the GraphQL type Package.
// The GraphQL type's documentation follows.
//
// Information for an uploaded package.
type PaginateProjectIssuesNodePackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePackage.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePackage) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePackageFile includes the requested fields of the GraphQL type PackageFile.
// The GraphQL type's documentation follows.
//
// A file in a package version.
type PaginateProjectIssuesNodePackageFile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePackageFile.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePackageFile) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePackageTag includes the requested fields of the GraphQL type PackageTag.
// The GraphQL type's documentation follows.
//
// A version tag contains the mapping between a tag name and a version.
type PaginateProjectIssuesNodePackageTag struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePackageTag.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePackageTag) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePackageVersion includes the requested fields of the GraphQL type PackageVersion.
// The GraphQL type's documentation follows.
//
// Information about a specific package version.
type PaginateProjectIssuesNodePackageVersion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePackageVersion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePackageVersion) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePinnedDiscussion includes the requested fields of the GraphQL type PinnedDiscussion.
// The GraphQL type's documentation follows.
//
// A Pinned Discussion is a discussion pinned to a repository's index page.
type PaginateProjectIssuesNodePinnedDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePinnedDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePinnedDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePinnedEnvironment includes the requested fields of the GraphQL type PinnedEnvironment.
// The GraphQL type's documentation follows.
//
// Represents a pinned environment on a given repository
type PaginateProjectIssuesNodePinnedEnvironment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePinnedEnvironment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePinnedEnvironment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePinnedEvent includes the requested fields of the GraphQL type PinnedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'pinned' event on a given issue or pull request.
type PaginateProjectIssuesNodePinnedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePinnedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePinnedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePinnedIssue includes the requested fields of the GraphQL type PinnedIssue.
// The GraphQL type's documentation follows.
//
// A Pinned Issue is a issue pinned to a repository's index page.
type PaginateProjectIssuesNodePinnedIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePinnedIssue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePinnedIssue) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry includes the requested fields of the GraphQL type PrivateRepositoryForkingDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a private_repository_forking.disable event.
type PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePrivateRepositoryForkingDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry includes the requested fields of the GraphQL type PrivateRepositoryForkingEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a private_repository_forking.enable event.
type PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePrivateRepositoryForkingEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProject includes the requested fields of the GraphQL type Project.
// The GraphQL type's documentation follows.
//
// Projects manage issues, pull requests and notes within a project owner.
type PaginateProjectIssuesNodeProject struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProject.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProject) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectCard includes the requested fields of the GraphQL type ProjectCard.
// The GraphQL type's documentation follows.
//
// A card in a project.
type PaginateProjectIssuesNodeProjectCard struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectCard.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectCard) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectColumn includes the requested fields of the GraphQL type ProjectColumn.
// The GraphQL type's documentation follows.
//
// A column inside a project.
type PaginateProjectIssuesNodeProjectColumn struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectColumn.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectColumn) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2 includes the requested fields of the GraphQL type ProjectV2.
// The GraphQL type's documentation follows.
//
// New projects that manage issues, pull requests and drafts using tables and boards.
type PaginateProjectIssuesNodeProjectV2 struct {
	Typename string `json:"__typename"`
	// List of items in the project
	Items PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection `json:"items"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2) GetTypename() string { return v.Typename }

// GetItems returns PaginateProjectIssuesNodeProjectV2.Items, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2) GetItems() PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection {
	return v.Items
}

// PaginateProjectIssuesNodeProjectV2Field includes the requested fields of the GraphQL type ProjectV2Field.
// The GraphQL type's documentation follows.
//
// A field inside a project.
type PaginateProjectIssuesNodeProjectV2Field struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2Field.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2Field) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2Item includes the requested fields of the GraphQL type ProjectV2Item.
// The GraphQL type's documentation follows.
//
// An item within a Project.
type PaginateProjectIssuesNodeProjectV2Item struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2Item.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2Item) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2ItemFieldDateValue includes the requested fields of the GraphQL type ProjectV2ItemFieldDateValue.
// The GraphQL type's documentation follows.
//
// The value of a date field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemFieldDateValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemFieldDateValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldDateValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue includes the requested fields of the GraphQL type ProjectV2ItemFieldIterationValue.
// The GraphQL type's documentation follows.
//
// The value of an iteration field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldIterationValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue includes the requested fields of the GraphQL type ProjectV2ItemFieldNumberValue.
// The GraphQL type's documentation follows.
//
// The value of a number field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldNumberValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue includes the requested fields of the GraphQL type ProjectV2ItemFieldSingleSelectValue.
// The GraphQL type's documentation follows.
//
// The value of a single select field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldSingleSelectValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemFieldTextValue includes the requested fields of the GraphQL type ProjectV2ItemFieldTextValue.
// The GraphQL type's documentation follows.
//
// The value of a text field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemFieldTextValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemFieldTextValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemFieldTextValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection includes the requested fields of the GraphQL type ProjectV2ItemConnection.
// The GraphQL type's documentation follows.
//
// The connection type for ProjectV2Item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection struct {
	// A list of nodes.
	Nodes []PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item `json:"nodes"`
}

// GetNodes returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnection) GetNodes() []PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item {
	return v.Nodes
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item includes the requested fields of the GraphQL type ProjectV2Item.
// The GraphQL type's documentation follows.
//
// An item within a Project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item struct {
	// The Node ID of the ProjectV2Item object
	Id string `json:"id"`
	// The field values that are set on the item.
	FieldValues PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection `json:"fieldValues"`
}

// GetId returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item.Id, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item) GetId() string {
	return v.Id
}

// GetFieldValues returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item.FieldValues, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2Item) GetFieldValues() PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection {
	return v.FieldValues
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection includes the requested fields of the GraphQL type ProjectV2ItemFieldValueConnection.
// The GraphQL type's documentation follows.
//
// The connection type for ProjectV2ItemFieldValue.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection struct {
	// A list of nodes.
	Nodes []PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue `json:"-"`
}

// GetNodes returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) GetNodes() []PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue {
	return v.Nodes
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection
		Nodes []json.RawMessage `json:"nodes"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Nodes
		src := firstPass.Nodes
		*dst = make(
			[]PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection struct {
	Nodes []json.RawMessage `json:"nodes"`
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection) __premarshalJSON() (*__premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection, error) {
	var retval __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection

	{

		dst := &retval.Nodes
		src := v.Nodes
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnection.Nodes: %w", err)
			}
		}
	}
	return &retval, nil
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue includes the requested fields of the GraphQL type ProjectV2ItemFieldDateValue.
// The GraphQL type's documentation follows.
//
// The value of a date field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue includes the requested fields of the GraphQL type ProjectV2ItemFieldIterationValue.
// The GraphQL type's documentation follows.
//
// The value of an iteration field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue includes the requested fields of the GraphQL type ProjectV2ItemFieldLabelValue.
// The GraphQL type's documentation follows.
//
// The value of the labels field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue includes the requested fields of the GraphQL type ProjectV2ItemFieldMilestoneValue.
// The GraphQL type's documentation follows.
//
// The value of a milestone field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue includes the requested fields of the GraphQL type ProjectV2ItemFieldNumberValue.
// The GraphQL type's documentation follows.
//
// The value of a number field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue includes the requested fields of the GraphQL type ProjectV2ItemFieldPullRequestValue.
// The GraphQL type's documentation follows.
//
// The value of a pull request field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue includes the requested fields of the GraphQL type ProjectV2ItemFieldRepositoryValue.
// The GraphQL type's documentation follows.
//
// The value of a repository field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue includes the requested fields of the GraphQL type ProjectV2ItemFieldReviewerValue.
// The GraphQL type's documentation follows.
//
// The value of a reviewers field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue includes the requested fields of the GraphQL type ProjectV2ItemFieldSingleSelectValue.
// The GraphQL type's documentation follows.
//
// The value of a single select field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`
	// The name of the selected single select option.
	Name string `json:"name"`
	// The project field that contains this value.
	Field PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration `json:"-"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetName() string {
	return v.Name
}

// GetField returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) GetField() PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration {
	return v.Field
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
		Field json.RawMessage `json:"field"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Field
		src := firstPass.Field
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field: %w", err)
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue struct {
	Typename string `json:"__typename"`

	Name string `json:"name"`

	Field json.RawMessage `json:"field"`
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) __premarshalJSON() (*__premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue, error) {
	var retval __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue

	retval.Typename = v.Typename
	retval.Name = v.Name
	{

		dst := &retval.Field
		src := v.Field
		var err error
		*dst, err = __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue.Field: %w", err)
		}
	}
	return &retval, nil
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field includes the requested fields of the GraphQL type ProjectV2Field.
// The GraphQL type's documentation follows.
//
// A field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration includes the requested fields of the GraphQL interface ProjectV2FieldConfiguration.
//
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration is implemented by the following types:
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField
// The GraphQL type's documentation follows.
//
// Configurations for project fields.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration interface {
	implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration() {
}

func __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(b []byte, v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ProjectV2Field":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field)
		return json.Unmarshal(b, *v)
	case "ProjectV2IterationField":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField)
		return json.Unmarshal(b, *v)
	case "ProjectV2SingleSelectField":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ProjectV2FieldConfiguration.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration(v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field:
		typename = "ProjectV2Field"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2Field
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField:
		typename = "ProjectV2IterationField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField:
		typename = "ProjectV2SingleSelectField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2FieldConfiguration: "%T"`, v)
	}
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField includes the requested fields of the GraphQL type ProjectV2IterationField.
// The GraphQL type's documentation follows.
//
// An iteration field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2IterationField) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField includes the requested fields of the GraphQL type ProjectV2SingleSelectField.
// The GraphQL type's documentation follows.
//
// A single select field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValueFieldProjectV2SingleSelectField) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue includes the requested fields of the GraphQL type ProjectV2ItemFieldTextValue.
// The GraphQL type's documentation follows.
//
// The value of a text field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue struct {
	Typename string `json:"__typename"`
	// Text value of a field
	Text string `json:"text"`
	// The project field that contains this value.
	Field PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration `json:"-"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) GetTypename() string {
	return v.Typename
}

// GetText returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Text, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) GetText() string {
	return v.Text
}

// GetField returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Field, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) GetField() PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration {
	return v.Field
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue
		Field json.RawMessage `json:"field"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Field
		src := firstPass.Field
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Field: %w", err)
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue struct {
	Typename string `json:"__typename"`

	Text string `json:"text"`

	Field json.RawMessage `json:"field"`
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) __premarshalJSON() (*__premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue, error) {
	var retval __premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue

	retval.Typename = v.Typename
	retval.Text = v.Text
	{

		dst := &retval.Field
		src := v.Field
		var err error
		*dst, err = __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue.Field: %w", err)
		}
	}
	return &retval, nil
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field includes the requested fields of the GraphQL type ProjectV2Field.
// The GraphQL type's documentation follows.
//
// A field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration includes the requested fields of the GraphQL interface ProjectV2FieldConfiguration.
//
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration is implemented by the following types:
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField
// The GraphQL type's documentation follows.
//
// Configurations for project fields.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration interface {
	implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration() {
}

func __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration(b []byte, v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ProjectV2Field":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field)
		return json.Unmarshal(b, *v)
	case "ProjectV2IterationField":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField)
		return json.Unmarshal(b, *v)
	case "ProjectV2SingleSelectField":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ProjectV2FieldConfiguration.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration(v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field:
		typename = "ProjectV2Field"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2Field
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField:
		typename = "ProjectV2IterationField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField:
		typename = "ProjectV2SingleSelectField"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2FieldConfiguration: "%T"`, v)
	}
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField includes the requested fields of the GraphQL type ProjectV2IterationField.
// The GraphQL type's documentation follows.
//
// An iteration field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2IterationField) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField includes the requested fields of the GraphQL type ProjectV2SingleSelectField.
// The GraphQL type's documentation follows.
//
// A single select field inside a project.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField struct {
	Typename string `json:"__typename"`
	// The project field's name.
	Name string `json:"name"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField) GetTypename() string {
	return v.Typename
}

// GetName returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField.Name, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValueFieldProjectV2SingleSelectField) GetName() string {
	return v.Name
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue includes the requested fields of the GraphQL type ProjectV2ItemFieldUserValue.
// The GraphQL type's documentation follows.
//
// The value of a user field in a Project item.
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue includes the requested fields of the GraphQL interface ProjectV2ItemFieldValue.
//
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue is implemented by the following types:
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue
// PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue
// The GraphQL type's documentation follows.
//
// Project field values
type PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue interface {
	implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}
func (v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue) implementsGraphQLInterfacePaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue() {
}

func __unmarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(b []byte, v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ProjectV2ItemFieldDateValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldIterationValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldLabelValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldMilestoneValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldNumberValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldPullRequestValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldRepositoryValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldReviewerValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldSingleSelectValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldTextValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue)
		return json.Unmarshal(b, *v)
	case "ProjectV2ItemFieldUserValue":
		*v = new(PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ProjectV2ItemFieldValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue: "%v"`, tn.TypeName)
	}
}

func __marshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue(v *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue:
		typename = "ProjectV2ItemFieldDateValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldDateValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue:
		typename = "ProjectV2ItemFieldIterationValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldIterationValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue:
		typename = "ProjectV2ItemFieldLabelValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldLabelValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue:
		typename = "ProjectV2ItemFieldMilestoneValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldMilestoneValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue:
		typename = "ProjectV2ItemFieldNumberValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldNumberValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue:
		typename = "ProjectV2ItemFieldPullRequestValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldPullRequestValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue:
		typename = "ProjectV2ItemFieldRepositoryValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldRepositoryValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue:
		typename = "ProjectV2ItemFieldReviewerValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldReviewerValue
		}{typename, v}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue:
		typename = "ProjectV2ItemFieldSingleSelectValue"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldSingleSelectValue
		}{typename, premarshaled}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue:
		typename = "ProjectV2ItemFieldTextValue"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalPaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldTextValue
		}{typename, premarshaled}
		return json.Marshal(result)
	case *PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue:
		typename = "ProjectV2ItemFieldUserValue"

		result := struct {
			TypeName string `json:"__typename"`
			*PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldUserValue
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PaginateProjectIssuesNodeProjectV2ItemsProjectV2ItemConnectionNodesProjectV2ItemFieldValuesProjectV2ItemFieldValueConnectionNodesProjectV2ItemFieldValue: "%T"`, v)
	}
}

// PaginateProjectIssuesNodeProjectV2IterationField includes the requested fields of the GraphQL type ProjectV2IterationField.
// The GraphQL type's documentation follows.
//
// An iteration field inside a project.
type PaginateProjectIssuesNodeProjectV2IterationField struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2IterationField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2IterationField) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2SingleSelectField includes the requested fields of the GraphQL type ProjectV2SingleSelectField.
// The GraphQL type's documentation follows.
//
// A single select field inside a project.
type PaginateProjectIssuesNodeProjectV2SingleSelectField struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2SingleSelectField.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2SingleSelectField) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2StatusUpdate includes the requested fields of the GraphQL type ProjectV2StatusUpdate.
// The GraphQL type's documentation follows.
//
// A status update within a project.
type PaginateProjectIssuesNodeProjectV2StatusUpdate struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2StatusUpdate.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2StatusUpdate) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2View includes the requested fields of the GraphQL type ProjectV2View.
// The GraphQL type's documentation follows.
//
// A view within a ProjectV2.
type PaginateProjectIssuesNodeProjectV2View struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2View.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2View) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeProjectV2Workflow includes the requested fields of the GraphQL type ProjectV2Workflow.
// The GraphQL type's documentation follows.
//
// A workflow inside a project.
type PaginateProjectIssuesNodeProjectV2Workflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeProjectV2Workflow.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeProjectV2Workflow) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePublicKey includes the requested fields of the GraphQL type PublicKey.
// The GraphQL type's documentation follows.
//
// A user's public key.
type PaginateProjectIssuesNodePublicKey struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePublicKey.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePublicKey) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type PaginateProjectIssuesNodePullRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequest) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequestCommit includes the requested fields of the GraphQL type PullRequestCommit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit part of a pull request.
type PaginateProjectIssuesNodePullRequestCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestCommit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestCommit) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequestCommitCommentThread includes the requested fields of the GraphQL type PullRequestCommitCommentThread.
// The GraphQL type's documentation follows.
//
// Represents a commit comment thread part of a pull request.
type PaginateProjectIssuesNodePullRequestCommitCommentThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestCommitCommentThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestCommitCommentThread) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodePullRequestReview includes the requested fields of the GraphQL type PullRequestReview.
// The GraphQL type's documentation follows.
//
// A review object for a given pull request.
type PaginateProjectIssuesNodePullRequestReview struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestReview.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestReview) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequestReviewComment includes the requested fields of the GraphQL type PullRequestReviewComment.
// The GraphQL type's documentation follows.
//
// A review comment associated with a given repository pull request.
type PaginateProjectIssuesNodePullRequestReviewComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestReviewComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestReviewComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequestReviewThread includes the requested fields of the GraphQL type PullRequestReviewThread.
// The GraphQL type's documentation follows.
//
// A threaded list of comments for a given pull request.
type PaginateProjectIssuesNodePullRequestReviewThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestReviewThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestReviewThread) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePullRequestThread includes the requested fields of the GraphQL type PullRequestThread.
// The GraphQL type's documentation follows.
//
// A threaded list of comments for a given pull request.
type PaginateProjectIssuesNodePullRequestThread struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePullRequestThread.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePullRequestThread) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePush includes the requested fields of the GraphQL type Push.
// The GraphQL type's documentation follows.
//
// A Git push.
type PaginateProjectIssuesNodePush struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePush.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePush) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodePushAllowance includes the requested fields of the GraphQL type PushAllowance.
// The GraphQL type's documentation follows.
//
// A team, user, or app who has the ability to push to a protected branch.
type PaginateProjectIssuesNodePushAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodePushAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodePushAllowance) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReaction includes the requested fields of the GraphQL type Reaction.
// The GraphQL type's documentation follows.
//
// An emoji reaction to a particular piece of content.
type PaginateProjectIssuesNodeReaction struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReaction.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReaction) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReadyForReviewEvent includes the requested fields of the GraphQL type ReadyForReviewEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'ready_for_review' event on a given pull request.
type PaginateProjectIssuesNodeReadyForReviewEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReadyForReviewEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReadyForReviewEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRef includes the requested fields of the GraphQL type Ref.
// The GraphQL type's documentation follows.
//
// Represents a Git reference.
type PaginateProjectIssuesNodeRef struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRef.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRef) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReferencedEvent includes the requested fields of the GraphQL type ReferencedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'referenced' event on a given `ReferencedSubject`.
type PaginateProjectIssuesNodeReferencedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReferencedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReferencedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRelease includes the requested fields of the GraphQL type Release.
// The GraphQL type's documentation follows.
//
// A release contains the content for a release.
type PaginateProjectIssuesNodeRelease struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRelease.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRelease) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReleaseAsset includes the requested fields of the GraphQL type ReleaseAsset.
// The GraphQL type's documentation follows.
//
// A release asset contains the content for a release asset.
type PaginateProjectIssuesNodeReleaseAsset struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReleaseAsset.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReleaseAsset) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRemovedFromMergeQueueEvent includes the requested fields of the GraphQL type RemovedFromMergeQueueEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'removed_from_merge_queue' event on a given pull request.
type PaginateProjectIssuesNodeRemovedFromMergeQueueEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRemovedFromMergeQueueEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRemovedFromMergeQueueEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRemovedFromProjectEvent includes the requested fields of the GraphQL type RemovedFromProjectEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'removed_from_project' event on a given issue or pull request.
type PaginateProjectIssuesNodeRemovedFromProjectEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRemovedFromProjectEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRemovedFromProjectEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRenamedTitleEvent includes the requested fields of the GraphQL type RenamedTitleEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'renamed' event on a given issue or pull request
type PaginateProjectIssuesNodeRenamedTitleEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRenamedTitleEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRenamedTitleEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReopenedEvent includes the requested fields of the GraphQL type ReopenedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'reopened' event on any `Closable`.
type PaginateProjectIssuesNodeReopenedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReopenedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReopenedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoAccessAuditEntry includes the requested fields of the GraphQL type RepoAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.access event.
type PaginateProjectIssuesNodeRepoAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoAccessAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoAddMemberAuditEntry includes the requested fields of the GraphQL type RepoAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.add_member event.
type PaginateProjectIssuesNodeRepoAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoAddTopicAuditEntry includes the requested fields of the GraphQL type RepoAddTopicAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.add_topic event.
type PaginateProjectIssuesNodeRepoAddTopicAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoAddTopicAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoAddTopicAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoArchivedAuditEntry includes the requested fields of the GraphQL type RepoArchivedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.archived event.
type PaginateProjectIssuesNodeRepoArchivedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoArchivedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoArchivedAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry includes the requested fields of the GraphQL type RepoChangeMergeSettingAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.change_merge_setting event.
type PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoChangeMergeSettingAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_anonymous_git_access event.
type PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigDisableAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_collaborators_only event.
type PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigDisableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableContributorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_contributors_only event.
type PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigDisableContributorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry includes the requested fields of the GraphQL type RepoConfigDisableSockpuppetDisallowedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.disable_sockpuppet_disallowed event.
type PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigDisableSockpuppetDisallowedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_anonymous_git_access event.
type PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigEnableAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableCollaboratorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_collaborators_only event.
type PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigEnableCollaboratorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableContributorsOnlyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_contributors_only event.
type PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigEnableContributorsOnlyAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry includes the requested fields of the GraphQL type RepoConfigEnableSockpuppetDisallowedAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.enable_sockpuppet_disallowed event.
type PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigEnableSockpuppetDisallowedAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigLockAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.lock_anonymous_git_access event.
type PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigLockAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry includes the requested fields of the GraphQL type RepoConfigUnlockAnonymousGitAccessAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.config.unlock_anonymous_git_access event.
type PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoConfigUnlockAnonymousGitAccessAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepoCreateAuditEntry includes the requested fields of the GraphQL type RepoCreateAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.create event.
type PaginateProjectIssuesNodeRepoCreateAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoCreateAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoCreateAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoDestroyAuditEntry includes the requested fields of the GraphQL type RepoDestroyAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.destroy event.
type PaginateProjectIssuesNodeRepoDestroyAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoDestroyAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoDestroyAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry includes the requested fields of the GraphQL type RepoRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.remove_member event.
type PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry includes the requested fields of the GraphQL type RepoRemoveTopicAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repo.remove_topic event.
type PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepoRemoveTopicAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type PaginateProjectIssuesNodeRepository struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepository.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepository) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryInvitation includes the requested fields of the GraphQL type RepositoryInvitation.
// The GraphQL type's documentation follows.
//
// An invitation for a user to be added to a repository.
type PaginateProjectIssuesNodeRepositoryInvitation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryInvitation.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryInvitation) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryMigration includes the requested fields of the GraphQL type RepositoryMigration.
// The GraphQL type's documentation follows.
//
// A GitHub Enterprise Importer (GEI) repository migration.
type PaginateProjectIssuesNodeRepositoryMigration struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryMigration.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryMigration) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryRule includes the requested fields of the GraphQL type RepositoryRule.
// The GraphQL type's documentation follows.
//
// A repository rule.
type PaginateProjectIssuesNodeRepositoryRule struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryRule.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryRule) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryRuleset includes the requested fields of the GraphQL type RepositoryRuleset.
// The GraphQL type's documentation follows.
//
// A repository ruleset.
type PaginateProjectIssuesNodeRepositoryRuleset struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryRuleset.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryRuleset) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryRulesetBypassActor includes the requested fields of the GraphQL type RepositoryRulesetBypassActor.
// The GraphQL type's documentation follows.
//
// A team or app that has the ability to bypass a rules defined on a ruleset
type PaginateProjectIssuesNodeRepositoryRulesetBypassActor struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryRulesetBypassActor.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryRulesetBypassActor) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepositoryTopic includes the requested fields of the GraphQL type RepositoryTopic.
// The GraphQL type's documentation follows.
//
// A repository-topic connects a repository to a topic.
type PaginateProjectIssuesNodeRepositoryTopic struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryTopic.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryTopic) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry includes the requested fields of the GraphQL type RepositoryVisibilityChangeDisableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repository_visibility_change.disable event.
type PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryVisibilityChangeDisableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry includes the requested fields of the GraphQL type RepositoryVisibilityChangeEnableAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a repository_visibility_change.enable event.
type PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryVisibilityChangeEnableAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeRepositoryVulnerabilityAlert includes the requested fields of the GraphQL type RepositoryVulnerabilityAlert.
// The GraphQL type's documentation follows.
//
// A Dependabot alert for a repository with a dependency affected by a security vulnerability.
type PaginateProjectIssuesNodeRepositoryVulnerabilityAlert struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeRepositoryVulnerabilityAlert.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeRepositoryVulnerabilityAlert) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeReviewDismissalAllowance includes the requested fields of the GraphQL type ReviewDismissalAllowance.
// The GraphQL type's documentation follows.
//
// A user, team, or app who has the ability to dismiss a review on a protected branch.
type PaginateProjectIssuesNodeReviewDismissalAllowance struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReviewDismissalAllowance.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReviewDismissalAllowance) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReviewDismissedEvent includes the requested fields of the GraphQL type ReviewDismissedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'review_dismissed' event on a given issue or pull request.
type PaginateProjectIssuesNodeReviewDismissedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReviewDismissedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReviewDismissedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReviewRequest includes the requested fields of the GraphQL type ReviewRequest.
// The GraphQL type's documentation follows.
//
// A request for a user to review a pull request.
type PaginateProjectIssuesNodeReviewRequest struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReviewRequest.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReviewRequest) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReviewRequestRemovedEvent includes the requested fields of the GraphQL type ReviewRequestRemovedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'review_request_removed' event on a given pull request.
type PaginateProjectIssuesNodeReviewRequestRemovedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReviewRequestRemovedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReviewRequestRemovedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeReviewRequestedEvent includes the requested fields of the GraphQL type ReviewRequestedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'review_requested' event on a given pull request.
type PaginateProjectIssuesNodeReviewRequestedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeReviewRequestedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeReviewRequestedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSavedReply includes the requested fields of the GraphQL type SavedReply.
// The GraphQL type's documentation follows.
//
// A Saved Reply is text a user can use to reply quickly.
type PaginateProjectIssuesNodeSavedReply struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSavedReply.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSavedReply) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSecurityAdvisory includes the requested fields of the GraphQL type SecurityAdvisory.
// The GraphQL type's documentation follows.
//
// A GitHub Security Advisory
type PaginateProjectIssuesNodeSecurityAdvisory struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSecurityAdvisory.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSecurityAdvisory) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSponsorsActivity includes the requested fields of the GraphQL type SponsorsActivity.
// The GraphQL type's documentation follows.
//
// An event related to sponsorship activity.
type PaginateProjectIssuesNodeSponsorsActivity struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorsActivity.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorsActivity) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSponsorsListing includes the requested fields of the GraphQL type SponsorsListing.
// The GraphQL type's documentation follows.
//
// A GitHub Sponsors listing.
type PaginateProjectIssuesNodeSponsorsListing struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorsListing.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorsListing) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSponsorsListingFeaturedItem includes the requested fields of the GraphQL type SponsorsListingFeaturedItem.
// The GraphQL type's documentation follows.
//
// A record that is promoted on a GitHub Sponsors profile.
type PaginateProjectIssuesNodeSponsorsListingFeaturedItem struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorsListingFeaturedItem.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorsListingFeaturedItem) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeSponsorsTier includes the requested fields of the GraphQL type SponsorsTier.
// The GraphQL type's documentation follows.
//
// A GitHub Sponsors tier associated with a GitHub Sponsors listing.
type PaginateProjectIssuesNodeSponsorsTier struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorsTier.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorsTier) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSponsorship includes the requested fields of the GraphQL type Sponsorship.
// The GraphQL type's documentation follows.
//
// A sponsorship relationship between a sponsor and a maintainer
type PaginateProjectIssuesNodeSponsorship struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorship.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorship) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSponsorshipNewsletter includes the requested fields of the GraphQL type SponsorshipNewsletter.
// The GraphQL type's documentation follows.
//
// An update sent to sponsors of a user or organization on GitHub Sponsors.
type PaginateProjectIssuesNodeSponsorshipNewsletter struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSponsorshipNewsletter.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSponsorshipNewsletter) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeStatus includes the requested fields of the GraphQL type Status.
// The GraphQL type's documentation follows.
//
// Represents a commit status.
type PaginateProjectIssuesNodeStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeStatus) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeStatusCheckRollup includes the requested fields of the GraphQL type StatusCheckRollup.
// The GraphQL type's documentation follows.
//
// Represents the rollup for both the check runs and status for a commit.
type PaginateProjectIssuesNodeStatusCheckRollup struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeStatusCheckRollup.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeStatusCheckRollup) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeStatusContext includes the requested fields of the GraphQL type StatusContext.
// The GraphQL type's documentation follows.
//
// Represents an individual commit status context
type PaginateProjectIssuesNodeStatusContext struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeStatusContext.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeStatusContext) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeSubscribedEvent includes the requested fields of the GraphQL type SubscribedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'subscribed' event on a given `Subscribable`.
type PaginateProjectIssuesNodeSubscribedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeSubscribedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeSubscribedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTag includes the requested fields of the GraphQL type Tag.
// The GraphQL type's documentation follows.
//
// Represents a Git tag.
type PaginateProjectIssuesNodeTag struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTag.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTag) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeam includes the requested fields of the GraphQL type Team.
// The GraphQL type's documentation follows.
//
// A team of users in an organization.
type PaginateProjectIssuesNodeTeam struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeam.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeam) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeamAddMemberAuditEntry includes the requested fields of the GraphQL type TeamAddMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.add_member event.
type PaginateProjectIssuesNodeTeamAddMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamAddMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamAddMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry includes the requested fields of the GraphQL type TeamAddRepositoryAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.add_repository event.
type PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamAddRepositoryAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry includes the requested fields of the GraphQL type TeamChangeParentTeamAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.change_parent_team event.
type PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamChangeParentTeamAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeTeamDiscussion includes the requested fields of the GraphQL type TeamDiscussion.
// The GraphQL type's documentation follows.
//
// A team discussion.
type PaginateProjectIssuesNodeTeamDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamDiscussion) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeamDiscussionComment includes the requested fields of the GraphQL type TeamDiscussionComment.
// The GraphQL type's documentation follows.
//
// A comment on a team discussion.
type PaginateProjectIssuesNodeTeamDiscussionComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamDiscussionComment.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamDiscussionComment) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry includes the requested fields of the GraphQL type TeamRemoveMemberAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.remove_member event.
type PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamRemoveMemberAuditEntry) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry includes the requested fields of the GraphQL type TeamRemoveRepositoryAuditEntry.
// The GraphQL type's documentation follows.
//
// Audit log entry for a team.remove_repository event.
type PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTeamRemoveRepositoryAuditEntry) GetTypename() string {
	return v.Typename
}

// PaginateProjectIssuesNodeTopic includes the requested fields of the GraphQL type Topic.
// The GraphQL type's documentation follows.
//
// A topic aggregates entities that are related to a subject.
type PaginateProjectIssuesNodeTopic struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTopic.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTopic) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTransferredEvent includes the requested fields of the GraphQL type TransferredEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'transferred' event on a given issue or pull request.
type PaginateProjectIssuesNodeTransferredEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTransferredEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTransferredEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeTree includes the requested fields of the GraphQL type Tree.
// The GraphQL type's documentation follows.
//
// Represents a Git tree.
type PaginateProjectIssuesNodeTree struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeTree.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeTree) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnassignedEvent includes the requested fields of the GraphQL type UnassignedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unassigned' event on any assignable object.
type PaginateProjectIssuesNodeUnassignedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnassignedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnassignedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnlabeledEvent includes the requested fields of the GraphQL type UnlabeledEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unlabeled' event on a given issue or pull request.
type PaginateProjectIssuesNodeUnlabeledEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnlabeledEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnlabeledEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnlockedEvent includes the requested fields of the GraphQL type UnlockedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unlocked' event on a given issue or pull request.
type PaginateProjectIssuesNodeUnlockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnlockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnlockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent includes the requested fields of the GraphQL type UnmarkedAsDuplicateEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unmarked_as_duplicate' event on a given issue or pull request.
type PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnmarkedAsDuplicateEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnpinnedEvent includes the requested fields of the GraphQL type UnpinnedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unpinned' event on a given issue or pull request.
type PaginateProjectIssuesNodeUnpinnedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnpinnedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnpinnedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUnsubscribedEvent includes the requested fields of the GraphQL type UnsubscribedEvent.
// The GraphQL type's documentation follows.
//
// Represents an 'unsubscribed' event on a given `Subscribable`.
type PaginateProjectIssuesNodeUnsubscribedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUnsubscribedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUnsubscribedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type PaginateProjectIssuesNodeUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUser.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUser) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUserBlockedEvent includes the requested fields of the GraphQL type UserBlockedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'user_blocked' event on a given user.
type PaginateProjectIssuesNodeUserBlockedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUserBlockedEvent.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUserBlockedEvent) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUserContentEdit includes the requested fields of the GraphQL type UserContentEdit.
// The GraphQL type's documentation follows.
//
// An edit on user content
type PaginateProjectIssuesNodeUserContentEdit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUserContentEdit.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUserContentEdit) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUserList includes the requested fields of the GraphQL type UserList.
// The GraphQL type's documentation follows.
//
// A user-curated list of repositories
type PaginateProjectIssuesNodeUserList struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUserList.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUserList) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeUserStatus includes the requested fields of the GraphQL type UserStatus.
// The GraphQL type's documentation follows.
//
// The user's description of what they're currently doing.
type PaginateProjectIssuesNodeUserStatus struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeUserStatus.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeUserStatus) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeVerifiableDomain includes the requested fields of the GraphQL type VerifiableDomain.
// The GraphQL type's documentation follows.
//
// A domain that can be verified or approved for an organization or an enterprise.
type PaginateProjectIssuesNodeVerifiableDomain struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeVerifiableDomain.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeVerifiableDomain) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeWorkflow includes the requested fields of the GraphQL type Workflow.
// The GraphQL type's documentation follows.
//
// A workflow contains meta information about an Actions workflow file.
type PaginateProjectIssuesNodeWorkflow struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeWorkflow.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeWorkflow) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeWorkflowRun includes the requested fields of the GraphQL type WorkflowRun.
// The GraphQL type's documentation follows.
//
// A workflow run.
type PaginateProjectIssuesNodeWorkflowRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeWorkflowRun.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeWorkflowRun) GetTypename() string { return v.Typename }

// PaginateProjectIssuesNodeWorkflowRunFile includes the requested fields of the GraphQL type WorkflowRunFile.
// The GraphQL type's documentation follows.
//
// An executed workflow file for a workflow run.
type PaginateProjectIssuesNodeWorkflowRunFile struct {
	Typename string `json:"__typename"`
}

// GetTypename returns PaginateProjectIssuesNodeWorkflowRunFile.Typename, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesNodeWorkflowRunFile) GetTypename() string { return v.Typename }

// PaginateProjectIssuesResponse is returned by PaginateProjectIssues on success.
type PaginateProjectIssuesResponse struct {
	// Fetches an object given its ID.
	Node PaginateProjectIssuesNode `json:"-"`
}

// GetNode returns PaginateProjectIssuesResponse.Node, and is useful for accessing the field via an interface.
func (v *PaginateProjectIssuesResponse) GetNode() PaginateProjectIssuesNode { return v.Node }

func (v *PaginateProjectIssuesResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*PaginateProjectIssuesResponse
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.PaginateProjectIssuesResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalPaginateProjectIssuesNode(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal PaginateProjectIssuesResponse.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalPaginateProjectIssuesResponse struct {
	Node json.RawMessage `json:"node"`
}

func (v *PaginateProjectIssuesResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *PaginateProjectIssuesResponse) __premarshalJSON() (*__premarshalPaginateProjectIssuesResponse, error) {
	var retval __premarshalPaginateProjectIssuesResponse

	{

		dst := &retval.Node
		src := v.Node
		var err error
		*dst, err = __marshalPaginateProjectIssuesNode(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal PaginateProjectIssuesResponse.Node: %w", err)
		}
	}
	return &retval, nil
}

// __FetchUserProjectInput is used internally by genqlient
type __FetchUserProjectInput struct {
	UserId        string `json:"userId"`
	ProjectNumber int    `json:"projectNumber"`
}

// GetUserId returns __FetchUserProjectInput.UserId, and is useful for accessing the field via an interface.
func (v *__FetchUserProjectInput) GetUserId() string { return v.UserId }

// GetProjectNumber returns __FetchUserProjectInput.ProjectNumber, and is useful for accessing the field via an interface.
func (v *__FetchUserProjectInput) GetProjectNumber() int { return v.ProjectNumber }

// __PaginateProjectIssuesInput is used internally by genqlient
type __PaginateProjectIssuesInput struct {
	ProjectId string `json:"projectId"`
}

// GetProjectId returns __PaginateProjectIssuesInput.ProjectId, and is useful for accessing the field via an interface.
func (v *__PaginateProjectIssuesInput) GetProjectId() string { return v.ProjectId }

// The query or mutation executed by FetchUserProject.
const FetchUserProject_Operation = `
query FetchUserProject ($userId: String!, $projectNumber: Int!) {
	user(login: $userId) {
		projectV2(number: $projectNumber) {
			id
		}
	}
}
`

func FetchUserProject(
	ctx_ context.Context,
	client_ graphql.Client,
	userId string,
	projectNumber int,
) (*FetchUserProjectResponse, error) {
	req_ := &graphql.Request{
		OpName: "FetchUserProject",
		Query:  FetchUserProject_Operation,
		Variables: &__FetchUserProjectInput{
			UserId:        userId,
			ProjectNumber: projectNumber,
		},
	}
	var err_ error

	var data_ FetchUserProjectResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by PaginateProjectIssues.
const PaginateProjectIssues_Operation = `
query PaginateProjectIssues ($projectId: ID!) {
	node(id: $projectId) {
		__typename
		... on ProjectV2 {
			items(first: 100) {
				nodes {
					id
					fieldValues(first: 8) {
						nodes {
							__typename
							... on ProjectV2ItemFieldTextValue {
								text
								field {
									__typename
									... on ProjectV2FieldCommon {
										name
									}
								}
							}
							... on ProjectV2ItemFieldSingleSelectValue {
								name
								field {
									__typename
									... on ProjectV2FieldCommon {
										name
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
`

func PaginateProjectIssues(
	ctx_ context.Context,
	client_ graphql.Client,
	projectId string,
) (*PaginateProjectIssuesResponse, error) {
	req_ := &graphql.Request{
		OpName: "PaginateProjectIssues",
		Query:  PaginateProjectIssues_Operation,
		Variables: &__PaginateProjectIssuesInput{
			ProjectId: projectId,
		},
	}
	var err_ error

	var data_ PaginateProjectIssuesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
